{"version":3,"sources":["Jenkins.js","AsOf.js","Summarize.js","ComputerDisplay.js","QueueDisplay.js","BuildHistoryDisplay.js","GitHubStatusDisplay.js","PerfHistoryDisplay.js","GithubAuthorize.js","utils.js","PrDisplay.js","JobCorrelationHeatmap.js","GitHubActionsDisplay.js","App.js","index.js"],"names":["jenkins","s","url","options","a","undefined","axios","get","params","then","response","r","catch","error","data","urls","requests","map","err","all","result","this","v","AsOf","props","updateStatus","currentTime","updateTime","interval","connectedIn","timeString","Date","toLocaleTimeString","className","summarize_job","job","replace","summarize_date","timestamp","date","toLocaleDateString","toLocaleString","hour","minute","hour12","month","day","weekday","summarize_ago","today","seconds","hours","Math","floor","minutes","time","String","seconds2time","summarize_url","m","RegExp","exec","centsPerHour","osx","master","packet","rocm","centsToDollars","x","style","currency","ComputerDisplay","state","computer","update","setInterval","bind","clearInterval","setState","tree","Map","forEach","c","k","n","node","displayName","test","assignedLabels","some","l","name","classify_node","busy","total","offline","idle","set","totalCost","perCost","rows","entries","sort","kv","cost","busy_nodes","filter","executors","length","currentExecutable","b","running_rows","executable","href","running_map","task","cumulative_time","delta_ago","colSpan","Component","QueueDisplay","items","queue","why_map","q","why","summarize_why","why_rows","why_v","textAlign","paddingRight","task_map","task_rows","slice","task_v","width","textOverflow","maxWidth","overflow","size","jobs_on_pr","binary_and_smoke_tests_on_pr","is_success","is_failure","getJobName","subBuild","baseJobName","jobName","BuildHistoryDisplay","initialState","prefs_str","localStorage","getItem","prefs","JSON","parse","builds","known_jobs","showStale","username","showNotifications","Notification","permission","requestPermission","prevProps","setItem","stringify","get_github_commit_statuses","collect_known_jobs_set","compareFun","y","sx","e","startsWith","sy","topBuild","subBuilds","go","build","_class","known_jobs_set","add","add_jobs","jobs","index","commitId","job_name","github_commit_statuses","hasOwnProperty","duration","status","build_url","commit","i","changeSet","push","batch_get","request","depth","allBuilds","Set","props_mode","mode","Object","keys","endsWith","includes","found","values","sb_map","collect_jobs_from_github_status","still_unknown_set","consecutive_failure_count","sb","has","count","delete","key","body","known_jobs_head","durationScale","d3","rangeRound","domain","seen_prs","unknownCost","inProgressCost","status_cols","j","cell","dur","parse_duration","this_cost","ceil","perf_report","cellHref","link","target","alt","role","color","aria-label","is_aborted","is_pending","overlay","mouseLeaveDelay","placement","destroyTooltipOnHide","fontFamily","padding","renderPullRequestNumber","comment","match","renderCauses","defaultCause","actions","action","causes","cause","shortDescription","pull_link","pull_id","isRebuild","isPullRequest","upstreamProject","author","desc","stale","find","parameters","param","value","getPullParams","title","number","getPushedBy","reverse","msg","whenString","height","type","checked","onChange","htmlFor","backgroundColor","position","zIndex","nightly_run_on_pr","objToStrMap","obj","strMap","showServiceJobs","jobNameFilter","branch","build_prefix","url_prefix","commits","id","is_nightly","isDockerJob","isGCJob","visible_jobs","shouldShowJob","visible_jobs_head","is_skipped","is_infra_failure","message","split","ROUND_PRECISION","round_float","mean","round","PerfHistoryDisplay","indexes","console","log","run","relpath","standard_benchmark","benchmark_index","benchmark","build_benchmark_mean","build_benchmark_index","prev_mean","pytorch_version","delta","colkey","prev_delta","result_icon","AuthorizeGitHub","loggedin","URL","window","location","code","searchParams","fetch","json","token","alert","formatBytes","MB","toFixed","GB","parseXml","xml","arrayTags","dom","DOMParser","parseFromString","ActiveXObject","Error","async","loadXML","parseError","reason","srcText","parseNode","xmlNode","nodeName","jsonNode","existing","Array","isArray","indexOf","attributes","attribute","nodeValue","childNodes","trim","asyncAll","functions","invoked","f","Promise","query","pat","method","headers","Authorization","Accept","github","graphql","s3","prefix","URLSearchParams","delimiter","text","PrDisplay","pr_number","pr_result","pr","repository","pullRequest","workflow_runs","nodes","checkSuites","workflowRun","databaseId","artifacts","runs","promises","s3_artifacts","prefixes","extractItem","ListBucketResult","prefixItem","Prefix","contents","content","makeArtifact","args","expired","kind","size_in_bytes","run_index","checks","checkRuns","check","detailsUrl","artifact","Key","parseInt","Size","artifactsElement","checksElement","card","Card","Body","Title","workflow","JobCorrelationHeatmap","all_jobs","passes","seen_names","correlationMatrix","addFailure","failure1","failure2","failures","job_names","fullMatrix","name1","row","name2","base","cache","job_index","allSettled","correlations","correlateJobs","model","defaultTooltipTemplate","theme","background","label","el","document","getElementById","innerHTML","usageStatistics","xAxis","formatter","yAxis","tooltip","template","tooltipTemplate","categories","series","Chart","heatmapChart","GitHubActionsDisplay","actions_statuses","dates","last_updated","item","data_series","lineChart","Status","AuthorizeGithubRoute","LogoutGitHub","removeItem","Redirect","to","Build","search","Build1","Build2","PrPage","PrRoute","Route","exact","path","component","BuildRoute","Build1Route","Build2Route","TorchBenchRoute","App","basename","Link","trigger","Switch","ReactDOM","render"],"mappings":"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","file":"static/js/main.e4c37aa7.chunk.js","sourcesContent":["// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport axios from \"axios\";\n\nexport class Jenkins {\n  url(s) {\n    return \"https://ci.pytorch.org/jenkins/\" + s + \"/api/json\";\n  }\n  link(s) {\n    return \"https://ci.pytorch.org/jenkins/\" + s;\n  }\n\n  async get(url, options) {\n    if (options === undefined) options = {};\n    var r;\n    await axios\n      .get(url, { params: options })\n      .then((response) => {\n        r = response;\n      })\n      .catch((error) => {\n        // console.log(\"error.response: \", error.response)\n      });\n    if (typeof r !== \"undefined\") {\n      return r.data;\n    } else {\n      return null;\n    }\n  }\n\n  async batch_get(urls, options) {\n    if (options === undefined) options = {};\n    let r;\n    let requests = urls.map((url) => {\n      return axios.get(url, { params: options }).then(\n        (response) => ({ response }),\n        (err) => ({ err })\n      );\n    });\n\n    await axios\n      .all(requests)\n      .then((response) => {\n        r = response;\n      })\n      .catch((error) => {\n        // console.log(\"error.response: \", error.response)\n      });\n    if (typeof r !== \"undefined\") {\n      return r.map((result) => {\n        if (result.response) {\n          return result.response.data;\n        }\n        return null;\n      });\n    } else {\n      return null;\n    }\n  }\n\n  async computer(options) {\n    return this.get(this.url(\"computer\"), options);\n  }\n  async queue(options) {\n    return this.get(this.url(\"queue\"), options);\n  }\n  async job(v, options) {\n    return this.get(this.url(\"job/\" + v), options);\n  }\n}\n\nconst jenkins = new Jenkins();\nexport default jenkins;\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Fragment } from \"react\";\n\nexport default function AsOf(props) {\n  const updateStatus =\n    props.currentTime - props.updateTime > props.interval ? (\n      \"disconnected\"\n    ) : (\n      <Fragment>connected in {props.connectedIn}ms</Fragment>\n    );\n  const timeString =\n    props.updateTime - new Date(0) === 0 ? (\n      <Fragment>pending</Fragment>\n    ) : (\n      <Fragment>\n        as of {props.updateTime.toLocaleTimeString()}; {updateStatus}\n      </Fragment>\n    );\n  return <span className={updateStatus}>({timeString})</span>;\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nexport function summarize_job(job) {\n  return job\n    .replace(/^pytorch-/, \"\")\n    .replace(/-trigger$/, \"\")\n    .replace(/^private\\//, \"\")\n    .replace(/^ccache-cleanup-/, \"\")\n    .replace(/_ci\\/circleci: /, \"\")\n    .replace(/AAA_/, \"\");\n}\n\nexport function summarize_date(timestamp) {\n  const date = new Date(timestamp);\n  const today = new Date();\n  if (today.toLocaleDateString() === date.toLocaleDateString()) {\n    return date.toLocaleString(\"en-US\", {\n      hour: \"numeric\",\n      minute: \"numeric\",\n      hour12: true,\n    });\n  } else {\n    return date.toLocaleString(\"en-US\", {\n      month: \"short\",\n      day: \"numeric\",\n      weekday: \"short\",\n    });\n  }\n}\n\n// https://stackoverflow.com/questions/6312993/javascript-seconds-to-time-string-with-format-hhmmss\nexport function seconds2time(seconds) {\n  let hours = Math.floor(seconds / 3600);\n  let minutes = Math.floor((seconds - hours * 3600) / 60);\n  seconds = seconds - hours * 3600 - minutes * 60;\n  let time = \"\";\n\n  if (hours !== 0) {\n    time = hours + \":\";\n  }\n  if (minutes !== 0 || time !== \"\") {\n    minutes = minutes < 10 && time !== \"\" ? \"0\" + minutes : String(minutes);\n    time += minutes + \":\";\n  }\n  if (time === \"\") {\n    time = seconds + \"s\";\n  } else {\n    time += seconds < 10 ? \"0\" + seconds : String(seconds);\n  }\n  return time;\n}\n\nexport function summarize_ago(timestamp) {\n  const date = new Date(timestamp);\n  const today = new Date();\n  return seconds2time(Math.floor((today - date) / 1000));\n}\n\nexport function summarize_project(project) {\n  return project.replace(/-builds$/, \"\");\n}\n\nexport function summarize_url(url) {\n  let m;\n  if (\n    (m = RegExp(\n      \"^https://ci\\\\.pytorch\\\\.org/jenkins/job/([^/]+)/job/([^/]+)/\"\n    ).exec(url)) !== null\n  ) {\n    return summarize_project(m[1]) + \"/\" + summarize_job(m[2]);\n  }\n  if (\n    (m = RegExp(\"https://ci\\\\.pytorch\\\\.org/jenkins/job/([^/]+)/\").exec(\n      url\n    )) !== null\n  ) {\n    return m[1];\n  }\n  return url;\n}\n\n// Last updated 2018-03-01\nexport const centsPerHour = {\n  \"linux-cpu\": 17, // c5.xlarge\n  \"linux-bigcpu\": 68, // c5.4xlarge\n  \"linux-gpu\": 228, // g3.8xlarge\n  \"linux-tc-gpu\": 228, // g3.8xlarge\n  \"linux-multigpu\": 456, // g3.16xlarge\n  \"linux-cpu-ccache\": 17, // c5.xlarge\n  \"win-cpu\": 34, // c5.2xlarge\n  \"win-gpu\": 114, // g3.4xlarge\n  osx: 13900 / 30 / 24, // MacStadium mini i7 250 elite\n  master: 17, // c5.xlarge\n  packet: 40, // ???? Packet server ???\n  rocm: 0, // we don't pay for it\n  \"tc-gpu\": 114, // g3.4xlarge\n};\n\nexport function centsToDollars(x) {\n  if (x === undefined) return \"?\";\n  // I feel a little dirty resorting to floating point math\n  // here...\n  return (x / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  });\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Component } from \"react\";\nimport jenkins from \"./Jenkins.js\";\nimport AsOf from \"./AsOf.js\";\nimport {\n  summarize_ago,\n  summarize_url,\n  centsToDollars,\n  centsPerHour,\n} from \"./Summarize.js\";\n\nexport default class ComputerDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      computer: [],\n      currentTime: new Date(),\n      updateTime: new Date(0),\n      connectedIn: 0,\n    };\n  }\n  componentDidMount() {\n    this.update();\n    this.interval = setInterval(this.update.bind(this), this.props.interval);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  async update() {\n    const currentTime = new Date();\n    this.setState({ currentTime: currentTime });\n    const data = await jenkins.computer({\n      tree: `computer[\n                offline,\n                idle,\n                displayName,\n                assignedLabels[name],\n                executors[\n                  currentExecutable[\n                    timestamp,\n                    estimatedDuration,\n                    url,\n                    building\n                  ],\n                  idle\n                ]\n              ]`.replace(/\\s+/g, \"\"),\n    });\n    data.updateTime = new Date();\n    data.connectedIn = data.updateTime - currentTime;\n    this.setState(data);\n  }\n  render() {\n    function classify_node(n) {\n      const node = n.displayName;\n      if (/^c5.xlarge-i-.*$/.test(node)) {\n        return \"linux-cpu\";\n      }\n      if (/^c5.4xlarge-i-.*$/.test(node)) {\n        return \"linux-bigcpu\";\n      }\n      if (/^g3.8xlarge-i-.*$/.test(node)) {\n        if (n.assignedLabels.some((l) => l.name === \"tc_gpu\")) {\n          return \"linux-tc-gpu\";\n        } else {\n          return \"linux-gpu\";\n        }\n      }\n      if (/^g3.16xlarge-i-.*$/.test(node)) {\n        return \"linux-multigpu\";\n      }\n      if (/^worker-c5-xlarge-.*$/.test(node)) {\n        return \"linux-cpu-ccache\";\n      }\n      if (/^worker-macos-high-sierra-.*$/.test(node)) {\n        return \"osx\";\n      }\n      if (/^worker-win-c5.2xlarge-i-.*$/.test(node)) {\n        return \"win-cpu\";\n      }\n      if (/^worker-win-g3.4xlarge-i-.*$/.test(node)) {\n        return \"win-gpu\";\n      }\n      if (/^worker-osuosl-ppc64le-cpu-.*$/.test(node)) {\n        return \"ppc\";\n      }\n      if (/^worker-packet-type-1-.*$/.test(node)) {\n        return \"packet\";\n      }\n      if (/^jenkins-worker-rocm-.*$/.test(node)) {\n        return \"rocm\";\n      }\n      if (/^worker-g3-4xlarge-.*$/.test(node)) {\n        return \"tc-gpu\";\n      }\n      return node;\n    }\n\n    const map = new Map();\n    this.state.computer.forEach((c) => {\n      const k = classify_node(c);\n      let v = map.get(k);\n      if (v === undefined) v = { busy: 0, total: 0 };\n      if (!c.offline) {\n        v.total++;\n        if (!c.idle) v.busy++;\n      }\n      map.set(k, v);\n    });\n\n    let totalCost = 0;\n    map.forEach((v, k) => {\n      const perCost = centsPerHour[k];\n      if (perCost !== undefined) {\n        v.totalCost = perCost * v.total;\n        totalCost += v.totalCost;\n      }\n    });\n\n    const rows = [...map.entries()].sort().map((kv) => {\n      const cost = centsToDollars(kv[1].totalCost);\n      return (\n        <tr key={kv[0]}>\n          <th>{kv[0]}</th>\n          <td>\n            {kv[1].busy} / {kv[1].total}\n          </td>\n          <td className=\"ralign\">{cost}/hr</td>\n        </tr>\n      );\n    });\n\n    const busy_nodes = this.state.computer.filter(\n      (c) =>\n        !c.idle &&\n        c.displayName !== \"master\" &&\n        c.executors.length > 0 &&\n        c.executors[0].currentExecutable\n    );\n    busy_nodes.sort(\n      (a, b) =>\n        a.executors[0].currentExecutable.timestamp -\n        b.executors[0].currentExecutable.timestamp\n    );\n    const running_rows = busy_nodes.map((c) => {\n      const executable = c.executors[0].currentExecutable;\n      return (\n        <tr key={c.displayName}>\n          <td className=\"left-cell\">{summarize_ago(executable.timestamp)}</td>\n          <td>\n            <a href={executable.url}>{summarize_url(executable.url)}</a>\n          </td>\n        </tr>\n      );\n    });\n\n    const running_map = new Map();\n    busy_nodes.forEach((c) => {\n      const executable = c.executors[0].currentExecutable;\n      const task = summarize_url(executable.url);\n      let v = running_map.get(task);\n      if (v === undefined) {\n        v = { total: 0, cumulative_time: 0 };\n        running_map.set(task, v);\n      }\n      v.total++;\n\n      function delta_ago(timestamp) {\n        const date = new Date(timestamp);\n        const today = new Date();\n        return (today - date) / 1000;\n      }\n      v.cumulative_time += delta_ago(executable.timestamp);\n    });\n\n    /*\n    const running_summary = [...running_map.entries()].sort((a, b) => b[1].total - a[1].total).map(task_v => {\n      const task = task_v[0];\n      const v = task_v[1];\n      return <tr key={task}><td style={{textAlign: \"right\", paddingRight: 15}}>{v.total}</td><th>{task}</th></tr>\n    });\n\n    const cumulative_running_time_summary = [...running_map.entries()].sort((a, b) => b[1].cumulative_time - a[1].cumulative_time).map(task_v => {\n      const task = task_v[0];\n      const v = task_v[1];\n      return <tr key={task}><td style={{textAlign: \"right\", paddingRight: 15}}>{seconds2time(Math.floor(v.cumulative_time))}</td><th>{task}</th></tr>\n    });\n    */\n\n    return (\n      <div>\n        <h2>\n          Computers{\" \"}\n          <AsOf\n            interval={this.props.interval}\n            currentTime={this.state.currentTime}\n            updateTime={this.state.updateTime}\n            connectedIn={this.state.connectedIn}\n          />\n        </h2>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <table>\n                  <tbody>{rows}</tbody>\n                  <tfoot>\n                    <tr>\n                      <td></td>\n                      <td className=\"ralign\" colSpan=\"2\">\n                        {centsToDollars(totalCost * 24 * 30)}/mo\n                      </td>\n                    </tr>\n                  </tfoot>\n                </table>\n              </td>\n              <td className=\"right-cell\">\n                <table>\n                  <tbody>{running_rows}</tbody>\n                </table>\n              </td>\n              {/*\n              <td className=\"right-cell\">\n                <table>\n                  <tbody>\n                    {running_summary}\n                  </tbody>\n                </table>\n              </td>\n              <td className=\"right-cell\">\n                <table>\n                  <tbody>\n                    {cumulative_running_time_summary}\n                  </tbody>\n                </table>\n              </td>\n              */}\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Component } from \"react\";\nimport jenkins from \"./Jenkins.js\";\nimport AsOf from \"./AsOf.js\";\nimport { summarize_url } from \"./Summarize.js\";\n\nexport default class QueueDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      currentTime: new Date(),\n      updateTime: new Date(0),\n      connectedIn: 0,\n    };\n  }\n  componentDidMount() {\n    this.update();\n    this.interval = setInterval(this.update.bind(this), this.props.interval);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  async update() {\n    const currentTime = new Date();\n    this.setState({ currentTime: currentTime });\n    const data = await jenkins.queue();\n    data.updateTime = new Date();\n    data.connectedIn = data.updateTime - currentTime;\n    this.setState(data);\n  }\n  render() {\n    function summarize_why(why) {\n      return why\n        .replace(/^Waiting for next available executor on/, \"Needs\")\n        .replace(/docker&&cpu&&ccache/, \"linux-cpu-ccache\")\n        .replace(/[^ ]+cpu_ccache.+/, \"linux-cpu-ccache\")\n        .replace(/docker&&cpu&&!ccache/, \"linux-cpu\")\n        .replace(/docker&&cpu/, \"linux-cpu-any\")\n        .replace(/docker&&gpu/, \"linux-gpu\")\n        .replace(/docker&&bigcpu/, \"linux-bigcpu\")\n        .replace(/windows&&cpu/, \"windows-cpu\")\n        .replace(/windows&&gpu/, \"windows-gpu\")\n        .replace(/g3.8xlarge-i-[^ ]+/, \"linux-gpu\")\n        .replace(/g3.16xlarge-i-[^ ]+/, \"linux-multigpu\")\n        .replace(/worker-win-c5.2xlarge-i-[^ ]+/, \"windows-cpu\")\n        .replace(/worker-win-g3.4xlarge-i-[^ ]+/, \"windows-gpu\");\n    }\n\n    const why_map = new Map();\n    this.state.items.forEach((q) => {\n      const why = summarize_why(q.why);\n      let v = why_map.get(why);\n      if (v === undefined) {\n        v = { total: 0 };\n        why_map.set(why, v);\n      }\n      v.total++;\n    });\n\n    const why_rows = [...why_map.entries()].sort().map((why_v) => {\n      const why = why_v[0];\n      const v = why_v[1];\n      return (\n        <tr key={why}>\n          <td style={{ textAlign: \"right\", paddingRight: 15 }}>{v.total}</td>\n          <th>{why}</th>\n        </tr>\n      );\n    });\n\n    const task_map = new Map();\n    this.state.items.forEach((q) => {\n      const task = summarize_url(q.task.url);\n      let v = task_map.get(task);\n      if (v === undefined) {\n        v = { total: 0 };\n        task_map.set(task, v);\n      }\n      v.total++;\n    });\n\n    const task_map_max = 10;\n    const task_rows = [...task_map.entries()]\n      .sort((a, b) => b[1].total - a[1].total)\n      .slice(0, task_map_max)\n      .map((task_v) => {\n        const task = task_v[0];\n        const v = task_v[1];\n        return (\n          <tr key={task}>\n            <td style={{ textAlign: \"right\", paddingRight: 15 }}>{v.total}</td>\n            <th>{task}</th>\n          </tr>\n        );\n      });\n\n    return (\n      <div>\n        <h2>\n          Queue{\" \"}\n          <AsOf\n            interval={this.props.interval}\n            connectedIn={this.state.connectedIn}\n            currentTime={this.state.currentTime}\n            updateTime={this.state.updateTime}\n          />\n        </h2>\n        <table>\n          <tbody>\n            <tr>\n              <td\n                width={300}\n                style={{\n                  textOverflow: \"clip\",\n                  maxWidth: 300,\n                  overflow: \"hidden\",\n                }}\n              >\n                <table>\n                  <tbody>{why_rows}</tbody>\n                </table>\n              </td>\n              <td className=\"right-cell\" width={300}>\n                <table>\n                  <tbody>\n                    {task_rows}\n                    <tr>\n                      <td></td>\n                      <th>{task_map.size > task_map_max ? \"...\" : \"\"}</th>\n                    </tr>\n                  </tbody>\n                </table>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Component, Fragment } from \"react\";\nimport jenkins from \"./Jenkins.js\";\nimport AsOf from \"./AsOf.js\";\nimport {\n  summarize_job,\n  summarize_date,\n  centsToDollars,\n  centsPerHour,\n} from \"./Summarize.js\";\nimport * as d3 from \"d3v4\";\nimport parse_duration from \"parse-duration\";\nimport Tooltip from \"rc-tooltip\";\n\nvar jobs_on_pr = [\n  \"_\",\n  \"setup\",\n  \"caffe2-py2-cuda9.0-cudnn7-windows\",\n  \"caffe2-py2-devtoolset7-rocmrpm-centos7.5\",\n  \"py3.6-clang7-rocmdeb-ubuntu16.04\",\n  \"win-ws2016-cuda9-cudnn7-py3\",\n\n  \"pytorch_linux_xenial_py2_7_9\",\n  \"pytorch_linux_xenial_cuda9_cudnn7_py3\",\n  \"pytorch_linux_xenial_py3_clang5_asan\",\n  \"pytorch_linux_xenial_py3_6_gcc5_4\",\n  \"pytorch_libtorch_linux_xenial_cuda9_cudnn7_py3\",\n\n  \"caffe2_py2_mkl_ubuntu16_04\",\n  \"caffe2_py3_5_cuda10_1_cudnn7_ubuntu16_04\",\n  \"caffe2_onnx_py2_gcc5_ubuntu16_04\",\n  \"caffe2_onnx_main_py3_6_clang7_ubuntu16_04\",\n  \"caffe2_onnx_ort1_py3_6_clang7_ubuntu16_04\",\n  \"caffe2_onnx_ort2_py3_6_clang7_ubuntu16_04\",\n  \"caffe2_py2_clang7_ubuntu16_04\",\n  \"caffe2_cmake_cuda9_0_cudnn7_ubuntu16_04\",\n  \"caffe2_py3_6_devtoolset7_cuda9_0_cudnn7_centos7\",\n\n  \"binary_linux_manywheel_2_7mu_cpu_devtoolset7\",\n  \"binary_linux_libtorch_2_7m_cpu_devtoolset7\",\n  \"binary_linux_libtorch_2_7m_cpu_gcc5_4_cxx11-abi\",\n  \"binary_linux_libtorch_2_7_cpu\",\n\n  \"caffe2_py2_android_ubuntu16_04\",\n  \"caffe2_py2_system_macos10_13\",\n  \"pytorch_macos_10_13_py3\",\n  \"pytorch_macos_10_13_cuda9_2_cudnn7_py3\",\n  \"pytorch-linux_xenial_py3_clang5_android_ndk_r19c_x86_32_build\",\n  \"pytorch-linux-xenial-py3-clang5-android-ndk-r19c-gradle-build-x86_32\",\n  \"pytorch_ios_10_2_1_x86_64_build\",\n  \"pytorch_ios_10_2_1_arm64_build\",\n\n  \"pytorch_linux_backward_compatibility_check_test\",\n\n  \"pytorch_xla_linux_xenial_py3_6_clang7\",\n\n  \"pytorch_python_doc_push\",\n  \"pytorch_cpp_doc_push\",\n];\n\nvar binary_and_smoke_tests_on_pr = [\n  \"binary_linux_manywheel_2_7mu_cpu_devtoolset7_build\",\n  \"binary_linux_manywheel_3_7m_cu100_devtoolset7_build\",\n  \"binary_linux_conda_2_7_cpu_devtoolset7_build\",\n  \"binary_macos_wheel_3_6_cpu_build\",\n  \"binary_macos_conda_2_7_cpu_build\",\n  \"binary_macos_libtorch_2_7_cpu_build\",\n  \"binary_linux_manywheel_2_7mu_cpu_devtoolset7_test\",\n  \"binary_linux_manywheel_3_7m_cu100_devtoolset7_test\",\n  \"binary_linux_conda_2_7_cpu_devtoolset7_test\",\n  \"binary_linux_libtorch_2_7m_cpu_devtoolset7_shared-with-deps_build\",\n  \"binary_linux_libtorch_2_7m_cpu_devtoolset7_shared-with-deps_test\",\n  \"binary_linux_libtorch_2_7m_cpu_gcc5_4_cxx11-abi_shared-with-deps_build\",\n  \"binary_linux_libtorch_2_7m_cpu_gcc5_4_cxx11-abi_shared-with-deps_test\",\n];\n\n// TODO: checks also supports neutral and action_required\n\nfunction is_success(result) {\n  return result === \"SUCCESS\" || result === \"success\";\n}\n\nfunction is_failure(result) {\n  // TODO: maybe classify timeout differently\n  return (\n    result === \"FAILURE\" ||\n    result === \"failure\" ||\n    result === \"error\" ||\n    result === \"timed_out\"\n  );\n}\n\nfunction is_aborted(result) {\n  return result === \"ABORTED\" || result === \"cancelled\";\n}\n\nfunction is_pending(result) {\n  return !result || result === \"pending\";\n}\n\nfunction getJobName(subBuild) {\n  const baseJobName = subBuild.jobName;\n  if (/caffe2-builds/.test(subBuild.url)) {\n    return \"caffe2-\" + baseJobName;\n  } else {\n    return baseJobName;\n  }\n}\n\nfunction classify_job_to_node(j) {\n  if (j === \"short-perf-test-gpu\") {\n    return \"linux-gpu\";\n  } else if (j === \"doc-push\") {\n    return \"linux-cpu\";\n  } else if (/-win/.test(j)) {\n    if (/-test/.test(j) && /-cuda/.test(j)) {\n      return \"win-gpu\";\n    } else {\n      return \"win-cpu\";\n    }\n  } else if (/-macos/.test(j)) {\n    return \"osx\";\n  } else if (\n    /-linux/.test(j) ||\n    /-ubuntu/.test(j) ||\n    /-centos/.test(j) ||\n    /-xenial/.test(j)\n  ) {\n    if (/cuda/.test(j)) {\n      if (/-multigpu-test/.test(j)) {\n        return \"linux-multigpu\";\n      } else if (/-test/.test(j)) {\n        return \"linux-gpu\";\n      } else {\n        return \"linux-cpu\";\n      }\n    } else if (/-rocm/.test(j)) {\n      if (/-test/.test(j)) {\n        return \"rocm\";\n      } else {\n        return \"linux-bigcpu\";\n      }\n    } else {\n      return \"linux-cpu\";\n    }\n  }\n  return \"unknown\";\n}\n\n// Ideas:\n//  - Put the master and pull request info together, so you can see what\n//  the reported 'master' status is for a given 'pull-request' build\n\nexport default class BuildHistoryDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.initialState();\n  }\n  initialState() {\n    const prefs_str = localStorage.getItem(\"prefs\");\n    let prefs = {};\n    if (prefs_str) {\n      prefs = JSON.parse(prefs_str);\n    }\n    if (!(\"showStale\" in prefs)) prefs[\"showStale\"] = false;\n    if (!(\"username\" in prefs)) prefs[\"username\"] = \"\";\n    if (!(\"showNotifications\" in prefs)) prefs[\"showNotifications\"] = true;\n    return {\n      builds: [],\n      known_jobs: [],\n      currentTime: new Date(),\n      updateTime: new Date(0),\n      showStale: prefs.showStale,\n      username: prefs.username,\n      showNotifications: prefs.showNotifications,\n    };\n  }\n  componentDidMount() {\n    this.update();\n    this.interval = setInterval(this.update.bind(this), this.props.interval);\n    if (this.state.showNotifications && Notification.permission !== \"granted\") {\n      Notification.requestPermission();\n    }\n  }\n  componentDidUpdate(prevProps) {\n    localStorage.setItem(\n      \"prefs\",\n      JSON.stringify({\n        showNotifications: this.state.showNotifications,\n        showStale: this.state.showStale,\n        username: this.state.username,\n      })\n    );\n    if (this.props.job !== prevProps.job) {\n      this.setState(this.initialState());\n      this.update();\n    }\n  }\n  async update() {\n    const currentTime = new Date();\n    this.setState({ currentTime: currentTime });\n    // NB: server-slide slicing doesn't really help, Jenkins seems to\n    // load everything into memory anyway\n    let data;\n    if (true) {\n      // STOP.  You want more results?  You may have noticed that on\n      // Google, people suggest using allBuilds with {0,n} to make use\n      // of Jenkins pagination.  However, if you do this, it will *DOS our Jeenkins\n      // instance*; even when pagination is requested, Jenkins will\n      // still load ALL builds into memory before servicing your\n      // request.  I've filed this at https://issues.jenkins-ci.org/browse/JENKINS-49908\n      data = await jenkins.job(this.props.job, {\n        tree: `builds[\n                  url,\n                  number,\n                  duration,\n                  timestamp,\n                  result,\n                  actions[parameters[name,value],\n                  causes[shortDescription]],\n                  changeSet[items[commitId,comment,msg]],\n                  subBuilds[\n                    result,jobName,url,duration,\n                    build[\n                      subBuilds[\n                        result,jobName,url,duration,\n                        build[\n                          subBuilds[result,jobName,url,duration]\n                        ]\n                      ]\n                    ]\n                  ]\n               ]`.replace(/\\s+/g, \"\"),\n      });\n      // build[builtOn]\n    } else {\n      // If you want entries in build on subBuilds, need depth = 3\n      // Otherwise, most data can be got with depth = 1\n      const depth = 1;\n      data = await jenkins.job(this.props.job, { depth: depth });\n    }\n    data.updateTime = new Date();\n    data.connectedIn = data.updateTime - currentTime;\n    if (data.allBuilds !== undefined) {\n      data.builds = data.allBuilds;\n    }\n\n    // Get build statuses from Github for CircleCI\n    async function get_github_commit_statuses() {\n      let github_commit_statuses = {};\n      let requests = [];\n\n      function add_jobs(jobs, index) {\n        let commitId = requests[index].commitId;\n        if (jobs) {\n          for (let job_name in jobs) {\n            let job = jobs[job_name];\n            if (!github_commit_statuses[commitId].hasOwnProperty(job_name)) {\n              github_commit_statuses[commitId][job_name] = {\n                duration: \"0\",\n                result: job.status,\n                url: job.build_url,\n              };\n            }\n          }\n        }\n      }\n\n      for (const commit of data.builds) {\n        for (let i = 0; i < commit.changeSet.items.length; i++) {\n          let commitId = commit.changeSet.items[i].commitId;\n          if (!github_commit_statuses.hasOwnProperty(commitId)) {\n            github_commit_statuses[commitId] = {};\n          }\n          requests.push({\n            url:\n              \"https://s3.amazonaws.com/ossci-job-status/combined/\" +\n              commitId +\n              \".json\",\n            commitId,\n          });\n        }\n      }\n      let results = await jenkins.batch_get(\n        requests.map((request) => request.url)\n      );\n      results.forEach(add_jobs);\n      return github_commit_statuses;\n    }\n    data.github_commit_statuses = await get_github_commit_statuses();\n\n    const known_jobs_set = new Set();\n    function collect_known_jobs_set(topBuild) {\n      function go(subBuild) {\n        if (\n          subBuild.build &&\n          subBuild.build._class ===\n            \"com.tikal.jenkins.plugins.multijob.MultiJobBuild\"\n        ) {\n          subBuild.build.subBuilds.forEach(go);\n        } else {\n          known_jobs_set.add(getJobName(subBuild));\n        }\n      }\n      topBuild.subBuilds.forEach(go);\n    }\n    const props_mode = this.props.mode;\n    if (props_mode !== \"binary\") {\n      data.builds.forEach(collect_known_jobs_set);\n    }\n\n    if (data.github_commit_statuses) {\n      Object.keys(data.github_commit_statuses).forEach(function (commit) {\n        var jobs = data.github_commit_statuses[commit];\n        Object.keys(jobs).forEach(function (job_name) {\n          if (props_mode !== \"binary\") {\n            // Warning: quadratic police!\n            for (var i = 0; i < binary_and_smoke_tests_on_pr.length; i++) {\n              if (job_name.endsWith(binary_and_smoke_tests_on_pr[i])) {\n                known_jobs_set.add(\"_\" + job_name); // Add \"_\" before name to make sure CircleCI builds always show up on the left\n                break;\n              }\n            }\n            if (\n              !(job_name.includes(\"binary_\") || job_name.includes(\"smoke_\"))\n            ) {\n              // Exclude binary builds and smoke tests that are not running on every PR\n              known_jobs_set.add(\"_\" + job_name); // Add \"_\" before name to make sure CircleCI builds always show up on the left\n            }\n          } else {\n            if (job_name.includes(\"binary_\") || job_name.includes(\"smoke_\")) {\n              let found = false;\n              for (let i = 0; i < binary_and_smoke_tests_on_pr.length; i++) {\n                if (job_name.endsWith(binary_and_smoke_tests_on_pr[i])) {\n                  found = true;\n                  break;\n                }\n              }\n              if (!found) known_jobs_set.add(\"_\" + job_name);\n            }\n          }\n        });\n      });\n    }\n\n    function compareFun(x, y) {\n      const sx = jobs_on_pr.some((e) => summarize_job(x).startsWith(e));\n      const sy = jobs_on_pr.some((e) => summarize_job(y).startsWith(e));\n      if (sx < sy) return 1;\n      else if (sx > sy) return -1;\n      else if (x < y) return -1;\n      else if (x > y) return 1;\n      else return 0;\n    }\n    data.known_jobs = [...known_jobs_set.values()].sort(compareFun);\n\n    data.builds.forEach((build) => {\n      const sb_map = new Map();\n\n      // Collect job status from Jenkins\n      function collect_jobs(topBuild) {\n        function go(subBuild) {\n          if (\n            subBuild.build &&\n            subBuild.build._class ===\n              \"com.tikal.jenkins.plugins.multijob.MultiJobBuild\"\n          ) {\n            subBuild.build.subBuilds.forEach(go);\n          } else {\n            sb_map.set(getJobName(subBuild), subBuild);\n          }\n        }\n        topBuild.subBuilds.forEach(go);\n      }\n      collect_jobs(build);\n\n      // Collect job status for non-Jenkins jobs (i.e. CircleCI jobs)\n      async function collect_jobs_from_github_status(build) {\n        if (build.changeSet.items.length > 0) {\n          for (var i = 0; i < build.changeSet.items.length; i++) {\n            let commitId = build.changeSet.items[i].commitId;\n            if (data.github_commit_statuses) {\n              Object.keys(data.github_commit_statuses[commitId]).forEach(\n                function (job_name) {\n                  var job = data.github_commit_statuses[commitId][job_name];\n                  sb_map.set(\"_\" + job_name, {\n                    duration: job.duration,\n                    result: job.result,\n                    url: job.url,\n                  });\n                }\n              );\n            }\n          }\n        }\n      }\n      collect_jobs_from_github_status(build);\n      build.sb_map = sb_map;\n    });\n\n    // Figure out if we think something is broken or not.\n    //  1. Consider the MOST RECENT finished build for any given sub\n    //     build type.  If it is success, it's fine.\n    //  2. Otherwise, check builds prior to it.  If the previous build\n    //     also failed, we think it's broken!\n    //\n    // Special cases:\n    //  - pytorch_doc_push: don't care about this\n    //  - nightlies: these don't run all the time\n\n    const failure_window = 10;\n    if (this.props.job.includes(\"master\")) {\n      const still_unknown_set = new Set();\n      const consecutive_failure_count = new Map();\n      data.known_jobs.forEach((job) => {\n        if (job === \"pytorch_doc_push\") return;\n        if (job === \"__dr.ci\") return;\n        if (job.includes(\"nightlies\")) return;\n        still_unknown_set.add(job);\n      });\n      for (let i = 0; i < data.builds.length; i++) {\n        // After some window, don't look anymore; the job may have been\n        // removed\n        if (i > failure_window) break;\n        if (!still_unknown_set.size) break;\n        const build = data.builds[i];\n        const sb_map = build.sb_map;\n        sb_map.forEach((sb, jobName) => {\n          if (!still_unknown_set.has(jobName)) {\n            // do nothing\n          } else if (is_failure(sb.result)) {\n            let count = consecutive_failure_count.get(jobName) || 0;\n            count++;\n            consecutive_failure_count.set(jobName, count);\n          } else if (is_success(sb.result)) {\n            still_unknown_set.delete(jobName);\n          }\n        });\n      }\n\n      // Prune uninteresting alarms\n      consecutive_failure_count.forEach((v, k) => {\n        // Require two consecutive failure to alert\n        if (v <= 1) {\n          consecutive_failure_count.delete(k);\n        }\n      });\n\n      data.consecutive_failure_count = consecutive_failure_count;\n\n      // Compute what notifications to show\n      // We'll take a diff and then give notifications for keys that\n      // changed\n      if (this.state.consecutive_failure_count) {\n        this.state.consecutive_failure_count.forEach((v, key) => {\n          if (!consecutive_failure_count.has(key)) {\n            // It's fixed!\n            new Notification(\"✅ \" + this.props.job, {\n              body: summarize_job(key),\n            });\n          }\n        });\n      }\n      consecutive_failure_count.forEach((v, key) => {\n        // Don't produce notifications for initial failure!\n        if (\n          this.state.consecutive_failure_count &&\n          !this.state.consecutive_failure_count.has(key)\n        ) {\n          // It's failed!\n          new Notification(\"❌ \" + this.props.job, {\n            body: summarize_job(key),\n          });\n        }\n      });\n    }\n\n    // TODO: This can cause spurious state updates\n    this.setState(data);\n  }\n\n  render() {\n    function result_icon(result) {\n      if (is_success(result))\n        return (\n          <span role=\"img\" style={{ color: \"green\" }} aria-label=\"passed\">\n            0\n          </span>\n        );\n      if (is_failure(result))\n        return (\n          <span role=\"img\" style={{ color: \"red\" }} aria-label=\"failed\">\n            X\n          </span>\n        );\n      if (is_aborted(result))\n        return (\n          <span role=\"img\" style={{ color: \"gray\" }} aria-label=\"cancelled\">\n            .\n          </span>\n        );\n      if (is_pending(result))\n        return (\n          <span\n            className=\"animate-flicker\"\n            role=\"img\"\n            style={{ color: \"goldenrod\" }}\n            aria-label=\"in progress\"\n          >\n            ?\n          </span>\n        );\n      return result;\n    }\n\n    // Sigh... the place where you can get the information you're\n    // interested in at the top level is NOT the same as where you get\n    // it inside, because of how Jenkins handles depth (Jenkins\n    // *will* give you information for everything recursively, just\n    // not in the place you might expect it.\n    //\n    //  class: \"com.tikal.jenkins.plugins.multijob.MultiJobBuild\"\n    //  id: \"3772\"\n    //  subBuilds:\n    //    0:\n    //      jobName: \"whatever\"\n    //      build:\n    //        class: \"com.tikal.jenkins.plugins.multijob.MultiJobBuild\"\n    //        subBuilds:\n\n    let builds = this.state.builds;\n    let consecutive_failure_count = this.state.consecutive_failure_count;\n\n    const known_jobs = this.state.known_jobs;\n    const known_jobs_head = known_jobs.map((jobName) => (\n      <th className=\"rotate\" key={jobName}>\n        <div\n          className={\n            (jobs_on_pr.some((e) => summarize_job(jobName).startsWith(e))\n              ? \"pr-header\"\n              : \"master-only-header\") +\n            \" \" +\n            (consecutive_failure_count.has(jobName) ? \"failing-header\" : \"\")\n          }\n        >\n          {jobs_on_pr.some((e) => summarize_job(jobName).startsWith(e))\n            ? \"\"\n            : \"• \"}\n          {summarize_job(jobName)}\n        </div>\n      </th>\n    ));\n    // const known_jobs_head = known_jobs.map((jobName) =>\n    //  <th key={jobName}></th>\n    //);\n\n    const durationWidth = 100;\n    const durationHeight = 10;\n    const durationScale = d3.scaleLinear().rangeRound([0, durationWidth]);\n    durationScale.domain([0, d3.max(builds, (b) => b.duration)]);\n\n    const seen_prs = new Set();\n\n    const rows = builds.map((build) => {\n      const sb_map = build.sb_map;\n\n      function perf_report(sb, result) {\n        return (\n          <Fragment>\n            <span\n              className={\n                is_success(result) ? \"ok-duration\" : \"suspect-duration\"\n              }\n            >\n              {parse_duration(sb.duration) / 1000}\n            </span>\n            &nbsp;&nbsp;\n          </Fragment>\n        );\n      }\n\n      // let cumulativeMs = 0;\n      let cost = 0;\n      let unknownCost = false;\n      let inProgressCost = false;\n      let found = false;\n\n      const status_cols = known_jobs.map((jobName) => {\n        const sb = sb_map.get(jobName);\n        let cell = <Fragment />;\n        if (sb !== undefined) {\n          found = true;\n          const dur = parse_duration(sb.duration);\n          // cumulativeMs += dur;\n          const node = classify_job_to_node(getJobName(sb));\n          let this_cost = 0;\n          if (node === \"unknown\") {\n            unknownCost = true;\n          } else {\n            this_cost = Math.ceil((centsPerHour[node] * dur) / 1000 / 60 / 60);\n          }\n          cost += this_cost;\n          if (!sb.result) inProgressCost = true;\n          if (this.props.mode === \"perf\") {\n            cell = perf_report(sb, sb.result);\n          } else if (this.props.mode === \"cost\") {\n            cell = (\n              <Fragment>\n                {node === \"unknown\" ? \"?\" : this_cost}&nbsp;&nbsp;\n              </Fragment>\n            );\n          } else {\n            var cellHref = sb.url;\n            if (/^https?:\\/\\//.test(cellHref)) {\n              if (cellHref.includes(\"jenkins\")) {\n                cellHref = cellHref + \"/console\";\n              }\n            } else {\n              cellHref = jenkins.link(cellHref + \"/console\");\n            }\n            cell = (\n              <a\n                href={cellHref}\n                className=\"icon\"\n                target=\"_blank\"\n                alt={getJobName(sb)}\n              >\n                {result_icon(sb.result)}\n              </a>\n            );\n          }\n        }\n        return (\n          <Tooltip\n            key={jobName}\n            overlay={jobName}\n            mouseLeaveDelay={0}\n            placement=\"rightTop\"\n            destroyTooltipOnHide={true}\n          >\n            <td\n              key={jobName}\n              className=\"icon-cell\"\n              style={{\n                textAlign: \"right\",\n                fontFamily: \"sans-serif\",\n                padding: 0,\n              }}\n            >\n              {cell}\n            </td>\n          </Tooltip>\n        );\n      });\n\n      function drop_pr_number(msg) {\n        return msg.replace(/\\(#[0-9]+\\)/, \"\");\n      }\n\n      function renderPullRequestNumber(comment) {\n        let m = comment.match(/\\(#(\\d+)\\)/);\n        if (m) {\n          return (\n            <Fragment>\n              <a\n                href={\"https://github.com/pytorch/pytorch/pull/\" + m[1]}\n                target=\"_blank\"\n              >\n                #{m[1]}\n              </a>\n            </Fragment>\n          );\n        }\n        return <Fragment />;\n      }\n\n      function renderCommit(commit) {\n        return (\n          <div key={commit.commitId}>\n            {renderPullRequestNumber(commit.comment)}{\" \"}\n            {drop_pr_number(commit.msg)}{\" \"}\n            <code>\n              <a\n                href={\n                  \"https://github.com/pytorch/pytorch/commit/\" + commit.commitId\n                }\n                target=\"_blank\"\n              >\n                {commit.commitId.slice(0, 7)}\n              </a>\n            </code>\n          </div>\n        );\n      }\n\n      function renderCauses(changeSet) {\n        const defaultCause = <em>Manually triggered rebuild.</em>;\n        if (changeSet.actions === undefined) return defaultCause;\n        return changeSet.actions\n          .filter((action) => action.causes !== undefined)\n          .map((action, i) =>\n            action.causes.map((cause, i) => (\n              <em key={i}>{cause.shortDescription}. </em>\n            ))\n          );\n      }\n\n      function getPushedBy(build) {\n        const action = build.actions.find(\n          (action) => action._class === \"hudson.model.CauseAction\"\n        );\n        if (action === undefined) return \"(unknown)\";\n        const cause = action.causes.find(\n          (cause) => cause._class === \"com.cloudbees.jenkins.GitHubPushCause\"\n        );\n        if (cause === undefined) return \"\";\n        const match = cause.shortDescription.match(\n          /Started by GitHub push by (.+)/\n        );\n        if (match === null) return cause.shortDescription;\n        return match[1];\n      }\n\n      function getPullParams(build) {\n        let action = build.actions.find(\n          (action) =>\n            action._class ===\n            \"org.jenkinsci.plugins.ghprb.GhprbParametersAction\"\n        );\n        if (action === undefined) {\n          action = build.actions.find(\n            (action) =>\n              action._class ===\n              \"com.tikal.jenkins.plugins.multijob.MultiJobParametersAction\"\n          );\n        }\n        if (action === undefined) {\n          return new Map();\n        }\n        return new Map(\n          action.parameters.map((param) => [param.name, param.value])\n        );\n      }\n\n      const isRebuild = build.actions.some(\n        (action) =>\n          action.causes !== undefined &&\n          action.causes.some(\n            (cause) => cause._class === \"com.sonyericsson.rebuild.RebuildCause\"\n          )\n      );\n      const isPullRequest = build.actions.some(\n        (action) =>\n          action.causes !== undefined &&\n          action.causes.some(\n            (cause) =>\n              cause._class === \"org.jenkinsci.plugins.ghprb.GhprbCause\" ||\n              (cause._class === \"hudson.model.Cause$UpstreamCause\" &&\n                /-pull-request$/.test(cause.upstreamProject))\n          )\n      );\n\n      let author = \"\";\n      let desc = \"\";\n      let pull_link;\n      let pull_id;\n\n      // TODO: Too lazy to set up PR numbers for the old ones\n\n      let stale = false;\n      if (isRebuild) {\n        desc = renderCauses(build);\n      } else if (isPullRequest) {\n        const params = getPullParams(build);\n        const title = params.get(\"ghprbPullTitle\");\n        pull_link = params.get(\"ghprbPullLink\");\n        pull_id = params.get(\"ghprbPullId\");\n        author = params.get(\"ghprbPullAuthorLogin\");\n        desc = title;\n        if (seen_prs.has(pull_id)) {\n          // TODO: do this filtering earlier\n          if (!this.state.showStale) return <Fragment key={build.number} />;\n          stale = true;\n        }\n        if (this.state.username !== \"\" && this.state.username !== author) {\n          return <Fragment key={build.number} />;\n        }\n        seen_prs.add(pull_id);\n      } else {\n        const changeSet = build.changeSet;\n        // TODO: This is empty for not pytorch-master.  We could\n        // probably get the info if we propagate it as a variable.\n        author = getPushedBy(build);\n        if (changeSet.items.length === 0) {\n          desc = renderCauses(build);\n        } else {\n          desc = changeSet.items.slice().reverse().map(renderCommit);\n        }\n      }\n\n      const whenString = summarize_date(build.timestamp);\n\n      if (!found) {\n        return <Fragment />;\n      }\n\n      return (\n        <tr key={build.number} className={stale ? \"stale\" : \"\"}>\n          <th className=\"left-cell\">\n            <a href={build.url} target=\"_blank\">\n              {build.number}\n            </a>\n          </th>\n          <th className=\"left-cell\">\n            <a href={pull_link} target=\"_blank\">\n              {pull_id ? \"#\" + pull_id : \"\"}\n            </a>\n          </th>\n          <td className=\"left-cell\">{whenString}</td>\n          {status_cols}\n          <td className=\"right-cell bar-number\">\n            {Math.floor(build.duration / 1000 / 60)}\n          </td>\n          <td>\n            <svg width={durationWidth} height={durationHeight}>\n              <rect\n                className=\"bar\"\n                x=\"0\"\n                y=\"0\"\n                width={durationScale(build.duration)}\n                height={durationHeight}\n              />\n            </svg>\n          </td>\n          <td className=\"right-cell\" style={{ textAlign: \"right\" }}>\n            {inProgressCost ? \"≥ \" : \"\"}\n            {centsToDollars(cost)}\n            {unknownCost ? \"?\" : \"\"}\n          </td>\n          <td className=\"right-cell\">{author}</td>\n          <td className=\"right-cell\">{desc}</td>\n        </tr>\n      );\n    });\n\n    return (\n      <div>\n        <h2>\n          <a href={jenkins.link(\"job/\" + this.props.job)} target=\"_blank\">\n            {this.props.job}\n          </a>{\" \"}\n          history{\" \"}\n          <AsOf\n            interval={this.props.interval}\n            connectedIn={this.state.connectedIn}\n            currentTime={this.state.currentTime}\n            updateTime={this.state.updateTime}\n          />\n        </h2>\n        <div style={{ color: \"#909\" }}>\n          • Purple bulleted jobs run on master only.\n        </div>\n        <div>\n          <ul className=\"menu\">\n            <li>\n              <input\n                type=\"checkbox\"\n                name=\"show-stale\"\n                checked={this.state.showStale}\n                onChange={(e) => {\n                  this.setState({ showStale: e.target.checked });\n                }}\n              />\n              <label htmlFor=\"show-stale\">Show stale builds of PRs</label>\n            </li>\n            <li>\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={(e) => {\n                  this.setState({ username: e.target.value });\n                }}\n              />\n              <label\n                htmlFor=\"username\"\n                style={{\n                  backgroundColor: \"white\",\n                  position: \"relative\",\n                  zIndex: 3,\n                }}\n              >\n                Show builds from this user only\n              </label>\n            </li>\n            <li>\n              <input\n                type=\"checkbox\"\n                name=\"show-notifications\"\n                checked={this.state.showNotifications}\n                onChange={(e) =>\n                  this.setState({ showNotifications: e.target.checked })\n                }\n              />\n              <label htmlFor=\"show-notifications\">\n                Show notifications on master failure\n                {Notification.permission === \"denied\" ? (\n                  <Fragment>\n                    {\" \"}\n                    <strong>\n                      (WARNING: notifications are currently denied)\n                    </strong>\n                  </Fragment>\n                ) : (\n                  \"\"\n                )}\n              </label>\n            </li>\n          </ul>\n        </div>\n        <table className=\"buildHistoryTable\">\n          <thead>\n            <tr>\n              <th className=\"left-cell\">J#</th>\n              <th className=\"left-cell\">PR#</th>\n              <th className=\"left-cell\">Date</th>\n              {known_jobs_head}\n              <th className=\"right-cell\" colSpan=\"2\">\n                Latency (min)\n              </th>\n              <th className=\"right-cell\">Cost</th>\n              <th className=\"right-cell\">User</th>\n              <th className=\"right-cell\">Description</th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Component, Fragment } from \"react\";\nimport AsOf from \"./AsOf.js\";\nimport { summarize_job, summarize_date } from \"./Summarize.js\";\nimport Tooltip from \"rc-tooltip\";\nimport axios from \"axios\";\n\nconst binary_and_smoke_tests_on_pr = [\n  \"binary_linux_manywheel_2_7mu_cpu_devtoolset7_build\",\n  \"binary_linux_manywheel_3_7m_cu100_devtoolset7_build\",\n  \"binary_linux_conda_2_7_cpu_devtoolset7_build\",\n  \"binary_macos_wheel_3_6_cpu_build\",\n  \"binary_macos_conda_2_7_cpu_build\",\n  \"binary_macos_libtorch_2_7_cpu_build\",\n  \"binary_linux_manywheel_2_7mu_cpu_devtoolset7_test\",\n  \"binary_linux_manywheel_3_7m_cu100_devtoolset7_test\",\n  \"binary_linux_conda_2_7_cpu_devtoolset7_test\",\n  \"binary_linux_libtorch_2_7m_cpu_devtoolset7_shared-with-deps_build\",\n  \"binary_linux_libtorch_2_7m_cpu_devtoolset7_shared-with-deps_test\",\n  \"binary_linux_libtorch_2_7m_cpu_gcc5_4_cxx11-abi_shared-with-deps\",\n  \"pytorch_linux_xenial_pynightly\",\n];\n\nfunction nightly_run_on_pr(job_name) {\n  return binary_and_smoke_tests_on_pr.some((n) => job_name.includes(n));\n}\n\nfunction is_success(result) {\n  return result === \"SUCCESS\" || result === \"success\";\n}\n\nfunction is_failure(result) {\n  // TODO: maybe classify timeout differently\n  return (\n    result === \"FAILURE\" ||\n    result === \"failure\" ||\n    result === \"error\" ||\n    result === \"timed_out\"\n  );\n}\n\nfunction is_aborted(result) {\n  return result === \"ABORTED\" || result === \"cancelled\";\n}\n\nfunction is_pending(result) {\n  return !result || result === \"pending\";\n}\n\nfunction is_skipped(result) {\n  return result === \"skipped\";\n}\n\nfunction is_infra_failure(result) {\n  return result === \"infrastructure_fail\";\n}\n\nfunction objToStrMap(obj) {\n  let strMap = new Map();\n  for (let k of Object.keys(obj)) {\n    strMap.set(k, obj[k]);\n  }\n  return strMap;\n}\n\nexport default class BuildHistoryDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.initialState();\n  }\n  initialState() {\n    const prefs_str = localStorage.getItem(\"prefs2\");\n    let prefs = {};\n    if (prefs_str) {\n      prefs = JSON.parse(prefs_str);\n    }\n    if (!(\"showNotifications\" in prefs)) prefs[\"showNotifications\"] = true;\n    if (!(\"showServiceJobs\" in prefs)) prefs[\"showServiceJobs\"] = true;\n    return {\n      builds: [],\n      known_jobs: [],\n      currentTime: new Date(),\n      updateTime: new Date(0),\n      showNotifications: prefs.showNotifications,\n      showServiceJobs: prefs.showServiceJobs,\n      jobNameFilter: \"\",\n    };\n  }\n  componentDidMount() {\n    this.update();\n    this.interval = setInterval(this.update.bind(this), this.props.interval);\n    if (this.state.showNotifications && Notification.permission !== \"granted\") {\n      Notification.requestPermission();\n    }\n  }\n  componentDidUpdate(prevProps) {\n    localStorage.setItem(\n      \"prefs2\",\n      JSON.stringify({\n        showNotifications: this.state.showNotifications,\n        showServiceJobs: this.state.showServiceJobs,\n      })\n    );\n    if (\n      this.props.job !== prevProps.job ||\n      this.props.mode !== prevProps.mode\n    ) {\n      this.setState(this.initialState());\n      this.update();\n    }\n  }\n  async update() {\n    const currentTime = new Date();\n    const branch = this.props.job.replace(/^pytorch-/, \"\");\n    const build_prefix = branch === \"master\" ? branch : \"pr\";\n    const url_prefix = \"https://s3.amazonaws.com/ossci-job-status\";\n    this.setState({ currentTime: currentTime });\n\n    const commits = await axios.get(`${url_prefix}/${branch}/index.json`);\n\n    const requests = commits.data.map(async (build) => {\n      try {\n        const r = await axios.get(\n          `${url_prefix}/${build_prefix}/${build.id}.json`\n        );\n        build.sb_map = objToStrMap(r.data);\n      } catch (e) {\n        build.sb_map = new Map();\n        // swallow\n      }\n      return build;\n    });\n    const builds = await axios.all(requests);\n    builds.reverse();\n\n    const data = {};\n\n    data.updateTime = new Date();\n    data.connectedIn = data.updateTime - currentTime;\n\n    const props_mode = this.props.mode;\n\n    const known_jobs_set = new Set();\n    builds.forEach((build) => {\n      build.sb_map.forEach((sb, job_name) => {\n        const nightly_candidates =\n          job_name.includes(\"binary_\") ||\n          job_name.includes(\"smoke_\") ||\n          job_name.includes(\"nightly_\") ||\n          job_name.includes(\"nigthly_\");\n        const is_nightly = nightly_candidates && !nightly_run_on_pr(job_name);\n        if (\n          (props_mode !== \"nightly\" && !is_nightly) ||\n          (props_mode === \"nightly\" && is_nightly)\n        ) {\n          known_jobs_set.add(job_name);\n        }\n      });\n    });\n\n    data.known_jobs = [...known_jobs_set.values()].sort();\n    data.builds = builds;\n\n    // Figure out if we think something is broken or not.\n    //  1. Consider the MOST RECENT finished build for any given sub\n    //     build type.  If it is success, it's fine.\n    //  2. Otherwise, check builds prior to it.  If the previous build\n    //     also failed, we think it's broken!\n    //\n    // Special cases:\n    //  - pytorch_doc_push: don't care about this\n    //  - nightlies: these don't run all the time\n\n    const failure_window = 10;\n    if (this.props.job.startsWith(\"pytorch-\")) {\n      const still_unknown_set = new Set();\n      const consecutive_failure_count = new Map();\n      data.known_jobs.forEach((job) => {\n        if (job === \"pytorch_doc_push\") return;\n        if (job === \"__dr.ci\") return;\n        if (job.includes(\"nightlies\")) return;\n        still_unknown_set.add(job);\n      });\n      for (let i = 0; i < data.builds.length; i++) {\n        // After some window, don't look anymore; the job may have been\n        // removed\n        if (i > failure_window) break;\n        if (!still_unknown_set.size) break;\n        const build = data.builds[i];\n        const sb_map = build.sb_map;\n        sb_map.forEach((sb, jobName) => {\n          if (!still_unknown_set.has(jobName)) {\n            // do nothing\n          } else if (is_failure(sb.status)) {\n            let count = consecutive_failure_count.get(jobName) || 0;\n            count++;\n            consecutive_failure_count.set(jobName, count);\n          } else if (is_success(sb.status)) {\n            still_unknown_set.delete(jobName);\n          }\n        });\n      }\n\n      // Prune uninteresting alarms\n      consecutive_failure_count.forEach((v, k) => {\n        // Require two consecutive failure to alert\n        if (v <= 1) {\n          consecutive_failure_count.delete(k);\n        }\n      });\n\n      data.consecutive_failure_count = consecutive_failure_count;\n\n      // Compute what notifications to show\n      // We'll take a diff and then give notifications for keys that\n      // changed\n      if (this.state.consecutive_failure_count) {\n        this.state.consecutive_failure_count.forEach((v, key) => {\n          if (!consecutive_failure_count.has(key)) {\n            // It's fixed!\n            new Notification(\"✅ \" + this.props.job, {\n              body: summarize_job(key),\n            });\n          }\n        });\n      }\n      consecutive_failure_count.forEach((v, key) => {\n        // Don't produce notifications for initial failure!\n        if (\n          this.state.consecutive_failure_count &&\n          !this.state.consecutive_failure_count.has(key)\n        ) {\n          // It's failed!\n          new Notification(\"❌ \" + this.props.job, {\n            body: summarize_job(key),\n          });\n        }\n      });\n    }\n\n    this.setState(data);\n  }\n\n  shouldShowJob(name) {\n    const jobNameFilter = this.state.jobNameFilter;\n    if (jobNameFilter.length > 0 && !name.includes(jobNameFilter)) {\n      return false;\n    }\n    if (this.state.showServiceJobs) {\n      return true;\n    }\n    const isDockerJob = name.startsWith(\"ci/circleci: docker\");\n    const isGCJob = name.startsWith(\"ci/circleci: ecr_gc\");\n    return !(isDockerJob || name === \"welcome\" || isGCJob);\n  }\n\n  render() {\n    function result_icon(result) {\n      if (is_success(result))\n        return (\n          <span role=\"img\" style={{ color: \"green\" }} aria-label=\"passed\">\n            0\n          </span>\n        );\n      if (is_skipped(result))\n        return (\n          <span role=\"img\" style={{ color: \"gray\" }} aria-label=\"skipped\">\n            S\n          </span>\n        );\n      if (is_failure(result))\n        return (\n          <span role=\"img\" style={{ color: \"red\" }} aria-label=\"failed\">\n            X\n          </span>\n        );\n      if (is_aborted(result))\n        return (\n          <span role=\"img\" style={{ color: \"gray\" }} aria-label=\"cancelled\">\n            .\n          </span>\n        );\n      if (is_pending(result))\n        return (\n          <span\n            className=\"animate-flicker\"\n            role=\"img\"\n            style={{ color: \"goldenrod\" }}\n            aria-label=\"in progress\"\n          >\n            ?\n          </span>\n        );\n      if (is_infra_failure(result))\n        return (\n          <span role=\"img\" style={{ color: \"grey\" }} aria-label=\"failed\">\n            X\n          </span>\n        );\n      return result;\n    }\n\n    let builds = this.state.builds;\n    let consecutive_failure_count = this.state.consecutive_failure_count;\n\n    const visible_jobs = this.state.known_jobs.filter((name) =>\n      this.shouldShowJob(name)\n    );\n    const visible_jobs_head = visible_jobs.map((jobName) => (\n      <th className=\"rotate\" key={jobName}>\n        <div\n          className={\n            consecutive_failure_count.has(jobName) ? \"failing-header\" : \"\"\n          }\n        >\n          {summarize_job(jobName)}\n        </div>\n      </th>\n    ));\n\n    const rows = builds.map((build) => {\n      let found = false;\n      const sb_map = build.sb_map;\n\n      const status_cols = visible_jobs.map((jobName) => {\n        const sb = sb_map.get(jobName);\n        let cell = <Fragment />;\n        if (sb !== undefined) {\n          found = true;\n          cell = (\n            <a\n              href={sb.build_url}\n              className=\"icon\"\n              target=\"_blank\"\n              alt={jobName}\n            >\n              {result_icon(sb.status)}\n            </a>\n          );\n        }\n        return (\n          <Tooltip\n            key={jobName}\n            overlay={jobName}\n            mouseLeaveDelay={0}\n            placement=\"rightTop\"\n            destroyTooltipOnHide={true}\n          >\n            <td\n              key={jobName}\n              className=\"icon-cell\"\n              style={{\n                textAlign: \"right\",\n                fontFamily: \"sans-serif\",\n                padding: 0,\n              }}\n            >\n              {cell}\n            </td>\n          </Tooltip>\n        );\n      });\n\n      function drop_pr_number(msg) {\n        return msg.replace(/\\(#[0-9]+\\)/, \"\");\n      }\n\n      function renderPullRequestNumber(comment) {\n        let m = comment.match(/\\(#(\\d+)\\)/);\n        if (m) {\n          return (\n            <Fragment>\n              <a\n                href={\"https://github.com/pytorch/pytorch/pull/\" + m[1]}\n                target=\"_blank\"\n              >\n                #{m[1]}\n              </a>\n            </Fragment>\n          );\n        }\n        m = comment.match(\n          /https:\\/\\/github.com\\/pytorch\\/pytorch\\/pull\\/(\\d+)/\n        );\n        if (m) {\n          return (\n            <Fragment>\n              <a\n                href={\"https://github.com/pytorch/pytorch/pull/\" + m[1]}\n                target=\"_blank\"\n              >\n                #{m[1]}\n              </a>\n            </Fragment>\n          );\n        }\n        return <Fragment />;\n      }\n\n      let author = build.author.username\n        ? build.author.username\n        : build.author.name;\n\n      const desc = (\n        <div key={build.id}>\n          {drop_pr_number(build.message).split(\"\\n\")[0]}{\" \"}\n          <code>\n            <a\n              href={\"https://github.com/pytorch/pytorch/commit/\" + build.id}\n              target=\"_blank\"\n            >\n              {build.id.slice(0, 7)}\n            </a>\n          </code>\n        </div>\n      );\n\n      // TODO: Too lazy to set up PR numbers for the old ones\n\n      let stale = false;\n\n      // TODO: need to store this in index or payload\n      const whenString = summarize_date(build.timestamp);\n\n      if (!found) {\n        return <Fragment key={build.id} />;\n      }\n\n      return (\n        <tr key={build.id} className={stale ? \"stale\" : \"\"}>\n          <th className=\"left-cell\">\n            {renderPullRequestNumber(build.message)}\n          </th>\n          <td className=\"left-cell\" title={build.timestamp}>\n            {whenString}\n          </td>\n          {status_cols}\n          <td className=\"right-cell\">{author}</td>\n          <td className=\"right-cell\">{desc}</td>\n        </tr>\n      );\n    });\n\n    return (\n      <div>\n        <h2>\n          {this.props.job} history{\" \"}\n          <AsOf\n            interval={this.props.interval}\n            connectedIn={this.state.connectedIn}\n            currentTime={this.state.currentTime}\n            updateTime={this.state.updateTime}\n          />\n        </h2>\n        <div>\n          <ul className=\"menu\">\n            <li>\n              <input\n                type=\"checkbox\"\n                name=\"show-notifications\"\n                checked={this.state.showNotifications}\n                onChange={(e) =>\n                  this.setState({ showNotifications: e.target.checked })\n                }\n              />\n              <label htmlFor=\"show-notifications\">\n                Show notifications on master failure\n                {Notification.permission === \"denied\" ? (\n                  <Fragment>\n                    {\" \"}\n                    <strong>\n                      (WARNING: notifications are currently denied)\n                    </strong>\n                  </Fragment>\n                ) : (\n                  \"\"\n                )}\n              </label>\n            </li>\n            <br />\n            <li>\n              <input\n                type=\"checkbox\"\n                name=\"show-service-jobs\"\n                checked={this.state.showServiceJobs}\n                onChange={(e) =>\n                  this.setState({ showServiceJobs: e.target.checked })\n                }\n              />\n              <label htmlFor=\"show-service-jobs\">Show service jobs</label>\n            </li>\n            <br />\n            <li>\n              <label htmlFor=\"job-name-filter\">Name filter:&nbsp;</label>\n              <input\n                type=\"input\"\n                name=\"job-name-filter\"\n                value={this.state.jobNameFilter}\n                onChange={(e) =>\n                  this.setState({ jobNameFilter: e.target.value })\n                }\n              />\n            </li>\n          </ul>\n        </div>\n        <table className=\"buildHistoryTable\">\n          <thead>\n            <tr>\n              <th className=\"left-cell\">PR#</th>\n              <th className=\"left-cell\">Date</th>\n              {visible_jobs_head}\n              <th className=\"right-cell\">User</th>\n              <th className=\"right-cell\">Description</th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Component, Fragment } from \"react\";\nimport Tooltip from \"rc-tooltip\";\nimport axios from \"axios\";\n\nfunction objToStrMap(obj) {\n  let strMap = new Map();\n  for (let k of Object.keys(obj)) {\n    strMap.set(k, obj[k]);\n  }\n  return strMap;\n}\n\n// define the threshold to determine whether it is regression/optimization\nconst THRESHOLD = 0.1;\nconst ROUND_PRECISION = 100000;\n\nfunction round_float(mean) {\n  return Math.round(mean * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nexport default class PerfHistoryDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.initialState();\n  }\n  initialState() {\n    return {\n      builds: [],\n      known_jobs: [],\n      jobNameFilter: \"\",\n    };\n  }\n  componentDidMount() {\n    this.update();\n  }\n  componentDidUpdate(prevProps) {}\n  async update() {\n    const url_prefix =\n      \"https://s3.amazonaws.com/ossci-metrics/torchbench_v0_nightly\";\n    // branch: v0-nightly\n    const indexes = await axios.get(`${url_prefix}/index.json`);\n    console.log(indexes.data);\n    const requests = indexes.data.map(async (run) => {\n      try {\n        const r = await axios.get(`${url_prefix}/${run.result.relpath}`);\n        run.sb_map = objToStrMap(r.data);\n      } catch (e) {\n        run.sb_map = new Map();\n      }\n      return run;\n    });\n    const builds = await axios.all(requests);\n    const known_jobs_set = new Set();\n    // Use the oldest benchmark run as the standard\n    const standard_benchmark = builds[0].sb_map.get(\"benchmarks\");\n    const benchmark_index = new Map();\n\n    standard_benchmark.forEach((benchmark, index) => {\n      known_jobs_set.add(benchmark[\"name\"]);\n      benchmark_index.set(benchmark[\"name\"], index);\n    });\n    console.log(known_jobs_set);\n    // Figure out if we think there is performance regression or not.\n    // 1. If the test mean is >10% smaller than the previous mean, it is an optimization\n    // 3. If the test mean is >10% larger than the previous mean, it is a regression\n    // 4. Otherwise, it is a stable result\n    for (let i = 0; i < builds.length; i++) {\n      const sb_map = builds[i].sb_map;\n      // Get the test\n      sb_map.get(\"benchmarks\").forEach((benchmark) => {\n        const build_benchmark_mean = benchmark[\"stats\"][\"mean\"];\n        const build_benchmark_index = benchmark_index.get(benchmark[\"name\"]);\n        if (i === 0) {\n          benchmark[\"stats\"][\"prev_mean\"] = build_benchmark_mean;\n        } else {\n          const prev_mean =\n            builds[i - 1].sb_map.get(\"benchmarks\")[build_benchmark_index][\n              \"stats\"\n            ][\"mean\"];\n          benchmark[\"stats\"][\"prev_mean\"] = prev_mean;\n        }\n      });\n    }\n\n    builds.reverse();\n\n    const data = {};\n    data.known_jobs = [...known_jobs_set.values()].sort();\n    data.benchmark_index = benchmark_index;\n    data.builds = builds;\n    this.setState(data);\n  }\n\n  shouldShowJob(name) {\n    const jobNameFilter = this.state.jobNameFilter;\n    if (jobNameFilter.length > 0 && !name.includes(jobNameFilter)) {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    function gen_summary(delta) {\n      delta = Math.round(delta * 10000) / 100;\n      if (delta >= 0) {\n        delta = \"+\" + delta;\n      }\n      delta += \"%\";\n      return delta;\n    }\n\n    function is_optimized(delta) {\n      return delta < -1 * THRESHOLD;\n    }\n\n    function is_regression(delta) {\n      return delta > THRESHOLD;\n    }\n\n    function result_icon(result) {\n      if (is_optimized(result))\n        return (\n          <span role=\"img\" style={{ color: \"green\" }} aria-label=\"passed\">\n            0\n          </span>\n        );\n      if (is_regression(result))\n        return (\n          <span role=\"img\" style={{ color: \"red\" }} aria-label=\"failed\">\n            X\n          </span>\n        );\n      return (\n        <span role=\"img\" style={{ color: \"grey\" }} aria-label=\"passed\">\n          -\n        </span>\n      );\n    }\n\n    let builds = this.state.builds;\n    const visible_jobs = this.state.known_jobs.filter((name) =>\n      this.shouldShowJob(name)\n    );\n    const visible_jobs_head = visible_jobs.map((jobName) => (\n      <th className=\"rotate\" key={jobName} width=\"20px;\">\n        <div>{jobName}</div>\n      </th>\n    ));\n    const benchmark_index = this.state.benchmark_index;\n\n    const rows = builds.map((build) => {\n      const sb_map = build.sb_map;\n      const pytorch_version =\n        build.sb_map.get(\"machine_info\")[\"pytorch_version\"];\n      const status_cols = visible_jobs.map((jobName) => {\n        const sb = sb_map.get(\"benchmarks\")[benchmark_index.get(jobName)];\n        const colkey = pytorch_version + \"-\" + jobName;\n        let cell = <Fragment />;\n        const prev_delta =\n          (sb[\"stats\"][\"mean\"] - sb[\"stats\"][\"prev_mean\"]) /\n          sb[\"stats\"][\"prev_mean\"];\n        if (sb !== undefined) {\n          cell = result_icon(prev_delta);\n        }\n        return (\n          <Tooltip\n            key={jobName}\n            overlay={\n              jobName +\n              \" Mean: \" +\n              round_float(sb[\"stats\"][\"mean\"]) +\n              \", prev mean: \" +\n              round_float(sb[\"stats\"][\"prev_mean\"]) +\n              \", delta: \" +\n              gen_summary(prev_delta)\n            }\n            mouseLeaveDelay={0}\n            placement=\"rightTop\"\n            destroyTooltipOnHide={true}\n          >\n            <td\n              key={colkey}\n              className=\"icon-cell\"\n              style={{\n                textAlign: \"right\",\n                fontFamily: \"sans-serif\",\n                padding: 0,\n              }}\n            >\n              {\" \"}\n              {cell}{\" \"}\n            </td>\n          </Tooltip>\n        );\n      });\n\n      return (\n        <tr key={pytorch_version}>\n          <th className=\"left-cell\"> torch-{pytorch_version} </th>\n          {status_cols}\n        </tr>\n      );\n    });\n    return (\n      <div>\n        <h2>TorchBench v0 nightly testing result</h2>\n        <div>\n          <ul className=\"menu\"></ul>\n        </div>\n        <table className=\"perfHistoryTable\">\n          <thead>\n            <tr>\n              <th className=\"left-cell\">Build</th>\n              {visible_jobs_head}\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Component } from \"react\";\n\n// TODO: change this to auth.pytorch.org once that's set up\nconst AUTH_SERVER = \"https://metrics.pytorch.org\";\n\nexport default class AuthorizeGitHub extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedin: !!localStorage.getItem(\"gh_pat\"),\n    };\n  }\n  componentDidMount() {\n    this.update();\n  }\n\n  async update() {\n    let url = new URL(window.location.href);\n    let code = url.searchParams.get(\"code\");\n    if (!code) {\n      return;\n    }\n    this.state.code = code;\n    let result = await fetch(`${AUTH_SERVER}/authenticate/${code}`).then((r) =>\n      r.json()\n    );\n    if (!result.token) {\n      alert(\"bad code passed to GitHub OAuth, sign into GitHub again\");\n    } else {\n      localStorage.setItem(\"gh_pat\", result.token);\n      this.state.loggedin = true;\n    }\n    this.setState(this.state);\n  }\n\n  render() {\n    const existingToken = localStorage.getItem(\"gh_pat\");\n    if (existingToken) {\n      return (\n        <div>\n          <a href=\"/github_logout\">Log out</a>\n        </div>\n      );\n    }\n    if (!this.state.code) {\n      return (\n        <div>\n          <a href=\"https://github.com/login/oauth/authorize?scope=user:email&client_id=7e8b4df19d85405ac1b2\">\n            Click here\n          </a>{\" \"}\n          to sign in to GitHub\n        </div>\n      );\n    }\n    return (\n      <div>\n        <p>Loading...</p>\n      </div>\n    );\n  }\n}\n","// see https://github.com/qoomon/aws-s3-bucket-browser/blob/937147179a9284dc8d98e7a6d52f60e8fdcd7231/index.html#L430\nexport function formatBytes(size) {\n  if (!size) {\n    return \"-\";\n  }\n  const KB = 1024;\n  if (size < KB) {\n    return size + \"  B\";\n  }\n  const MB = 1000000;\n  if (size < MB) {\n    return (size / KB).toFixed(0) + \" KB\";\n  }\n  const GB = 1000000000;\n  if (size < GB) {\n    return (size / MB).toFixed(2) + \" MB\";\n  }\n  return (size / GB).toFixed(2) + \" GB\";\n}\n\n// see https://stackoverflow.com/a/19448718\nexport function parseXml(xml, arrayTags) {\n  let dom = null;\n  if (window.DOMParser) dom = new DOMParser().parseFromString(xml, \"text/xml\");\n  else if (window.ActiveXObject) {\n    dom = new ActiveXObject(\"Microsoft.XMLDOM\");\n    dom.async = false;\n    if (!dom.loadXML(xml))\n      throw dom.parseError.reason + \" \" + dom.parseError.srcText;\n  } else throw new Error(\"cannot parse xml string!\");\n\n  function parseNode(xmlNode, result) {\n    if (xmlNode.nodeName == \"#text\") {\n      let v = xmlNode.nodeValue;\n      if (v.trim()) result[\"#text\"] = v;\n      return;\n    }\n\n    let jsonNode = {},\n      existing = result[xmlNode.nodeName];\n    if (existing) {\n      if (!Array.isArray(existing))\n        result[xmlNode.nodeName] = [existing, jsonNode];\n      else result[xmlNode.nodeName].push(jsonNode);\n    } else {\n      if (arrayTags && arrayTags.indexOf(xmlNode.nodeName) != -1)\n        result[xmlNode.nodeName] = [jsonNode];\n      else result[xmlNode.nodeName] = jsonNode;\n    }\n\n    if (xmlNode.attributes)\n      for (let attribute of xmlNode.attributes)\n        jsonNode[attribute.nodeName] = attribute.nodeValue;\n\n    for (let node of xmlNode.childNodes) parseNode(node, jsonNode);\n  }\n\n  let result = {};\n  for (let node of dom.childNodes) parseNode(node, result);\n\n  return result;\n}\n\nexport async function asyncAll(functions) {\n  // Run a list of arg-less async functions\n  let invoked = functions.map((f) => f());\n  return await Promise.all(invoked);\n}\n\nasync function github_graphql(query) {\n  // Query the GitHub GraphQL API\n  const pat = localStorage.getItem(\"gh_pat\");\n  const result = await fetch(\"https://api.github.com/graphql\", {\n    method: \"POST\",\n    headers: {\n      Authorization: \"token \" + pat,\n    },\n    body: JSON.stringify({ query: query }),\n  });\n  return (await result.json()).data;\n}\n\nexport async function github_json(url) {\n  // Query the GitHub JSON API\n  const pat = localStorage.getItem(\"gh_pat\");\n  const result = await fetch(\"https://api.github.com/\" + url, {\n    headers: {\n      Accept: \"application/vnd.github.v3+json\",\n      Authorization: \"token \" + pat,\n    },\n  });\n  return await result.json();\n}\n\nexport let github = {\n  graphql: github_graphql,\n  json: github_json,\n};\n\nexport async function s3(prefix) {\n  // List the gha-artifacts S3 bucket by a specific prefix\n  return await fetch(\n    \"https://gha-artifacts.s3.amazonaws.com/?\" +\n      new URLSearchParams({\n        \"list-type\": 2,\n        delimiter: \"/\",\n        prefix: prefix,\n        \"max-keys\": 50,\n      })\n  )\n    .then((a) => a.text())\n    .then((a) => parseXml(a));\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport AuthorizeGitHub from \"./GithubAuthorize.js\";\n\nimport { parseXml, formatBytes, asyncAll, s3, github } from \"./utils.js\";\n\nfunction getPrQuery(number) {\n  return `\n    {\n      repository(name: \"pytorch\", owner: \"pytorch\") {\n        pullRequest(number: ${number}) {\n          title\n          number\n          url\n          commits(last: 1) {\n            nodes {\n              commit {\n                checkSuites(last: 100) {\n                  nodes {\n                    databaseId\n                    workflowRun {\n                      runNumber\n                      id\n                      databaseId\n                      workflow {\n                        name\n                      }\n                      url\n                    }\n                    checkRuns(last: 100) {\n                      nodes {\n                        name\n                        title\n                        text\n                        detailsUrl\n                        summary\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `;\n}\n\nexport default class PrDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pr_number: this.props.pr_number,\n    };\n  }\n  componentDidMount() {\n    this.update();\n  }\n\n  extractItem(result, key) {\n    // Some of the stuff from s3 can come in as a single object or an array,\n    // so unpack that here\n    if (!result[key]) {\n      return null;\n    }\n\n    if (Array.isArray(result[key])) {\n      return result[key];\n    }\n    return [result[key]];\n  }\n\n  async update() {\n    // Fetch the PR's info from GitHub's GraphQL API\n    localStorage.getItem(\"gh_pat\");\n    if (!localStorage.getItem(\"gh_pat\")) {\n      return;\n    }\n    let pr_result = await github.graphql(getPrQuery(this.state.pr_number));\n    this.state.pr = pr_result.repository.pullRequest;\n\n    // The GraphQL API doesn't have any types for artifacts (at least as far as\n    // I can tell), so we have to fall back to iterating through them all via\n    // the v3 JSON API\n    let workflow_runs = this.state.pr.commits.nodes[0].commit.checkSuites.nodes;\n    workflow_runs = workflow_runs.filter((x) => x.workflowRun);\n    await asyncAll(\n      workflow_runs.map((run) => {\n        return async () => {\n          let id = run.workflowRun.databaseId;\n          run.artifacts = await github.json(\n            `repos/pytorch/pytorch/actions/runs/${id}/artifacts`\n          );\n        };\n      })\n    );\n\n    this.state.runs = workflow_runs;\n    this.setState(this.state);\n\n    // Go through all the runs and check if there is a prefix for the workflow\n    // run in S3 (indicating that there are some relevant artifacts stored\n    // there)\n    let promises = this.state.runs.map((run) => {\n      run.s3_artifacts = [];\n      return async () => {\n        // Check that the workflow run exists\n        let result = await s3(`pytorch/pytorch/${run.workflowRun.databaseId}/`);\n\n        let prefixes = this.extractItem(\n          result.ListBucketResult,\n          \"CommonPrefixes\"\n        );\n\n        // If anything was found, go through the results and add the items to\n        // the 'run' object in place\n        if (prefixes && prefixes.length > 0) {\n          for (const prefixItem of prefixes) {\n            let prefix = prefixItem.Prefix[\"#text\"];\n            let result = await s3(prefix);\n            let contents = this.extractItem(\n              result.ListBucketResult,\n              \"Contents\"\n            );\n            for (const content of contents) {\n              run.s3_artifacts.push(content);\n            }\n          }\n        }\n      };\n    });\n    await asyncAll(promises);\n    this.setState(this.state);\n  }\n\n  render() {\n    let runs = undefined;\n    if (this.state.runs) {\n      runs = [];\n\n      // Render all of the check runs as a\n      for (const [run_index, run] of this.state.runs.entries()) {\n        const checks = [];\n        for (const [index, check] of run.checkRuns.nodes.entries()) {\n          checks.push(\n            <div key={\"check-run-\" + index}>\n              - <a href={check.detailsUrl}>{check.name}</a>\n            </div>\n          );\n        }\n\n        let artifacts = [];\n        function makeArtifact(args) {\n          if (args.expired) {\n            return (\n              <div key={`${args.kind}-${args.index}`}>\n                <span>\n                  [{args.kind}] {args.name}\n                </span>{\" \"}\n                <span>({formatBytes(args.size_in_bytes)}) (expired)</span>\n              </div>\n            );\n          } else {\n            return (\n              <div key={`${args.kind}-${args.index}`}>\n                <a href={args.url}>\n                  [{args.kind}] {args.name}\n                </a>{\" \"}\n                <span>({formatBytes(args.size_in_bytes)})</span>\n              </div>\n            );\n          }\n        }\n\n        // List out artifacts hosted on GitHub\n        if (run.artifacts) {\n          for (const [index, artifact] of run.artifacts.artifacts.entries()) {\n            // The URL in the is for the API, not browsers, so make it manually\n            let url = `https://github.com/pytorch/pytorch/suites/${run.databaseId}/artifacts/${artifact.id}`;\n            artifacts.push(\n              makeArtifact({\n                kind: \"gha\",\n                index: index,\n                name: artifact.name,\n                size_in_bytes: artifact.size_in_bytes,\n                url: url,\n                expired: artifact.expired,\n              })\n            );\n          }\n        }\n\n        // List out artifacts from s3\n        if (run.s3_artifacts) {\n          for (const [index, artifact] of run.s3_artifacts.entries()) {\n            let prefix = artifact.Key[\"#text\"];\n\n            artifacts.push(\n              makeArtifact({\n                kind: \"s3\",\n                index: index,\n                name: prefix.split(\"/\").slice(-1),\n                size_in_bytes: parseInt(artifact.Size[\"#text\"]),\n                url: `https://gha-artifacts.s3.amazonaws.com/${prefix}`,\n                expired: false,\n              })\n            );\n          }\n        }\n\n        // If there were any artifacts, set up the 'div' to show them\n        let artifactsElement = <div></div>;\n        if (artifacts.length > 0) {\n          artifactsElement = (\n            <div style={{ padding: \"6px\" }}>\n              <h5>Aritifacts</h5>\n              {artifacts}\n            </div>\n          );\n        }\n\n        let checksElement = <div></div>;\n        if (checks.length > 0) {\n          checksElement = (\n            <div style={{ padding: \"6px\" }}>\n              <h5>Checks</h5>\n              {checks}\n            </div>\n          );\n        }\n\n        // Wrap up everything in a card\n        const card = (\n          <Card key={\"card-\" + run_index}>\n            <Card.Body>\n              <Card.Title>\n                <a href={run.workflowRun.url}>\n                  {run.workflowRun.workflow.name}\n                </a>\n              </Card.Title>\n              <div>\n                {checksElement}\n                {artifactsElement}\n              </div>\n            </Card.Body>\n          </Card>\n        );\n        runs.push(card);\n      }\n    }\n\n    return (\n      <div>\n        <AuthorizeGitHub />\n\n        <h2>\n          <a\n            href={\n              \"https://github.com/pytorch/pytorch/pull/\" + this.state.pr_number\n            }\n          >\n            PR #{this.state.pr_number}\n          </a>\n        </h2>\n        <p>\n          {this.state.pr\n            ? this.state.pr.title\n            : \"loading (make sure you are signed in)...\"}\n        </p>\n        <div>{runs}</div>\n      </div>\n    );\n  }\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Component } from \"react\";\nimport \"@toast-ui/chart/dist/toastui-chart.css\";\nimport Chart from \"@toast-ui/chart\";\n\nexport default class JobCorrelationHeatmap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.update();\n  }\n\n  correlateJobs(all_jobs) {\n    let passes = [\"success\", \"skipped\", \"pending\", \"queued\"];\n    const seen_names = {};\n    const correlationMatrix = {};\n\n    const addFailure = (failure1, failure2) => {\n      seen_names[failure1] = true;\n      seen_names[failure2] = true;\n      if (!correlationMatrix[failure1]) {\n        correlationMatrix[failure1] = [];\n      }\n      if (!correlationMatrix[failure1][failure2]) {\n        correlationMatrix[failure1][failure2] = 0;\n      }\n      correlationMatrix[failure1][failure2] += 1;\n    };\n\n    for (const jobs of all_jobs) {\n      let failures = [];\n      for (const job_name in jobs.value) {\n        const job = jobs.value[job_name];\n        if (job.status && passes.indexOf(job.status) === -1) {\n          failures.push(job_name);\n        }\n      }\n\n      for (const failure1 of failures) {\n        for (const failure2 of failures) {\n          addFailure(failure1, failure2);\n        }\n      }\n    }\n\n    const job_names = Object.keys(seen_names).sort();\n\n    const fullMatrix = [];\n    for (const name1 of job_names) {\n      const row = [];\n      for (const name2 of job_names) {\n        if (correlationMatrix[name1] && correlationMatrix[name1][name2]) {\n          row.push(correlationMatrix[name1][name2]);\n        } else {\n          row.push(0);\n        }\n      }\n      fullMatrix.push(row);\n    }\n\n    return [job_names, fullMatrix];\n  }\n\n  async update() {\n    const base = \"https://ossci-job-status.s3.amazonaws.com/master\";\n    const data = {\n      job_index: JSON.parse(\n        await fetch(`${base}/index.json`, { cache: \"no-cache\" }).then((a) =>\n          a.text()\n        )\n      ),\n    };\n    const promises = data.job_index.map((job) => {\n      return fetch(`${base}/${job.id}.json`).then((r) => r.json());\n    });\n    this.state.correlations = this.correlateJobs(\n      await Promise.allSettled(promises)\n    );\n    this.setState(data);\n  }\n\n  tooltipTemplate(model, defaultTooltipTemplate, theme) {\n    const { background } = theme;\n    let [a, b] = model.data[0].label.split(\", \");\n    return `\n        <div\n        style=\"\n    background: ${background};\n    padding: 0 5px;\n    text-align: center;\n    color: white;\">\n        <div\n        class=\"toastui-chart-tooltip-category\"\n        style=\"font-weight: bold; font-family: Arial, sans-serif; font-size: 13px; color: #ffffff;\">\n            ${a}\n            <br />\n            ${b}\n        </div>\n        <div\n        class=\"toastui-chart-tooltip-series-wrapper\"\n        style=\"font-weight: normal; font-family: Arial, sans-serif; font-size: 12px; color: #ffffff;\">\n            <div class=\"toastui-chart-tooltip-series\">\n                <span class=\"toastui-chart-series-name\">\n                <i class=\"toastui-chart-icon\" style=\"background: ${model.data[0].color}\"></i>\n                <span class=\"toastui-chart-name\">${model.data[0].value}</span>\n                </span>\n            </div>\n        </div>\n    </div>\n    `;\n  }\n\n  componentDidUpdate() {\n    if (!this.state.correlations) {\n      return;\n    }\n\n    const el = document.getElementById(\"job-correlations\");\n    let [job_names, correlationMatrix] = this.state.correlations;\n    el.innerHTML = \"\";\n    const options = {\n      usageStatistics: false,\n      xAxis: {\n        label: {\n          formatter: (a, b) => \"\",\n        },\n      },\n      yAxis: {\n        label: {\n          formatter: (a, b) => \"\",\n        },\n      },\n      tooltip: {\n        template: this.tooltipTemplate,\n      },\n    };\n    let data = {\n      categories: {\n        x: job_names,\n        y: job_names,\n      },\n      series: correlationMatrix,\n    };\n    Chart.heatmapChart({ el, data, options });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>CI Job Correlations</h2>\n        <div\n          id=\"job-correlations\"\n          style={{ width: \"550px\", height: \"550px\" }}\n        ></div>\n      </div>\n    );\n  }\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Component } from \"react\";\nimport \"@toast-ui/chart/dist/toastui-chart.css\";\nimport Chart from \"@toast-ui/chart\";\n\nexport default class GitHubActionsDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount() {\n    this.update();\n  }\n  async update() {\n    const data = {\n      actions_statuses: JSON.parse(\n        await fetch(\n          \"https://ossci-checks-status.s3.amazonaws.com/status.json\",\n          { cache: \"no-cache\" }\n        ).then((a) => a.text())\n      ),\n    };\n    this.setState(data);\n  }\n\n  componentDidUpdate() {\n    if (!this.state.actions_statuses) {\n      return;\n    }\n    const series = {\n      dates: [],\n    };\n    let keys = [\"in_progress\", \"queued\", \"pending\"];\n    for (const key of keys) {\n      series[key] = [];\n    }\n    this.state.actions_statuses.sort((a, b) => {\n      return a.last_updated - b.last_updated;\n    });\n    for (const item of this.state.actions_statuses) {\n      series.dates.push(new Date(item.last_updated * 1000).toLocaleString());\n      for (const key of keys) {\n        series[key].push(item[key] || 0);\n      }\n    }\n    const data_series = [];\n    for (const key of keys) {\n      data_series.push({\n        name: key,\n        data: series[key],\n      });\n    }\n    const data = {\n      categories: series.dates,\n      series: data_series,\n    };\n\n    const el = document.getElementById(\"chart\");\n    el.innerHTML = \"\";\n    const options = {};\n    Chart.lineChart({ el, data, options });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>GitHub Actions Status</h2>\n        <div id=\"chart\" style={{ width: \"600px\", height: \"400px\" }}></div>\n      </div>\n    );\n  }\n}\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React, { Fragment } from \"react\";\nimport \"./App.css\";\nimport ComputerDisplay from \"./ComputerDisplay.js\";\nimport QueueDisplay from \"./QueueDisplay.js\";\nimport BuildHistoryDisplay from \"./BuildHistoryDisplay.js\";\nimport GitHubStatusDisplay from \"./GitHubStatusDisplay.js\";\nimport PerfHistoryDisplay from \"./PerfHistoryDisplay.js\";\nimport PrDisplay from \"./PrDisplay.js\";\nimport JobCorrelationHeatmap from \"./JobCorrelationHeatmap.js\";\nimport GitHubActionsDisplay from \"./GitHubActionsDisplay.js\";\nimport AuthorizeGitHub from \"./GithubAuthorize.js\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL + \"/\"}>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"App-title\">\n          <Link to=\"/\">hud.pytorch.org</Link> (\n          <a href=\"https://github.com/pytorch/pytorch-ci-hud\">GitHub</a>)\n        </h1>\n      </header>\n      <ul className=\"menu\">\n        <li>New-style (warning, does NOT show Jenkins builds):</li>\n        {[\"pytorch\"].map((e) => (\n          <Fragment key={e}>\n            {[\"master\", \"nightly\", \"release/1.9\"].map((trigger) => (\n              <li key={`${e}-${trigger}`}>\n                <Link to={`/build2/${e}-${trigger}`}>\n                  {e}-{trigger}\n                </Link>\n                &nbsp; (\n                <Link to={`/build2/${e}-${trigger}?mode=nightly`}>binary</Link>)\n              </li>\n            ))}\n          </Fragment>\n        ))}\n        {[\"torchbench-v0-nightly\", \"status\"].map((e) => (\n          <li key={`${e}`}>\n            <Link to={`/${e}`}>{e}</Link>\n          </li>\n        ))}\n      </ul>\n      <ul className=\"deprecated-menu\">\n        <li>Old-style:</li>\n        {[\n          \"pytorch\",\n          // \"tensorcomp\",\n          // \"translate\",\n          \"rocm-pytorch\",\n        ].map((e) => (\n          <Fragment key={e}>\n            {[\"master\", \"pull-request\"].map((trigger) => (\n              <li key={e + \"-\" + trigger}>\n                <Link to={\"/build1/\" + e + \"-\" + trigger}>\n                  {e}-{trigger}\n                </Link>\n                &nbsp; (\n                <Link to={\"/build1/\" + e + \"-\" + trigger + \"?mode=perf\"}>\n                  perf\n                </Link>\n                /\n                <Link to={\"/build1/\" + e + \"-\" + trigger + \"?mode=cost\"}>\n                  cost\n                </Link>\n                {e === \"pytorch\" && trigger === \"master\" ? (\n                  <Fragment>\n                    /\n                    <Link to={\"/build1/\" + e + \"-\" + trigger + \"?mode=binary\"}>\n                      binary\n                    </Link>\n                  </Fragment>\n                ) : (\n                  <Fragment />\n                )}\n                )\n              </li>\n            ))}\n          </Fragment>\n        ))}\n        <Fragment key=\"nightlies-uploaded\">\n          <li>\n            <Link to={\"/build1/nightlies-uploaded\"}>nightlies-uploaded</Link>\n          </li>\n        </Fragment>\n      </ul>\n      <Switch>\n        <Route path=\"/build\" component={BuildRoute} />\n        <Route path=\"/build1\" component={Build1Route} />\n        <Route path=\"/pr\" component={PrRoute} />\n        <Route path=\"/build2\" component={Build2Route} />\n        <Route path=\"/torchbench-v0-nightly\" component={TorchBenchRoute} />\n        <Route path=\"/github_logout\" component={LogoutGitHub} />\n        <Route path=\"/authorize_github\" component={AuthorizeGithubRoute} />\n        <Route path=\"/status\" component={Status} />\n        <Route exact path=\"/\">\n          <Redirect to=\"/build2/pytorch-master\" />\n        </Route>\n      </Switch>\n    </div>\n  </Router>\n);\n\n//    <ul className=\"menu\">\n//      {[\n//       \"linux-trusty-py2.7-trigger\",\n//       \"linux-trusty-py2.7.9-trigger\",\n//       \"linux-trusty-py3.5-trigger\",\n//       \"linux-trusty-py3.6-gcc4.8-trigger\",\n//       \"linux-trusty-py3.6-gcc5.4-trigger\",\n//       \"linux-trusty-py3.6-gcc7.2-trigger\",\n//       \"linux-trusty-pynightly-trigger\",\n//       \"linux-xenial-cuda8-cudnn6-py3-trigger\",\n//       \"linux-xenial-cuda9-cudnn7-py2-trigger\",\n//       \"linux-xenial-cuda9-cudnn7-py3-trigger\",\n//       \"linux-xenial-py3-clang5-asan-trigger\",\n//       \"win-ws2016-cuda9-cudnn7-py3-trigger\",\n//      ].map((e) => <li key={e}><Link to={\"/build/pytorch-builds/job/pytorch-\" + e}>{e}</Link></li>)}\n//    </ul>\n\nconst Status = () => (\n  <div>\n    <GitHubActionsDisplay />\n    <JobCorrelationHeatmap />\n    <QueueDisplay interval={1000} />\n    <ComputerDisplay interval={1000} />\n  </div>\n);\n\nconst AuthorizeGithubRoute = () => {\n  return <AuthorizeGitHub />;\n};\n\nconst LogoutGitHub = () => {\n  localStorage.removeItem(\"gh_pat\");\n  console.log(\"logged out\");\n  return <Redirect to=\"/\"></Redirect>;\n};\n\nconst Build = ({ match }) => {\n  // Uhhh, am I really supposed to rob window.location here?\n  const query = new URLSearchParams(window.location.search);\n  return (\n    <BuildHistoryDisplay\n      interval={60000}\n      job={match.url.replace(/^\\/build\\//, \"\")}\n      mode={query.get(\"mode\")}\n    />\n  );\n};\n\nconst Build1 = ({ match }) => {\n  // Uhhh, am I really supposed to rob window.location here?\n  const query = new URLSearchParams(window.location.search);\n  return (\n    <BuildHistoryDisplay\n      interval={60000}\n      job={match.url.replace(/^\\/build1\\//, \"\")}\n      mode={query.get(\"mode\")}\n    />\n  );\n};\n\nconst Build2 = ({ match }) => {\n  // Uhhh, am I really supposed to rob window.location here?\n  const query = new URLSearchParams(window.location.search);\n  return (\n    <GitHubStatusDisplay\n      interval={60000}\n      job={match.url.replace(/^\\/build2\\//, \"\")}\n      mode={query.get(\"mode\")}\n    />\n  );\n};\n\nconst PrPage = ({ match }) => {\n  return <PrDisplay pr_number={parseInt(match.url.replace(/^\\/pr\\//, \"\"))} />;\n};\n\nconst PrRoute = ({ match }) => (\n  <Fragment>\n    <Route exact path={match.url} component={PrPage} />\n    <Route path={`${match.url}/:segment`} component={PrRoute} />\n  </Fragment>\n);\n\nconst BuildRoute = ({ match }) => (\n  <Fragment>\n    <Route exact path={match.url} component={Build} />\n    <Route path={`${match.url}/:segment`} component={BuildRoute} />\n  </Fragment>\n);\n\nconst Build1Route = ({ match }) => (\n  <Fragment>\n    <Route exact path={match.url} component={Build1} />\n    <Route path={`${match.url}/:segment`} component={Build1Route} />\n  </Fragment>\n);\n\nconst Build2Route = ({ match }) => (\n  <Fragment>\n    <Route exact path={match.url} component={Build2} />\n    <Route path={`${match.url}/:segment`} component={Build2Route} />\n  </Fragment>\n);\n\nconst TorchBenchRoute = ({ match }) => (\n  <Fragment>\n    <Route exact path={match.url} component={PerfHistoryDisplay} />\n  </Fragment>\n);\n\nexport default App;\n","// Copyright (c) Facebook, Inc. and its affiliates.\n//\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}