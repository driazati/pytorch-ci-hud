{"version":3,"sources":["Jenkins.js","AsOf.js","Summarize.js","ComputerDisplay.js","QueueDisplay.js","GitHubActionsDisplay.js","JobCorrelationHeatmap.js","BuildHistoryDisplay.js","GitHubStatusDisplay.js","PerfHistoryDisplay.js","App.js","registerServiceWorker.js","index.js"],"names":["jenkins","s","url","options","a","undefined","axios","get","params","then","response","r","catch","error","data","urls","requests","map","err","all","result","this","v","AsOf","props","updateStatus","currentTime","updateTime","interval","connectedIn","timeString","Date","toLocaleTimeString","className","summarize_job","job","replace","summarize_date","timestamp","date","toLocaleDateString","toLocaleString","hour","minute","hour12","month","day","weekday","summarize_ago","today","seconds","hours","Math","floor","minutes","time","String","seconds2time","summarize_url","m","RegExp","exec","centsPerHour","centsToDollars","x","style","currency","ComputerDisplay","state","computer","update","setInterval","bind","clearInterval","setState","tree","Map","forEach","c","k","n","node","displayName","test","assignedLabels","some","l","name","classify_node","busy","total","offline","idle","set","totalCost","perCost","rows","entries","sort","kv","cost","key","busy_nodes","filter","executors","length","currentExecutable","b","running_rows","executable","href","running_map","task","cumulative_time","delta_ago","colSpan","Component","QueueDisplay","items","queue","why_map","q","why","summarize_why","why_rows","why_v","textAlign","paddingRight","task_map","task_rows","slice","task_v","width","textOverflow","maxWidth","overflow","size","GitHubActionsDisplay","JSON","fetch","cache","text","parse","actions_statuses","series","dates","keys","last_updated","item","push","data_series","categories","el","document","getElementById","innerHTML","Chart","lineChart","id","height","all_jobs","passes","seen_names","correlationMatrix","addFailure","failure1","failure2","jobs","failures","job_name","value","status","indexOf","job_names","Object","fullMatrix","name1","row","name2","base","job_index","promises","json","Promise","allSettled","correlations","correlateJobs","model","defaultTooltipTemplate","theme","background","label","split","color","usageStatistics","xAxis","formatter","yAxis","tooltip","template","tooltipTemplate","y","heatmapChart","jobs_on_pr","binary_and_smoke_tests_on_pr","is_success","is_failure","getJobName","subBuild","baseJobName","jobName","BuildHistoryDisplay","initialState","prefs_str","localStorage","getItem","prefs","builds","known_jobs","showStale","username","showNotifications","Notification","permission","requestPermission","prevProps","setItem","stringify","get_github_commit_statuses","collect_known_jobs_set","compareFun","sx","e","startsWith","sy","topBuild","subBuilds","go","build","_class","known_jobs_set","add","add_jobs","index","commitId","github_commit_statuses","hasOwnProperty","build_url","commit","i","changeSet","batch_get","request","depth","allBuilds","Set","props_mode","mode","endsWith","includes","found","values","sb_map","duration","collect_jobs_from_github_status","still_unknown_set","consecutive_failure_count","sb","has","count","delete","known_jobs_head","durationScale","d3","rangeRound","domain","seen_prs","unknownCost","inProgressCost","status_cols","j","cell","dur","parse_duration","this_cost","ceil","perf_report","cellHref","link","target","alt","role","aria-label","is_aborted","is_pending","overlay","mouseLeaveDelay","placement","destroyTooltipOnHide","fontFamily","padding","renderCauses","defaultCause","actions","action","causes","cause","shortDescription","pull_link","pull_id","isRebuild","isPullRequest","upstreamProject","author","desc","stale","find","parameters","param","getPullParams","title","number","match","getPushedBy","reverse","comment","renderPullRequestNumber","msg","whenString","type","checked","onChange","htmlFor","backgroundColor","position","zIndex","nightly_run_on_pr","objToStrMap","obj","strMap","showServiceJobs","jobNameFilter","branch","build_prefix","url_prefix","commits","is_nightly","isDockerJob","isGCJob","visible_jobs","shouldShowJob","visible_jobs_head","is_skipped","is_infra_failure","message","ROUND_PRECISION","round_float","mean","round","PerfHistoryDisplay","indexes","console","log","run","relpath","standard_benchmark","benchmark_index","benchmark","build_benchmark_mean","build_benchmark_index","prev_mean","pytorch_version","delta","colkey","prev_delta","result_icon","Status","Build","query","URLSearchParams","window","location","search","Build1","Build2","BuildRoute","Route","exact","path","component","Build1Route","Build2Route","TorchBenchRoute","App","basename","process","Link","to","trigger","Switch","Redirect","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","URL","origin","addEventListener","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"4SA6DeA,EADC,IA1DhB,mFACE,SAAIC,GACF,MAAO,kCAAoCA,EAAI,cAFnD,kBAIE,SAAKA,GACH,MAAO,kCAAoCA,IAL/C,wDAQE,WAAUC,EAAKC,GAAf,eAAAC,EAAA,kEACkBC,IAAZF,IAAuBA,EAAU,IADvC,SAGQG,IAAMC,IAAIL,EAAK,CAAEM,OAAQL,IAC9BM,MAAK,SAAAC,GACJC,EAAID,KAELE,OAAM,SAAAC,OAPT,UAUmB,qBAANF,EAVb,yCAWWA,EAAEG,MAXb,gCAaW,MAbX,2CARF,uHAyBE,WAAgBC,EAAMZ,GAAtB,iBAAAC,EAAA,kEACkBC,IAAZF,IAAuBA,EAAU,IAEjCa,EAAWD,EAAKE,KAAI,SAAAf,GACtB,OAAOI,IAAMC,IAAIL,EAAK,CAAEM,OAAQL,IAAWM,MACzC,SAACC,GAAD,MAAe,CAACA,eAChB,SAACQ,GAAD,MAAU,CAACA,aANjB,SASQZ,IAAMa,IAAIH,GACfP,MAAK,SAAAC,GACJC,EAAID,KAELE,OAAM,SAAAC,OAbT,UAgBmB,qBAANF,EAhBb,yCAiBWA,EAAEM,KAAI,SAAAG,GACX,OAAIA,EAAOV,SACFU,EAAOV,SAASI,KAElB,SArBb,gCAwBW,MAxBX,2CAzBF,sHAqDE,WAAeX,GAAf,SAAAC,EAAA,+EAAiCiB,KAAKd,IAAIc,KAAKnB,IAAI,YAAaC,IAAhE,gDArDF,iHAsDE,WAAYA,GAAZ,SAAAC,EAAA,+EAA8BiB,KAAKd,IAAIc,KAAKnB,IAAI,SAAUC,IAA1D,gDAtDF,+GAuDE,WAAUmB,EAAGnB,GAAb,SAAAC,EAAA,+EAA+BiB,KAAKd,IAAIc,KAAKnB,IAAI,OAASoB,GAAInB,IAA9D,gDAvDF,iECAe,SAASoB,EAAKC,GAC3B,IAAMC,EAAeD,EAAME,YAAcF,EAAMG,WAAaH,EAAMI,SAC7C,eACA,kBAAC,WAAD,qBAAwBJ,EAAMK,YAA9B,MACfC,EAAaN,EAAMG,WAAa,IAAII,KAAK,KAAO,EACnC,kBAAC,WAAD,gBACA,kBAAC,WAAD,cACQP,EAAMG,WAAWK,qBADzB,KACiDP,GAEpE,OAAO,0BAAMQ,UAAWR,GAAjB,IAAiCK,EAAjC,KCXF,SAASI,EAAcC,GAC5B,OAAOA,EAAIC,QAAQ,YAAa,IAAIA,QAAQ,YAAa,IAAIA,QAAQ,aAAc,IAAIA,QAAQ,mBAAoB,IAAIA,QAAQ,kBAAmB,IAAIA,QAAQ,OAAQ,IAGjK,SAASC,EAAeC,GAC7B,IAAMC,EAAO,IAAIR,KAAKO,GAEtB,OADc,IAAIP,MACRS,uBAAyBD,EAAKC,qBAC/BD,EAAKE,eAAe,QAAS,CAAEC,KAAM,UAAWC,OAAQ,UAAWC,QAAQ,IAE3EL,EAAKE,eAAe,QAAS,CAAEI,MAAO,QAASC,IAAK,UAAWC,QAAS,UA2B5E,SAASC,EAAcV,GAC5B,IAAMC,EAAO,IAAIR,KAAKO,GAChBW,EAAQ,IAAIlB,KAClB,OAzBK,SAAuBmB,GAC1B,IAAIC,EAAUC,KAAKC,MAAMH,EAAU,MAC/BI,EAAUF,KAAKC,OAAOH,EAAmB,KAARC,GAAiB,IACtDD,EAAUA,EAAmB,KAARC,EAA2B,GAAVG,EACtC,IAAIC,EAAO,GAeX,OAbc,IAAVJ,IACFI,EAAOJ,EAAM,KAEC,IAAZG,GAA0B,KAATC,IAEnBA,IADAD,EAAWA,EAAU,IAAe,KAATC,EAAe,IAAID,EAAUE,OAAOF,IAC/C,KAEL,KAATC,EACFA,EAAOL,EAAQ,IAGfK,GAASL,EAAU,GAAM,IAAIA,EAAUM,OAAON,GAEzCK,EAMFE,CAAaL,KAAKC,OAAOJ,EAAQV,GAAQ,MAO3C,SAASmB,EAAcxD,GAC5B,IAAIyD,EACJ,OAA+F,QAA1FA,EAAIC,OAAO,gEAAgEC,KAAK3D,IAC1DyD,EAAE,GANdvB,QAAQ,WAAY,IAMA,IAAMF,EAAcyB,EAAE,IAEyB,QAA7EA,EAAIC,OAAO,mDAAmDC,KAAK3D,IAC/DyD,EAAE,GAEJzD,EAIF,IAAM4D,EAAe,CAC1B,YAAa,GACb,eAAgB,GAChB,YAAa,IACb,eAAgB,IAChB,iBAAkB,IAClB,mBAAoB,GACpB,UAAW,GACX,UAAW,IACX,IAAO,MAAM,GAAG,GAChB,OAAU,GACV,OAAU,GACV,KAAQ,EACR,SAAU,KAGL,SAASC,EAAeC,GAC7B,YAAU3D,IAAN2D,EAAwB,KAGpBA,EAAI,KAAKvB,eAAe,QAAS,CAACwB,MAAO,WAAYC,SAAU,Q,IC1EpDC,E,kDACnB,WAAY3C,GAAQ,IAAD,8BACjB,cAAMA,IACD4C,MAAQ,CAAEC,SAAU,GAAI3C,YAAa,IAAIK,KAAQJ,WAAY,IAAII,KAAK,GAAIF,YAAa,GAF3E,E,qDAInB,WACER,KAAKiD,SACLjD,KAAKO,SAAW2C,YAAYlD,KAAKiD,OAAOE,KAAKnD,MAAOA,KAAKG,MAAMI,Y,kCAEjE,WACE6C,cAAcpD,KAAKO,Y,2DAErB,8BAAAxB,EAAA,6DACQsB,EAAc,IAAIK,KACxBV,KAAKqD,SAAS,CAAChD,YAAaA,IAF9B,SAGqB1B,EAAQqE,SACzB,CAACM,KAAM,sZAcIvC,QAAQ,OAAQ,MAlB/B,QAGQtB,EAHR,QAmBOa,WAAa,IAAII,KACtBjB,EAAKe,YAAcf,EAAKa,WAAaD,EACrCL,KAAKqD,SAAS5D,GArBhB,gD,0EAuBA,WA8CE,IAAMG,EAAM,IAAI2D,IAChBvD,KAAK+C,MAAMC,SAASQ,SAAQ,SAACC,GAC3B,IAAMC,EA/CR,SAAuBC,GACrB,IAAMC,EAAOD,EAAEE,YACf,MAAI,mBAAmBC,KAAKF,GACnB,YAEL,oBAAoBE,KAAKF,GACpB,eAEL,oBAAoBE,KAAKF,GACvBD,EAAEI,eAAeC,MAAK,SAACC,GAAD,MAAkB,WAAXA,EAAEC,QAC1B,eAEA,YAGP,qBAAqBJ,KAAKF,GACrB,iBAEL,wBAAwBE,KAAKF,GACxB,mBAEL,gCAAgCE,KAAKF,GAChC,MAEL,+BAA+BE,KAAKF,GAC/B,UAEL,+BAA+BE,KAAKF,GAC/B,UAEL,iCAAiCE,KAAKF,GACjC,MAEL,4BAA4BE,KAAKF,GAC5B,SAEL,2BAA2BE,KAAKF,GAC3B,OAEL,yBAAyBE,KAAKF,GACzB,SAEFA,EAKGO,CAAcV,GACpBxD,EAAIL,EAAIV,IAAIwE,QACN1E,IAANiB,IAAiBA,EAAI,CAAEmE,KAAM,EAAGC,MAAO,IACtCZ,EAAEa,UACLrE,EAAEoE,QACGZ,EAAEc,MAAMtE,EAAEmE,QAEjBxE,EAAI4E,IAAId,EAAGzD,MAGb,IAAIwE,EAAY,EAChB7E,EAAI4D,SAAQ,SAACvD,EAAGyD,GACd,IAAMgB,EAAUjC,EAAaiB,QACb1E,IAAZ0F,IACFzE,EAAEwE,UAAYC,EAAUzE,EAAEoE,MAC1BI,GAAaxE,EAAEwE,cAInB,IAAME,EAAO,YAAI/E,EAAIgF,WAAWC,OAAOjF,KAAI,SAAAkF,GACzC,IAAMC,EAAOrC,EAAeoC,EAAG,GAAGL,WAClC,OAAQ,wBAAIO,IAAKF,EAAG,IAChB,4BAAKA,EAAG,IACR,4BAAKA,EAAG,GAAGV,KAAX,MAAoBU,EAAG,GAAGT,OAC1B,wBAAIzD,UAAU,UAAUmE,EAAxB,WAIAE,EAAajF,KAAK+C,MAAMC,SAASkC,QAAO,SAACzB,GAAD,OAAQA,EAAEc,MAA0B,WAAlBd,EAAEI,aAA4BJ,EAAE0B,UAAUC,OAAS,GAAK3B,EAAE0B,UAAU,GAAGE,qBACvIJ,EAAWJ,MAAK,SAAC9F,EAAGuG,GAAJ,OAAUvG,EAAEoG,UAAU,GAAGE,kBAAkBpE,UAAYqE,EAAEH,UAAU,GAAGE,kBAAkBpE,aACxG,IAAMsE,EAAeN,EAAWrF,KAAI,SAAC6D,GACnC,IAAM+B,EAAa/B,EAAE0B,UAAU,GAAGE,kBAClC,OAAO,wBAAIL,IAAKvB,EAAEI,aACR,wBAAIjD,UAAU,aAAae,EAAc6D,EAAWvE,YACpD,4BACE,uBAAGwE,KAAMD,EAAW3G,KACjBwD,EAAcmD,EAAW3G,WAMpC6G,EAAc,IAAInC,IAiCxB,OAhCA0B,EAAWzB,SAAQ,SAACC,GAClB,IAAM+B,EAAa/B,EAAE0B,UAAU,GAAGE,kBAC5BM,EAAOtD,EAAcmD,EAAW3G,KAClCoB,EAAIyF,EAAYxG,IAAIyG,QACd3G,IAANiB,IACFA,EAAI,CAAEoE,MAAO,EAAGuB,gBAAiB,GACjCF,EAAYlB,IAAImB,EAAM1F,IAExBA,EAAEoE,QAOFpE,EAAE2F,iBALF,SAAmB3E,GACjB,IAAMC,EAAO,IAAIR,KAAKO,GAEtB,OADc,IAAIP,KACFQ,GAAQ,IAEL2E,CAAUL,EAAWvE,cAkB1C,6BACE,yCAAc,kBAACf,EAAD,CAAMK,SAAUP,KAAKG,MAAMI,SAAUF,YAAaL,KAAK+C,MAAM1C,YAAaC,WAAYN,KAAK+C,MAAMzC,WAAYE,YAAaR,KAAK+C,MAAMvC,eACnJ,+BACE,+BACE,4BACE,4BACE,+BACE,+BAAQmE,GACR,+BACE,4BAAI,6BAAS,wBAAI/D,UAAU,SAASkF,QAAQ,KAAKpD,EAAyB,GAAV+B,EAAa,IAAhE,WAInB,wBAAI7D,UAAU,cACZ,+BACE,+BACG2E,a,GA/KwBQ,aCAxBC,E,kDACnB,WAAY7F,GAAQ,IAAD,8BACjB,cAAMA,IACD4C,MAAQ,CAAEkD,MAAO,GAAI5F,YAAa,IAAIK,KAAQJ,WAAY,IAAII,KAAK,GAAIF,YAAa,GAFxE,E,qDAInB,WACER,KAAKiD,SACLjD,KAAKO,SAAW2C,YAAYlD,KAAKiD,OAAOE,KAAKnD,MAAOA,KAAKG,MAAMI,Y,kCAEjE,WACE6C,cAAcpD,KAAKO,Y,2DAErB,8BAAAxB,EAAA,6DACQsB,EAAc,IAAIK,KACxBV,KAAKqD,SAAS,CAAChD,YAAaA,IAF9B,SAGqB1B,EAAQuH,QAH7B,QAGQzG,EAHR,QAIOa,WAAa,IAAII,KACtBjB,EAAKe,YAAcf,EAAKa,WAAaD,EACrCL,KAAKqD,SAAS5D,GANhB,gD,0EAQA,WAiBE,IAAM0G,EAAU,IAAI5C,IACpBvD,KAAK+C,MAAMkD,MAAMzC,SAAQ,SAAC4C,GACxB,IAAMC,EAlBR,SAAuBA,GACrB,OAAOA,EAAItF,QAAQ,0CAA2C,SACnDA,QAAQ,sBAAuB,oBAC/BA,QAAQ,oBAAqB,oBAC7BA,QAAQ,uBAAwB,aAChCA,QAAQ,cAAe,iBACvBA,QAAQ,cAAe,aACvBA,QAAQ,iBAAkB,gBAC1BA,QAAQ,eAAgB,eACxBA,QAAQ,eAAgB,eACxBA,QAAQ,qBAAsB,aAC9BA,QAAQ,sBAAuB,kBAC/BA,QAAQ,gCAAiC,eACzCA,QAAQ,gCAAiC,eAKxCuF,CAAcF,EAAEC,KACxBpG,EAAIkG,EAAQjH,IAAImH,QACVrH,IAANiB,IACFA,EAAI,CAAEoE,MAAO,GACb8B,EAAQ3B,IAAI6B,EAAKpG,IAEnBA,EAAEoE,WAGJ,IAAMkC,EAAW,YAAIJ,EAAQvB,WAAWC,OAAOjF,KAAI,SAAA4G,GACjD,IAAMH,EAAMG,EAAM,GACZvG,EAAIuG,EAAM,GAChB,OAAO,wBAAIxB,IAAKqB,GAAK,wBAAIzD,MAAO,CAAC6D,UAAW,QAASC,aAAc,KAAMzG,EAAEoE,OAAW,4BAAKgC,OAGvFM,EAAW,IAAIpD,IACrBvD,KAAK+C,MAAMkD,MAAMzC,SAAQ,SAAC4C,GACxB,IAAMT,EAAOtD,EAAc+D,EAAET,KAAK9G,KAC9BoB,EAAI0G,EAASzH,IAAIyG,QACX3G,IAANiB,IACFA,EAAI,CAAEoE,MAAO,GACbsC,EAASnC,IAAImB,EAAM1F,IAErBA,EAAEoE,WAGJ,IACMuC,EAAY,YAAID,EAAS/B,WAAWC,MAAK,SAAC9F,EAAGuG,GAAJ,OAAUA,EAAE,GAAGjB,MAAQtF,EAAE,GAAGsF,SAAOwC,MAAM,EADnE,IACoFjH,KAAI,SAAAkH,GAC3G,IAAMnB,EAAOmB,EAAO,GACd7G,EAAI6G,EAAO,GACjB,OAAO,wBAAI9B,IAAKW,GAAM,wBAAI/C,MAAO,CAAC6D,UAAW,QAASC,aAAc,KAAMzG,EAAEoE,OAAW,4BAAKsB,OAG9F,OACE,6BACE,qCAAU,kBAACzF,EAAD,CAAMK,SAAUP,KAAKG,MAAMI,SACrBC,YAAaR,KAAK+C,MAAMvC,YACxBH,YAAaL,KAAK+C,MAAM1C,YACxBC,WAAYN,KAAK+C,MAAMzC,cACvC,+BACE,+BACE,4BACE,wBAAIyG,MAAO,IAAKnE,MAAO,CAACoE,aAAc,OAAQC,SAAU,IAAKC,SAAU,WACrE,+BACE,+BAAQX,KAGZ,wBAAI3F,UAAU,aAAamG,MAAO,KAChC,+BACE,+BAAQH,EAAU,4BAAI,6BAAS,4BAAMD,EAASQ,KAvBvC,GAuB6D,MAAQ,gB,GAxFpDpB,a,wBCDrBqB,E,kDACnB,WAAYjH,GAAQ,IAAD,8BACjB,cAAMA,IACD4C,MAAQ,GAFI,E,qDAInB,WACE/C,KAAKiD,W,2DAEP,4BAAAlE,EAAA,kEAEsBsI,KAFtB,SAGYC,MACJ,2DACA,CAAEC,MAAO,aACTnI,MAAK,SAACL,GAAD,OAAOA,EAAEyI,UANtB,6BAE2BC,MAF3B,gBACQhI,EADR,CAEIiI,iBAFJ,MASE1H,KAAKqD,SAAS5D,GAThB,gD,sFAYA,WACE,GAAKO,KAAK+C,MAAM2E,iBAAhB,CAOA,IAJA,IAAMC,EAAS,CACbC,MAAO,IAELC,EAAO,CAAC,cAAe,SAAU,WACrC,MAAkBA,EAAlB,eAAwB,CACtBF,EADY,MACE,GAEhB3H,KAAK+C,MAAM2E,iBAAiB7C,MAAK,SAAC9F,EAAGuG,GACnC,OAAOvG,EAAE+I,aAAexC,EAAEwC,gBAZT,oBAcA9H,KAAK+C,MAAM2E,kBAdX,IAcnB,2BAAgD,CAAC,IAAtCK,EAAqC,QAC9CJ,EAAOC,MAAMI,KAAK,IAAItH,KAAyB,IAApBqH,EAAKD,cAAqB1G,kBADP,oBAE5ByG,GAF4B,IAE9C,2BAAwB,CAAC,IAAd7C,EAAa,QACtB2C,EAAO3C,GAAKgD,KAAKD,EAAK/C,IAAQ,IAHc,gCAd7B,8BAqBnB,IADA,IAAMiD,EAAc,GACpB,MAAkBJ,EAAlB,eAAwB,CAAnB,IAAM7C,EAAG,KACZiD,EAAYD,KAAK,CACf9D,KAAMc,EACNvF,KAAMkI,EAAO3C,KAGjB,IAAMvF,EAAO,CACXyI,WAAYP,EAAOC,MACnBD,OAAQM,GAGJE,EAAKC,SAASC,eAAe,SACnCF,EAAGG,UAAY,GAEfC,IAAMC,UAAU,CAAEL,KAAI1I,OAAMX,QADZ,Q,oBAIlB,WACE,OACE,6BACE,qDACA,yBAAK2J,GAAG,QAAQ7F,MAAO,CAACmE,MAAO,QAAS2B,OAAQ,gB,GA9DN3C,a,OCC7BqB,E,kDACnB,WAAYjH,GAAQ,IAAD,8BACjB,cAAMA,IACD4C,MAAQ,GAFI,E,qDAKnB,WACE/C,KAAKiD,W,2BAGP,SAAc0F,GACZ,IADsB,EAClBC,EAAS,CAAC,UAAW,UAAW,UAAW,UACzCC,EAAa,GACbC,EAAoB,GAEpBC,EAAa,SAACC,EAAUC,GAC1BJ,EAAWG,IAAY,EACvBH,EAAWI,IAAY,EAClBH,EAAkBE,KACnBF,EAAkBE,GAAY,IAE7BF,EAAkBE,GAAUC,KAC7BH,EAAkBE,GAAUC,GAAY,GAE5CH,EAAkBE,GAAUC,IAAa,GAdvB,cAiBHN,GAjBG,IAiBtB,2BAA6B,CAAC,IAAnBO,EAAkB,QACrBC,EAAW,GACf,IAAK,IAAMC,KAAYF,EAAKG,MAAO,CAC/B,IAAMvI,EAAMoI,EAAKG,MAAMD,GACnBtI,EAAIwI,SAA0C,IAAhCV,EAAOW,QAAQzI,EAAIwI,SACjCH,EAASnB,KAAKoB,GAItB,cAAuBD,EAAvB,eAAiC,CAA5B,IAA4B,EAAtBH,EAAQ,KAAc,cACNG,GADM,IAC7B,2BAAiC,CAC7BJ,EAAWC,EADkB,UADJ,iCA1Bf,8BAiCtB,IAjCsB,EAiChBQ,EAAYC,OAAO5B,KAAKgB,GAAYhE,OAEpC6E,EAAa,GAnCG,cAoCFF,GApCE,IAoCtB,2BAA+B,CAAC,IAAD,EAApBG,EAAoB,QACrBC,EAAM,GADe,cAEPJ,GAFO,IAE3B,2BAA+B,CAAC,IAArBK,EAAoB,QACvBf,EAAkBa,IAAUb,EAAkBa,GAAOE,GACrDD,EAAI5B,KAAKc,EAAkBa,GAAOE,IAElCD,EAAI5B,KAAK,IANU,8BAS3B0B,EAAW1B,KAAK4B,IA7CE,8BAgDtB,MAAO,CAACJ,EAAWE,K,2DAGrB,gCAAA3K,EAAA,6DACQ+K,EAAO,mDADf,KAGezC,KAHf,SAIYC,MAAM,GAAD,OACNwC,EADM,eAET,CAAEvC,MAAO,aACTnI,MAAK,SAACL,GAAD,OAAOA,EAAEyI,UAPtB,oCAGoBC,MAHpB,gBAEQhI,EAFR,CAGIsK,UAHJ,MAUQC,EAAWvK,EAAKsK,UAAUnK,KAAI,SAAAkB,GAChC,OAAOwG,MAAM,GAAD,OAAIwC,EAAJ,YAAYhJ,EAAI2H,GAAhB,UAA2BrJ,MAAK,SAAAE,GAAC,OAAIA,EAAE2K,aAXzD,KAa4BjK,KAb5B,UAaqDkK,QAAQC,WAAWH,GAbxE,oBAaEhK,KAAK+C,MAAMqH,aAbb,KAaiCC,cAbjC,gBAcErK,KAAKqD,SAAS5D,GAdhB,iD,mFAiBA,SAAgB6K,EAAOC,EAAwBC,GAC7C,IAAQC,EAAeD,EAAfC,WACR,EAAaH,EAAM7K,KAAK,GAAGiL,MAAMC,MAAM,MAAvC,mBAAK5L,EAAL,KAAQuG,EAAR,KACA,MAAM,oDAAN,OAGcmF,EAHd,iQAUU1L,EAVV,6CAYUuG,EAZV,4XAmB+DgF,EAAM7K,KAAK,GAAGmL,MAnB7E,oEAoB+CN,EAAM7K,KAAK,GAAG4J,MApB7D,4F,gCA4BF,WACE,GAAKrJ,KAAK+C,MAAMqH,aAAhB,CAIA,IAAMjC,EAAKC,SAASC,eAAe,oBACnC,cAAqCrI,KAAK+C,MAAMqH,aAAhD,GAAKZ,EAAL,KAAgBV,EAAhB,KACAX,EAAGG,UAAY,GACf,IAAMxJ,EAAU,CACZ+L,iBAAiB,EACjBC,MAAO,CACHJ,MAAO,CACHK,UAAW,SAAChM,EAAGuG,GAAJ,MAAU,MAG7B0F,MAAO,CACHN,MAAO,CACHK,UAAW,SAAChM,EAAGuG,GAAJ,MAAU,MAG7B2F,QAAS,CACLC,SAAUlL,KAAKmL,kBAGnB1L,EAAO,CACPyI,WAAY,CACRvF,EAAG6G,EACH4B,EAAG5B,GAEP7B,OAAQmB,GAEZP,IAAM8C,aAAa,CAAElD,KAAI1I,OAAMX,e,oBAGjC,WACE,OACE,6BACE,mDACA,yBAAK2J,GAAG,mBAAmB7F,MAAO,CAACmE,MAAO,QAAS2B,OAAQ,gB,GAnJjB3C,a,iCCG9CuF,EAAa,CACf,IACA,QACA,oCACA,2CACA,mCACA,8BAEA,+BACA,wCACA,uCACA,oCACA,iDAEA,6BACA,2CACA,mCACA,4CACA,4CACA,4CACA,gCACA,0CACA,kDAEA,+CACA,6CACA,kDACA,gCAEA,iCACA,+BACA,0BACA,yCACA,gEACA,uEACA,kCACA,iCAEA,kDAEA,wCAEA,0BACA,wBAGEC,EAA+B,CACjC,qDACA,sDACA,+CACA,mCACA,mCACA,sCACA,oDACA,qDACA,8CACA,oEACA,mEACA,yEACA,yEAKF,SAASC,EAAWzL,GAClB,MAAkB,YAAXA,GAAmC,YAAXA,EAGjC,SAAS0L,EAAW1L,GAElB,MAAkB,YAAXA,GAAmC,YAAXA,GAAmC,UAAXA,GAAiC,cAAXA,EAW/E,SAAS2L,EAAWC,GAClB,IAAMC,EAAcD,EAASE,QAC7B,MAAI,gBAAgB/H,KAAK6H,EAAS9M,KACzB,UAAY+M,EAEZA,E,IA2CUE,E,kDACnB,WAAY3L,GAAQ,IAAD,8BACjB,cAAMA,IACD4C,MAAQ,EAAKgJ,eAFD,E,gDAInB,WACE,IAAMC,EAAYC,aAAaC,QAAQ,SACnCC,EAAQ,GAOZ,OANIH,IACFG,EAAQ9E,KAAKI,MAAMuE,IAEf,cAAeG,IAAQA,EAAK,WAAgB,GAC5C,aAAcA,IAAQA,EAAK,SAAe,IAC1C,sBAAuBA,IAAQA,EAAK,mBAAwB,GAC3D,CACLC,OAAQ,GACRC,WAAY,GACZhM,YAAa,IAAIK,KACjBJ,WAAY,IAAII,KAAK,GACrB4L,UAAWH,EAAMG,UACjBC,SAAUJ,EAAMI,SAChBC,kBAAmBL,EAAMK,qB,+BAG7B,WACExM,KAAKiD,SACLjD,KAAKO,SAAW2C,YAAYlD,KAAKiD,OAAOE,KAAKnD,MAAOA,KAAKG,MAAMI,UAC3DP,KAAK+C,MAAMyJ,mBAAiD,YAA5BC,aAAaC,YAC/CD,aAAaE,sB,gCAGjB,SAAmBC,GACjBX,aAAaY,QAAQ,QAASxF,KAAKyF,UAAU,CAC3CN,kBAAmBxM,KAAK+C,MAAMyJ,kBAC9BF,UAAWtM,KAAK+C,MAAMuJ,UACtBC,SAAUvM,KAAK+C,MAAMwJ,YAEnBvM,KAAKG,MAAMW,MAAQ8L,EAAU9L,MAC/Bd,KAAKqD,SAASrD,KAAK+L,gBACnB/L,KAAKiD,Y,2DAGT,qBAiDiB8J,EAjDjB,IAqFWC,EArFX,EAmIWC,EAnIX,gBAAAlO,EAAA,6DAmIWkO,EAnIX,SAmIsBtK,EAAGyI,GACrB,IAAM8B,EAAK5B,EAAWtH,MAAK,SAACmJ,GAAD,OAAOtM,EAAc8B,GAAGyK,WAAWD,MACxDE,EAAK/B,EAAWtH,MAAK,SAACmJ,GAAD,OAAOtM,EAAcuK,GAAGgC,WAAWD,MAC9D,OAAID,EAAKG,EAAW,EACXH,EAAKG,GACL1K,EAAIyI,GADa,EAEjBzI,EAAIyI,EAAU,EACX,GArDL4B,EArFX,SAqFkCM,GAQ9BA,EAASC,UAAU/J,SAPnB,SAASgK,EAAG7B,GACNA,EAAS8B,OAAmC,qDAA1B9B,EAAS8B,MAAMC,OACnC/B,EAAS8B,MAAMF,UAAU/J,QAAQgK,GAEjCG,EAAeC,IAAIlC,EAAWC,QA1FtC,oCAAA5M,EAAA,MAiDE,qBAIW8O,EAJX,mBAAA9O,EAAA,sDAIW8O,EAJX,SAIoB3E,EAAM4E,GACtB,IAAIC,EAAWpO,EAASmO,GAAOC,SAC/B,GAAI7E,EACF,IAAK,IAAIE,KAAYF,EAAM,CACzB,IAAIpI,EAAMoI,EAAKE,GACT4E,EAAuBD,GAAUE,eAAe7E,KACpD4E,EAAuBD,GAAU3E,GAAY,CAAC,SAAY,IAAK,OAAUtI,EAAIwI,OAAQ,IAAOxI,EAAIoN,cATpGF,EAAyB,GACzBrO,EAAW,GAFjB,cAgBuBF,EAAK2M,QAhB5B,IAgBE,2BACE,IADS+B,EAAuB,QACvBC,EAAI,EAAGA,EAAID,EAAOE,UAAUpI,MAAMb,OAAQgJ,IAC7CL,EAAWI,EAAOE,UAAUpI,MAAMmI,GAAGL,SACnCC,EAAuBC,eAAeF,KAC1CC,EAAuBD,GAAY,IAErCpO,EAASqI,KAAK,CACZnJ,IAAK,sDAAwDkP,EAAW,QACxEA,aAxBR,8CA6BsBpP,EAAQ2P,UAAU3O,EAASC,KAAI,SAAA2O,GAAO,OAAIA,EAAQ1P,QA7BxE,qBA8BU2E,QAAQqK,GA9BlB,kBA+BSG,GA/BT,6CAjDF,uBAiDiBjB,EAjDjB,2CACQ1M,EAAc,IAAIK,KACxBV,KAAKqD,SAAS,CAAChD,YAAaA,IAF9B,SAaiB1B,EAAQmC,IAAId,KAAKG,MAAMW,IAClC,CAACwC,KAAM,usBAoBGvC,QAAQ,OAAQ,MAlChC,OAaItB,EAbJ,sCAuCkB,EAvClB,UAwCiBd,EAAQmC,IAAId,KAAKG,MAAMW,IAAK,CAAC0N,MAD5B,IAvClB,QAwCI/O,EAxCJ,sBA0CEA,EAAKa,WAAa,IAAII,KACtBjB,EAAKe,YAAcf,EAAKa,WAAaD,OACdrB,IAAnBS,EAAKgP,YACPhP,EAAK2M,OAAS3M,EAAKgP,WA7CvB,UAkFsC1B,IAlFtC,QAkFEtN,EAAKuO,uBAlFP,OAoFQL,EAAiB,IAAIe,IAYR,YADbC,EAAa3O,KAAKG,MAAMyO,OAE5BnP,EAAK2M,OAAO5I,QAAQwJ,GAGlBvN,EAAKuO,wBACPvE,OAAO5B,KAAKpI,EAAKuO,wBAAwBxK,SAAQ,SAAS2K,GACxD,IAAIjF,EAAOzJ,EAAKuO,uBAAuBG,GACvC1E,OAAO5B,KAAKqB,GAAM1F,SAAQ,SAAS4F,GACjC,GAAmB,WAAfuF,EAAyB,CAE3B,IAAK,IAAIP,EAAI,EAAGA,EAAI7C,EAA6BnG,OAAQgJ,IACvD,GAAIhF,EAASyF,SAAStD,EAA6B6C,IAAK,CACtDT,EAAeC,IAAI,IAAMxE,GACzB,MAGEA,EAAS0F,SAAS,YAAc1F,EAAS0F,SAAS,WACtDnB,EAAeC,IAAI,IAAMxE,QAG3B,GAAIA,EAAS0F,SAAS,YAAc1F,EAAS0F,SAAS,UAAW,CAE/D,IADA,IAAIC,GAAQ,EACHX,EAAI,EAAGA,EAAI7C,EAA6BnG,OAAQgJ,IACvD,GAAIhF,EAASyF,SAAStD,EAA6B6C,IAAK,CACtDW,GAAQ,EACR,MAGCA,GAAOpB,EAAeC,IAAI,IAAMxE,UAgB/C3J,EAAK4M,WAAa,YAAIsB,EAAeqB,UAAUnK,KAAKoI,GAEpDxN,EAAK2M,OAAO5I,SAAQ,SAACiK,GACnB,IAAMwB,EAAS,IAAI1L,IADU,4CAiB7B,WAA+CkK,GAA/C,iBAAA1O,EAAA,sDACE,GAAI0O,EAAMY,UAAUpI,MAAMb,OAAS,EACjC,IADqC,EAAD,WAElC,IAAI2I,EAAWN,EAAMY,UAAUpI,MAAMmI,GAAGL,SACpCtO,EAAKuO,wBACPvE,OAAO5B,KAAKpI,EAAKuO,uBAAuBD,IAAWvK,SAAQ,SAAS4F,GAClE,IAAItI,EAAMrB,EAAKuO,uBAAuBD,GAAU3E,GAChD6F,EAAOzK,IAAI,IAAM4E,EAAU,CAAC,SAAYtI,EAAIoO,SAAU,OAAUpO,EAAIf,OAAQ,IAAOe,EAAIjC,UALpFuP,EAAI,EAAGA,EAAIX,EAAMY,UAAUpI,MAAMb,OAAQgJ,IAAM,IAF5D,4CAjB6B,sBAchBX,EAFFF,UAAU/J,SAPnB,SAASgK,EAAG7B,GACNA,EAAS8B,OAAmC,qDAA1B9B,EAAS8B,MAAMC,OACnC/B,EAAS8B,MAAMF,UAAU/J,QAAQgK,GAEjCyB,EAAOzK,IAAIkH,EAAWC,GAAWA,MATV,oCA8B7BwD,CAAgC1B,GAChCA,EAAMwB,OAASA,KAaM,GACnBjP,KAAKG,MAAMW,IAAIgO,SAAS,WAAY,WACtC,IAAMM,EAAoB,IAAIV,IACxBW,EAA4B,IAAI9L,IACtC9D,EAAK4M,WAAW7I,SAAQ,SAAC1C,GACX,qBAARA,GACQ,YAARA,IACAA,EAAIgO,SAAS,cACjBM,EAAkBxB,IAAI9M,OAExB,IAAK,IAAIsN,EAAI,EAAGA,EAAI3O,EAAK2M,OAAOhH,UAG1BgJ,EAbe,KAcdgB,EAAkBjI,KAJeiH,IAAK,CAK7B3O,EAAK2M,OAAOgC,GACLa,OACdzL,SAAQ,SAAC8L,EAAIzD,GAClB,GAAKuD,EAAkBG,IAAI1D,GAEpB,GAAIJ,EAAW6D,EAAGvP,QAAS,CAChC,IAAIyP,EAAQH,EAA0BnQ,IAAI2M,IAAY,EACtD2D,IACAH,EAA0B7K,IAAIqH,EAAS2D,QAC9BhE,EAAW8D,EAAGvP,SACvBqP,EAAkBK,OAAO5D,YAM/BwD,EAA0B7L,SAAQ,SAACvD,EAAGyD,GAEhCzD,GAAK,GACPoP,EAA0BI,OAAO/L,MAIrCjE,EAAK4P,0BAA4BA,EAK7B,EAAKtM,MAAMsM,2BACb,EAAKtM,MAAMsM,0BAA0B7L,SAAQ,SAACvD,EAAG+E,GAC1CqK,EAA0BE,IAAIvK,IAEjC,IAAIyH,aAAa,UAAO,EAAKtM,MAAMW,IAAK,CAAC,KAAQD,EAAcmE,QAIrEqK,EAA0B7L,SAAQ,SAACvD,EAAG+E,GAEhC,EAAKjC,MAAMsM,4BAA8B,EAAKtM,MAAMsM,0BAA0BE,IAAIvK,IAEpF,IAAIyH,aAAa,UAAO,EAAKtM,MAAMW,IAAK,CAAC,KAAQD,EAAcmE,QAtD7B,GA4DxChF,KAAKqD,SAAS5D,GAvPhB,iD,0EA0PA,WAAU,IAAD,OAwBP,IAAI2M,EAASpM,KAAK+C,MAAMqJ,OACpBiD,EAA4BrP,KAAK+C,MAAMsM,0BAErChD,EAAarM,KAAK+C,MAAMsJ,WACxBqD,EAAkBrD,EAAWzM,KAAI,SAACiM,GAAD,OACrC,wBAAIjL,UAAU,SAASoE,IAAK6G,GAAS,yBAAKjL,WACvC0K,EAAWtH,MAAK,SAACmJ,GAAD,OAAOtM,EAAcgL,GAASuB,WAAWD,MAAM,YAAc,sBAAwB,KACrGkC,EAA0BE,IAAI1D,GAAW,iBAAmB,KAC1DP,EAAWtH,MAAK,SAACmJ,GAAD,OAAOtM,EAAcgL,GAASuB,WAAWD,MAAM,GAAK,UAAMtM,EAAcgL,QAQzF8D,EAAgBC,gBAAiBC,WAAW,CAAC,EAF7B,MAGtBF,EAAcG,OAAO,CAAC,EAAGF,MAAOxD,GAAQ,SAAC9G,GAAD,OAAOA,EAAE4J,cAEjD,IAAMa,EAAW,IAAIrB,IAEf/J,EAAOyH,EAAOxM,KAAI,SAAC6N,GACvB,IAAMwB,EAASxB,EAAMwB,OAOrB,IAAIlK,EAAO,EACPiL,GAAc,EACdC,GAAiB,EACjBlB,GAAQ,EAENmB,EAAc7D,EAAWzM,KAAI,SAACiM,GAClC,IA1DiB9L,EA5UKoQ,EAsYhBb,EAAKL,EAAO/P,IAAI2M,GAClBuE,EAAO,kBAAC,WAAD,MACX,QAAWpR,IAAPsQ,EAAkB,CACpBP,GAAQ,EACR,IAAMsB,EAAMC,IAAehB,EAAGJ,UAExBtL,EA3YJ,yBADkBuM,EA4YczE,EAAW4D,IA1Y5C,YACQ,aAANa,EACF,YACE,OAAOrM,KAAKqM,GACjB,QAAQrM,KAAKqM,IAAM,QAAQrM,KAAKqM,GAC3B,UAEA,UAEA,SAASrM,KAAKqM,GAChB,MACE,SAASrM,KAAKqM,IAAM,UAAUrM,KAAKqM,IAAM,UAAUrM,KAAKqM,IAAM,UAAUrM,KAAKqM,GAClF,OAAOrM,KAAKqM,GACV,iBAAiBrM,KAAKqM,GACjB,iBACE,QAAQrM,KAAKqM,GACf,YAEA,YAEA,QAAQrM,KAAKqM,GAClB,QAAQrM,KAAKqM,GACR,OAEA,eAGF,YAGJ,UA6WKI,EAAY,EAQhB,GAPa,YAAT3M,EACFoM,GAAc,EAEdO,EAAYxO,KAAKyO,KAAK/N,EAAamB,GAAQyM,EAAM,IAAO,GAAK,IAE/DtL,GAAQwL,EACHjB,EAAGvP,SAAQkQ,GAAiB,GACT,SAApB,EAAK9P,MAAMyO,KACbwB,EA3BN,SAAqBd,EAAIvP,GACvB,OAAO,kBAAC,WAAD,KAAU,0BAAMa,UAAW4K,EAAWzL,GAAU,cAAgB,oBAAqBuQ,IAAehB,EAAGJ,UAAU,KAAjH,YA0BIuB,CAAYnB,EAAIA,EAAGvP,aACrB,GAAwB,SAApB,EAAKI,MAAMyO,KACpBwB,EAAO,kBAAC,WAAD,KAAoB,YAATxM,EAAqB,IAAM2M,EAAtC,gBACF,CACL,IAAIG,EAAWpB,EAAGzQ,IACd,eAAeiF,KAAK4M,GAClBA,EAAS5B,SAAS,aACpB4B,GAAsB,YAGxBA,EAAW/R,EAAQgS,KAAKD,EAAW,YAErCN,EAAO,uBAAG3K,KAAMiL,EACN9P,UAAU,OACVgQ,OAAO,SACPC,IAAKnF,EAAW4D,IAxF5B9D,EADezL,EA0FSuP,EAAGvP,QAzFA,0BAAM+Q,KAAK,MAAMlO,MAAO,CAACgI,MAAM,SAAUmG,aAAW,UAApD,KAC3BtF,EAAW1L,GAAgB,0BAAM+Q,KAAK,MAAMlO,MAAO,CAACgI,MAAM,OAAQmG,aAAW,UAAlD,KA/VrC,SAAoBhR,GAClB,MAAkB,YAAXA,GAAmC,cAAXA,EA+VvBiR,CAAWjR,GAAgB,0BAAM+Q,KAAK,MAAMlO,MAAO,CAACgI,MAAM,QAASmG,aAAW,aAAnD,KA5VrC,SAAoBhR,GAClB,OAAQA,GAAqB,YAAXA,EA4VVkR,CAAWlR,GAAgB,0BAAMa,UAAU,kBAAkBkQ,KAAK,MAAMlO,MAAO,CAACgI,MAAM,aAAcmG,aAAW,eAApF,KACxBhR,IAyFL,OAAO,kBAAC,IAAD,CACOiF,IAAK6G,EACLqF,QAASrF,EACTsF,gBAAiB,EACjBC,UAAU,WACVC,sBAAsB,GAAM,wBAAIrM,IAAK6G,EAASjL,UAAU,YAAYgC,MAAO,CAAC6D,UAAW,QAAS6K,WAAY,aAAcC,QAAS,IAAKnB,OAyBxJ,SAASoB,EAAanD,GACpB,IAAMoD,EAAe,2DACrB,YAA0BzS,IAAtBqP,EAAUqD,QAA8BD,EACrCpD,EAAUqD,QACdxM,QAAO,SAACyM,GAAD,YAA8B3S,IAAlB2S,EAAOC,UAC1BhS,KAAI,SAAC+R,EAAQvD,GAAT,OACHuD,EAAOC,OAAOhS,KAAI,SAACiS,EAAOzD,GAAR,OAAc,wBAAIpJ,IAAKoJ,GAAIyD,EAAMC,iBAAnB,IAAsC,WAwB5E,IAcIC,EACAC,EAfEC,EAAYxE,EAAMiE,QAAQ1N,MAC9B,SAAC2N,GAAD,YAA8B3S,IAAlB2S,EAAOC,QACPD,EAAOC,OAAO5N,MACZ,SAAC6N,GAAD,MAA4B,0CAAjBA,EAAMnE,aAE3BwE,EAAgBzE,EAAMiE,QAAQ1N,MAClC,SAAC2N,GAAD,YAA8B3S,IAAlB2S,EAAOC,QACPD,EAAOC,OAAO5N,MACZ,SAAC6N,GAAD,MAA4B,2CAAjBA,EAAMnE,QACY,qCAAjBmE,EAAMnE,QAAiD,iBAAiB5J,KAAK+N,EAAMM,uBAG3GC,EAAS,GACTC,EAAO,GAMPC,GAAQ,EACZ,GAAIL,EACFI,EAAOb,EAAa/D,QACf,GAAIyE,EAAe,CACxB,IAAM/S,EAlCR,SAAuBsO,GACrB,IAAIkE,EAASlE,EAAMiE,QAAQa,MAAK,SAACZ,GAAD,MAA8B,sDAAlBA,EAAOjE,UAInD,YAHe1O,IAAX2S,IACFA,EAASlE,EAAMiE,QAAQa,MAAK,SAACZ,GAAD,MAA8B,gEAAlBA,EAAOjE,gBAElC1O,IAAX2S,EACK,IAAIpO,IAEN,IAAIA,IAAIoO,EAAOa,WAAW5S,KAAI,SAAC6S,GAAD,MAAW,CAACA,EAAMvO,KAAMuO,EAAMpJ,WA0BpDqJ,CAAcjF,GACvBkF,EAAQxT,EAAOD,IAAI,kBAKzB,GAJA6S,EAAY5S,EAAOD,IAAI,iBACvB8S,EAAU7S,EAAOD,IAAI,eACrBkT,EAASjT,EAAOD,IAAI,wBACpBmT,EAAOM,EACH5C,EAASR,IAAIyC,GAAU,CAEzB,IAAK,EAAKjP,MAAMuJ,UAAW,OAAO,kBAAC,WAAD,CAAUtH,IAAKyI,EAAMmF,SACvDN,GAAQ,EAEV,GAA4B,KAAxB,EAAKvP,MAAMwJ,UAAmB,EAAKxJ,MAAMwJ,WAAa6F,EACxD,OAAO,kBAAC,WAAD,CAAUpN,IAAKyI,EAAMmF,SAE9B7C,EAASnC,IAAIoE,OACR,CACL,IAAM3D,EAAYZ,EAAMY,UAGxB+D,EA/DF,SAAqB3E,GACnB,IAAMkE,EAASlE,EAAMiE,QAAQa,MAAK,SAACZ,GAAD,MAA8B,6BAAlBA,EAAOjE,UACrD,QAAe1O,IAAX2S,EAAsB,MAAO,YACjC,IAAME,EAAQF,EAAOC,OAAOW,MAAK,SAACV,GAAD,MAA4B,0CAAjBA,EAAMnE,UAClD,QAAc1O,IAAV6S,EAAqB,MAAO,GAChC,IAAMgB,EAAQhB,EAAMC,iBAAiBe,MAAM,kCAC3C,OAAc,OAAVA,EAAuBhB,EAAMC,iBAC1Be,EAAM,GAwDJC,CAAYrF,GAEnB4E,EAD6B,IAA3BhE,EAAUpI,MAAMb,OACXoM,EAAa/D,GAEbY,EAAUpI,MAAMY,QAAQkM,UAAUnT,KAtF7C,SAAsBuO,GACpB,OACE,yBAAKnJ,IAAKmJ,EAAOJ,UAVrB,SAAiCiF,GAC/B,IAAI1Q,EAAI0Q,EAAQH,MAAM,cACtB,OAAIvQ,EACK,kBAAC,WAAD,KAAU,uBAAGmD,KAAM,2CAA6CnD,EAAE,GAAIsO,OAAO,UAAnE,IAA8EtO,EAAE,KAE5F,kBAAC,WAAD,MAMF2Q,CAAwB9E,EAAO6E,SADlC,IAC4D7E,EAAO+E,IAd1DnS,QAAQ,cAAe,IAcyC,IACvE,8BAAM,uBAAG0E,KAAM,6CAA+C0I,EAAOJ,SAC5D6C,OAAO,UAAUzC,EAAOJ,SAASlH,MAAM,EAAG,SAqFzD,IAAMsM,EAAanS,EAAeyM,EAAMxM,WAExC,OAAK8N,EAKH,wBAAI/J,IAAKyI,EAAMmF,OAAQhS,UAAW0R,EAAQ,QAAU,IAClD,wBAAI1R,UAAU,aAAY,uBAAG6E,KAAMgI,EAAM5O,IAAK+R,OAAO,UAAUnD,EAAMmF,SACrE,wBAAIhS,UAAU,aAAY,uBAAG6E,KAAMsM,EAAWnB,OAAO,UAAUoB,EAAU,IAAMA,EAAU,KACzF,wBAAIpR,UAAU,aAAauS,GAC1BjD,EACD,wBAAItP,UAAU,yBAAyBmB,KAAKC,MAAMyL,EAAMyB,SAAS,IAAK,KACtE,4BACE,yBAAKnI,MArLS,IAqLa2B,OApLZ,IAqLb,0BAAM9H,UAAU,MACV+B,EAAE,IACFyI,EAAE,IACFrE,MAAO4I,EAAclC,EAAMyB,UAC3BxG,OAzLO,OA4LjB,wBAAI9H,UAAU,aAAagC,MAAO,CAAC6D,UAAW,UAAWwJ,EAAiB,UAAO,GAAIvN,EAAeqC,GAAOiL,EAAc,IAAM,IAC/H,wBAAIpP,UAAU,cAAcwR,GAC5B,wBAAIxR,UAAU,cAAcyR,IArBvB,kBAAC,WAAD,SA0BX,OACE,6BACE,4BACE,uBAAG5M,KAAM9G,EAAQgS,KAAK,OAAS3Q,KAAKG,MAAMW,KAAM8P,OAAO,UAAU5Q,KAAKG,MAAMW,KAD9E,WAC+F,IAC7F,kBAACZ,EAAD,CAAMK,SAAUP,KAAKG,MAAMI,SACrBC,YAAaR,KAAK+C,MAAMvC,YACxBH,YAAaL,KAAK+C,MAAM1C,YACxBC,WAAYN,KAAK+C,MAAMzC,cAE/B,yBAAKsC,MAAO,CAAC,MAAS,SAAtB,mDACA,6BACE,wBAAIhC,UAAU,QACZ,4BACE,2BAAOwS,KAAK,WAAWlP,KAAK,aAAamP,QAASrT,KAAK+C,MAAMuJ,UAAWgH,SAAU,SAACnG,GAAQ,EAAK9J,SAAS,CAACiJ,UAAWa,EAAEyD,OAAOyC,aAC9H,2BAAOE,QAAQ,cAAf,6BAEF,4BACE,2BAAOH,KAAK,OAAOlP,KAAK,WAAWmF,MAAOrJ,KAAK+C,MAAMwJ,SAAU+G,SAAU,SAACnG,GAAQ,EAAK9J,SAAS,CAACkJ,SAAUY,EAAEyD,OAAOvH,WACpH,2BAAOkK,QAAQ,WAAW3Q,MAAO,CAAC4Q,gBAAiB,QAASC,SAAU,WAAYC,OAAQ,IAA1F,oCAEF,4BACE,2BAAON,KAAK,WAAWlP,KAAK,qBAAqBmP,QAASrT,KAAK+C,MAAMyJ,kBAAmB8G,SAAU,SAACnG,GAAD,OAAO,EAAK9J,SAAS,CAACmJ,kBAAmBW,EAAEyD,OAAOyC,aACpJ,2BAAOE,QAAQ,sBAAf,uCACgC,WAA5B9G,aAAaC,WAA0B,kBAAC,WAAD,SAAW,kFAA4E,OAKxI,2BAAO9L,UAAU,qBACf,+BACE,4BACE,wBAAIA,UAAU,aAAd,MACA,wBAAIA,UAAU,aAAd,OACA,wBAAIA,UAAU,aAAd,QACC8O,EACD,wBAAI9O,UAAU,aAAakF,QAAQ,KAAnC,iBACA,wBAAIlF,UAAU,cAAd,QACA,wBAAIA,UAAU,cAAd,QACA,wBAAIA,UAAU,cAAd,iBAGJ,+BAAQ+D,S,GAvjB+BoB,aCnI3CwF,EAA+B,CACnC,qDACA,sDACA,+CACA,mCACA,mCACA,sCACA,oDACA,qDACA,8CACA,oEACA,mEACA,mEACA,kCAGF,SAASoI,EAAkBvK,GACzB,OAAOmC,EAA6BvH,MAAK,SAACL,GAAD,OAAOyF,EAAS0F,SAASnL,MAGpE,SAAS6H,EAAWzL,GAClB,MAAkB,YAAXA,GAAmC,YAAXA,EAGjC,SAAS0L,EAAW1L,GAElB,MAAkB,YAAXA,GAAmC,YAAXA,GAAmC,UAAXA,GAAiC,cAAXA,EAmB/E,SAAS6T,EAAYC,GAEnB,IADA,IAAIC,EAAS,IAAIvQ,IACjB,MAAckG,OAAO5B,KAAKgM,GAA1B,eAAgC,CAA3B,IAAInQ,EAAC,KACRoQ,EAAOtP,IAAId,EAAGmQ,EAAInQ,IAEpB,OAAOoQ,E,IAGYhI,E,kDACnB,WAAY3L,GAAQ,IAAD,8BACjB,cAAMA,IACD4C,MAAQ,EAAKgJ,eAFD,E,gDAInB,WACE,IAAMC,EAAYC,aAAaC,QAAQ,UACnCC,EAAQ,GAMZ,OALIH,IACFG,EAAQ9E,KAAKI,MAAMuE,IAEf,sBAAuBG,IAAQA,EAAK,mBAAwB,GAC5D,oBAAqBA,IAAQA,EAAK,iBAAsB,GACvD,CACLC,OAAQ,GACRC,WAAY,GACZhM,YAAa,IAAIK,KACjBJ,WAAY,IAAII,KAAK,GACrB8L,kBAAmBL,EAAMK,kBACzBuH,gBAAiB5H,EAAM4H,gBACvBC,cAAe,M,+BAGnB,WACEhU,KAAKiD,SACLjD,KAAKO,SAAW2C,YAAYlD,KAAKiD,OAAOE,KAAKnD,MAAOA,KAAKG,MAAMI,UAC3DP,KAAK+C,MAAMyJ,mBAAiD,YAA5BC,aAAaC,YAC/CD,aAAaE,sB,gCAGjB,SAAmBC,GACjBX,aAAaY,QAAQ,SAAUxF,KAAKyF,UAAU,CAC5CN,kBAAmBxM,KAAK+C,MAAMyJ,kBAC9BuH,gBAAiB/T,KAAK+C,MAAMgR,mBAE1B/T,KAAKG,MAAMW,MAAQ8L,EAAU9L,KAAOd,KAAKG,MAAMyO,OAAShC,EAAUgC,OACpE5O,KAAKqD,SAASrD,KAAK+L,gBACnB/L,KAAKiD,Y,2DAGT,qDAAAlE,EAAA,6DACQsB,EAAc,IAAIK,KAClBuT,EAASjU,KAAKG,MAAMW,IAAIC,QAAQ,YAAa,IAC7CmT,EAA0B,WAAXD,EAAsBA,EAAS,KAC9CE,EAAa,4CACnBnU,KAAKqD,SAAS,CAAChD,YAAaA,IAL9B,SAOwBpB,IAAMC,IAAN,UAAaiV,EAAb,YAA2BF,EAA3B,gBAPxB,cAOQG,EAPR,OASQzU,EAAWyU,EAAQ3U,KAAKG,IAAb,uCAAiB,WAAM6N,GAAN,eAAA1O,EAAA,+EAEdE,IAAMC,IAAN,UAAaiV,EAAb,YAA2BD,EAA3B,YAA2CzG,EAAMhF,GAAjD,UAFc,OAExBnJ,EAFwB,OAG9BmO,EAAMwB,OAAS2E,EAAYtU,EAAEG,MAHC,gDAK9BgO,EAAMwB,OAAS,IAAI1L,IALW,iCAQzBkK,GARyB,yDAAjB,uDATnB,UAmBuBxO,IAAMa,IAAIH,GAnBjC,SAmBQyM,EAnBR,QAoBS2G,WAEDtT,EAAO,IAERa,WAAa,IAAII,KACtBjB,EAAKe,YAAcf,EAAKa,WAAaD,EAE/BsO,EAAa3O,KAAKG,MAAMyO,KAExBjB,EAAiB,IAAIe,IAC3BtC,EAAO5I,SAAQ,SAAAiK,GACbA,EAAMwB,OAAOzL,SAAQ,SAAC8L,EAAIlG,GACxB,IACMiL,GADqBjL,EAAS0F,SAAS,YAAc1F,EAAS0F,SAAS,WAAa1F,EAAS0F,SAAS,aAAe1F,EAAS0F,SAAS,eACnG6E,EAAkBvK,IACxC,YAAfuF,IAA6B0F,GACd,YAAf1F,GAA4B0F,IAC/B1G,EAAeC,IAAIxE,SAKzB3J,EAAK4M,WAAa,YAAIsB,EAAeqB,UAAUnK,OAC/CpF,EAAK2M,OAASA,EAYS,GACnBpM,KAAKG,MAAMW,IAAIsM,WAAW,aAAc,WAC1C,IAAMgC,EAAoB,IAAIV,IACxBW,EAA4B,IAAI9L,IACtC9D,EAAK4M,WAAW7I,SAAQ,SAAC1C,GACX,qBAARA,GACQ,YAARA,IACAA,EAAIgO,SAAS,cACjBM,EAAkBxB,IAAI9M,OAExB,IAAK,IAAIsN,EAAI,EAAGA,EAAI3O,EAAK2M,OAAOhH,UAG1BgJ,EAbe,KAcdgB,EAAkBjI,KAJeiH,IAAK,CAK7B3O,EAAK2M,OAAOgC,GACLa,OACdzL,SAAQ,SAAC8L,EAAIzD,GAClB,GAAKuD,EAAkBG,IAAI1D,GAEpB,GAAIJ,EAAW6D,EAAGhG,QAAS,CAChC,IAAIkG,EAAQH,EAA0BnQ,IAAI2M,IAAY,EACtD2D,IACAH,EAA0B7K,IAAIqH,EAAS2D,QAC9BhE,EAAW8D,EAAGhG,SACvB8F,EAAkBK,OAAO5D,YAM/BwD,EAA0B7L,SAAQ,SAACvD,EAAGyD,GAEhCzD,GAAK,GACPoP,EAA0BI,OAAO/L,MAIrCjE,EAAK4P,0BAA4BA,EAK7B,EAAKtM,MAAMsM,2BACb,EAAKtM,MAAMsM,0BAA0B7L,SAAQ,SAACvD,EAAG+E,GAC1CqK,EAA0BE,IAAIvK,IAEjC,IAAIyH,aAAa,UAAO,EAAKtM,MAAMW,IAAK,CAAC,KAAQD,EAAcmE,QAIrEqK,EAA0B7L,SAAQ,SAACvD,EAAG+E,GAEhC,EAAKjC,MAAMsM,4BAA8B,EAAKtM,MAAMsM,0BAA0BE,IAAIvK,IAEpF,IAAIyH,aAAa,UAAO,EAAKtM,MAAMW,IAAK,CAAC,KAAQD,EAAcmE,QAtDzB,GA2D5ChF,KAAKqD,SAAS5D,GAlHhB,iD,iFAqHA,SAAcyE,GACX,IAAM8P,EAAgBhU,KAAK+C,MAAMiR,cACjC,GAAIA,EAAc5O,OAAS,IAAMlB,EAAK4K,SAASkF,GAC3C,OAAO,EAEX,GAAIhU,KAAK+C,MAAMgR,gBACX,OAAO,EAEX,IAAMO,EAAcpQ,EAAKkJ,WAAW,uBAC9BmH,EAAUrQ,EAAKkJ,WAAW,uBAChC,QAASkH,GAAwB,YAATpQ,GAAsBqQ,K,oBAGjD,WAAU,IAAD,OAWP,IAAInI,EAASpM,KAAK+C,MAAMqJ,OACpBiD,EAA4BrP,KAAK+C,MAAMsM,0BAErCmF,EAAexU,KAAK+C,MAAMsJ,WAAWnH,QAAO,SAAChB,GAAD,OAAU,EAAKuQ,cAAcvQ,MACzEwQ,EAAoBF,EAAa5U,KAAI,SAACiM,GAAD,OACzC,wBAAIjL,UAAU,SAASoE,IAAK6G,GAAS,yBAAKjL,UAAWyO,EAA0BE,IAAI1D,GAAW,iBAAmB,IAAKhL,EAAcgL,QAGhIlH,EAAOyH,EAAOxM,KAAI,SAAC6N,GACvB,IAAIsB,GAAQ,EACNE,EAASxB,EAAMwB,OAEfiB,EAAcsE,EAAa5U,KAAI,SAACiM,GACpC,IAvBiB9L,EAuBXuP,EAAKL,EAAO/P,IAAI2M,GAClBuE,EAAO,kBAAC,WAAD,MAUX,YATWpR,IAAPsQ,IACFP,GAAQ,EACRqB,EAAO,uBAAG3K,KAAM6J,EAAGpB,UACTtN,UAAU,OACVgQ,OAAO,SACPC,IAAKhF,GA7BfL,EADezL,EA+BOuP,EAAGhG,QA9BE,0BAAMwH,KAAK,MAAMlO,MAAO,CAACgI,MAAM,SAAUmG,aAAW,UAApD,KA5LrC,SAAoBhR,GAClB,MAAkB,YAAXA,EA4LC4U,CAAW5U,GAAgB,0BAAM+Q,KAAK,MAAMlO,MAAO,CAACgI,MAAM,QAASmG,aAAW,WAAnD,KAC3BtF,EAAW1L,GAAgB,0BAAM+Q,KAAK,MAAMlO,MAAO,CAACgI,MAAM,OAAQmG,aAAW,UAAlD,KAtMrC,SAAoBhR,GAClB,MAAkB,YAAXA,GAAmC,cAAXA,EAsMvBiR,CAAWjR,GAAgB,0BAAM+Q,KAAK,MAAMlO,MAAO,CAACgI,MAAM,QAASmG,aAAW,aAAnD,KAnMrC,SAAoBhR,GAClB,OAAQA,GAAqB,YAAXA,EAmMVkR,CAAWlR,GAAgB,0BAAMa,UAAU,kBAAkBkQ,KAAK,MAAMlO,MAAO,CAACgI,MAAM,aAAcmG,aAAW,eAApF,KA5LrC,SAA0BhR,GACxB,MAAkB,wBAAXA,EA4LC6U,CAAiB7U,GAAgB,0BAAM+Q,KAAK,MAAMlO,MAAO,CAACgI,MAAM,QAASmG,aAAW,UAAnD,KAC9BhR,IA2BE,kBAAC,IAAD,CACOiF,IAAK6G,EACLqF,QAASrF,EACTsF,gBAAiB,EACjBC,UAAU,WACVC,sBAAsB,GAAM,wBAAIrM,IAAK6G,EAASjL,UAAU,YAAYgC,MAAO,CAAC6D,UAAW,QAAS6K,WAAY,aAAcC,QAAS,IAAKnB,OAmBxJ,IAhBwB8C,EAgBpBd,EAAS3E,EAAM2E,OAAO7F,SAAWkB,EAAM2E,OAAO7F,SAAWkB,EAAM2E,OAAOlO,KAEpEmO,EACF,yBAAKrN,IAAKyI,EAAMhF,KAnBIyK,EAoBFzF,EAAMoH,QAnBnB3B,EAAInS,QAAQ,cAAe,KAmBC4J,MAAM,MAAM,GAAI,IAC/C,8BAAM,uBAAGlF,KAAM,6CAA+CgI,EAAMhF,GAC3DmI,OAAO,UAAUnD,EAAMhF,GAAG5B,MAAM,EAAG,MAQ5CsM,EAAanS,EAAeyM,EAAMxM,WAExC,OAAK8N,EAKH,wBAAI/J,IAAKyI,EAAMhF,GAAI7H,UAA6B,IAC9C,wBAAIA,UAAU,aAlClB,SAAiCoS,GAC/B,IAAI1Q,EAAI0Q,EAAQH,MAAM,cACtB,OAAIvQ,IAGJA,EAAI0Q,EAAQH,MAAM,wDAFT,kBAAC,WAAD,KAAU,uBAAGpN,KAAM,2CAA6CnD,EAAE,GAAIsO,OAAO,UAAnE,IAA8EtO,EAAE,KAM5F,kBAAC,WAAD,MAyBsB2Q,CAAwBxF,EAAMoH,UACzD,wBAAIjU,UAAU,YAAY+R,MAAOlF,EAAMxM,WAAYkS,GAClDjD,EACD,wBAAItP,UAAU,cAAcwR,GAC5B,wBAAIxR,UAAU,cAAcyR,IATvB,kBAAC,WAAD,CAAUrN,IAAKyI,EAAMhF,QAchC,OACE,6BACE,4BACGzI,KAAKG,MAAMW,IADd,WAC2B,IACzB,kBAACZ,EAAD,CAAMK,SAAUP,KAAKG,MAAMI,SACrBC,YAAaR,KAAK+C,MAAMvC,YACxBH,YAAaL,KAAK+C,MAAM1C,YACxBC,WAAYN,KAAK+C,MAAMzC,cAE/B,6BACE,wBAAIM,UAAU,QACZ,4BACE,2BAAOwS,KAAK,WAAWlP,KAAK,qBAAqBmP,QAASrT,KAAK+C,MAAMyJ,kBAAmB8G,SAAU,SAACnG,GAAD,OAAO,EAAK9J,SAAS,CAACmJ,kBAAmBW,EAAEyD,OAAOyC,aACpJ,2BAAOE,QAAQ,sBAAf,uCACgC,WAA5B9G,aAAaC,WAA0B,kBAAC,WAAD,SAAW,kFAA4E,KAE/H,6BACL,4BACE,2BAAO0G,KAAK,WAAWlP,KAAK,oBAAoBmP,QAASrT,KAAK+C,MAAMgR,gBAAiBT,SAAU,SAACnG,GAAD,OAAO,EAAK9J,SAAS,CAAC0Q,gBAAiB5G,EAAEyD,OAAOyC,aAC/I,2BAAOE,QAAQ,qBAAf,sBACG,6BACL,4BACE,2BAAOA,QAAQ,mBAAf,oBACA,2BAAOH,KAAK,QAAQlP,KAAK,kBAAkBmF,MAAOrJ,KAAK+C,MAAMiR,cAAeV,SAAU,SAACnG,GAAD,OAAO,EAAK9J,SAAS,CAAC2Q,cAAe7G,EAAEyD,OAAOvH,cAI1I,2BAAOzI,UAAU,qBACf,+BACE,4BACE,wBAAIA,UAAU,aAAd,OACA,wBAAIA,UAAU,aAAd,QACC8T,EACD,wBAAI9T,UAAU,cAAd,QACA,wBAAIA,UAAU,cAAd,iBAGJ,+BAAQ+D,S,GAzS+BoB,aCvDjD,SAAS6N,EAAYC,GAEnB,IADA,IAAIC,EAAS,IAAIvQ,IACjB,MAAckG,OAAO5B,KAAKgM,GAA1B,eAAgC,CAA3B,IAAInQ,EAAC,KACRoQ,EAAOtP,IAAId,EAAGmQ,EAAInQ,IAEpB,OAAOoQ,EAIT,IACMgB,EAAkB,IAExB,SAASC,EAAYC,GACnB,OAAOjT,KAAKkT,MAAMD,EAAOF,GAAmBA,E,IAGzBI,E,kDACnB,WAAY/U,GAAQ,IAAD,8BACjB,cAAMA,IACD4C,MAAQ,EAAKgJ,eAFD,E,gDAInB,WACE,MAAO,CACLK,OAAQ,GACRC,WAAY,GACZ2H,cAAe,M,+BAGnB,WACEhU,KAAKiD,W,gCAEP,SAAmB2J,M,2DAEnB,8CAAA7N,EAAA,6DACQoV,EAAa,+DADrB,SAGwBlV,IAAMC,IAAN,UAAaiV,EAAb,gBAHxB,cAGQgB,EAHR,OAIEC,QAAQC,IAAIF,EAAQ1V,MACdE,EAAWwV,EAAQ1V,KAAKG,IAAb,uCAAiB,WAAM0V,GAAN,eAAAvW,EAAA,+EAEdE,IAAMC,IAAN,UAAaiV,EAAb,YAA2BmB,EAAIvV,OAAOwV,UAFxB,OAExBjW,EAFwB,OAG9BgW,EAAIrG,OAAS2E,EAAYtU,EAAEG,MAHG,gDAK9B6V,EAAIrG,OAAS,IAAI1L,IALa,iCAOzB+R,GAPyB,yDAAjB,uDALnB,SAcuBrW,IAAMa,IAAIH,GAdjC,OA6BE,IAfMyM,EAdR,OAeQuB,EAAiB,IAAIe,IAErB8G,EAAqBpJ,EAAO,GAAG6C,OAAO/P,IAAI,cAC1CuW,EAAkB,IAAIlS,IAE5BiS,EAAmBhS,SAAQ,SAACkS,EAAW5H,GACrCH,EAAeC,IAAI8H,EAAS,MAC5BD,EAAgBjR,IAAIkR,EAAS,KAAU5H,MAEzCsH,QAAQC,IAAI1H,GAxBd,WA6BWS,GACQhC,EAAOgC,GAAGa,OAElB/P,IAAI,cAAcsE,SAAQ,SAACkS,GAChC,IAAMC,EAAuBD,EAAS,MAAT,KACvBE,EAAwBH,EAAgBvW,IAAIwW,EAAS,MAC3D,GAAU,IAANtH,EACFsH,EAAS,MAAT,UAAkCC,MAC7B,CACL,IAAME,EAAYzJ,EAAOgC,EAAE,GAAGa,OAAO/P,IAAI,cAAc0W,GAArC,WAClBF,EAAS,MAAT,UAAkCG,OAV/BzH,EAAI,EAAGA,EAAIhC,EAAOhH,OAAQgJ,IAAM,EAAhCA,GAeThC,EAAO2G,WAEDtT,EAAO,IACR4M,WAAa,YAAIsB,EAAeqB,UAAUnK,OAC/CpF,EAAKgW,gBAAkBA,EACvBhW,EAAK2M,OAASA,EACdpM,KAAKqD,SAAS5D,GAlDhB,iD,iFAqDA,SAAcyE,GACX,IAAM8P,EAAgBhU,KAAK+C,MAAMiR,cACjC,QAAIA,EAAc5O,OAAS,IAAMlB,EAAK4K,SAASkF,M,oBAMlD,WAAU,IAAD,OAwBP,IAAI5H,EAASpM,KAAK+C,MAAMqJ,OAClBoI,EAAexU,KAAK+C,MAAMsJ,WAAWnH,QAAO,SAAChB,GAAD,OAAU,EAAKuQ,cAAcvQ,MACzEwQ,EAAoBF,EAAa5U,KAAI,SAACiM,GAAD,OACzC,wBAAIjL,UAAU,SAASoE,IAAK6G,EAAS9E,MAAM,SAAQ,6BAAM8E,OACrD4J,EAAkBzV,KAAK+C,MAAM0S,gBAE7B9Q,EAAOyH,EAAOxM,KAAI,SAAC6N,GACvB,IAAMwB,EAASxB,EAAMwB,OACf6G,EAAkBrI,EAAMwB,OAAO/P,IAAI,gBAAjB,gBAClBgR,EAAcsE,EAAa5U,KAAI,SAACiM,GACpC,IAjCiBkK,EAiCXzG,EAAKL,EAAO/P,IAAI,cAAcuW,EAAgBvW,IAAI2M,IAClDmK,EAASF,EAAkB,IAAMjK,EACnCuE,EAAO,kBAAC,WAAD,MACL6F,GAAc3G,EAAE,MAAF,KAAsBA,EAAE,MAAF,WAA4BA,EAAE,MAAF,UAItE,YAHWtQ,IAAPsQ,IACFc,EArBN,SAAqBrQ,GACnB,OAAiBA,GARA,GAQgB,0BAAM+Q,KAAK,MAAMlO,MAAO,CAACgI,MAAM,SAAUmG,aAAW,UAApD,MALZgF,EAMHhW,EALVgW,EApGI,GAyGsB,0BAAMjF,KAAK,MAAMlO,MAAO,CAACgI,MAAM,OAAQmG,aAAW,UAAlD,KAC3B,0BAAMD,KAAK,MAAMlO,MAAO,CAACgI,MAAM,QAASmG,aAAW,UAAnD,MAPT,IAAuBgF,EAyBVG,CAAYD,IAEd,kBAAC,IAAD,CACLjR,IAAK6G,EACLqF,QAASrF,EAAU,UAAYkJ,EAAYzF,EAAE,MAAF,MAChC,gBAAkByF,EAAYzF,EAAE,MAAF,WAC9B,aA5CIyG,EA4CsBE,GA3CzCF,EAAQhU,KAAKkT,MAAc,IAARc,GAAiB,MACvB,IACXA,EAAQ,IAAMA,GAEhBA,GAAS,KAwCL5E,gBAAiB,EACjBC,UAAU,WACVC,sBAAsB,GACtB,wBAAIrM,IAAKgR,EAAQpV,UAAU,YAAYgC,MAAO,CAAC6D,UAAW,QAAS6K,WAAY,aAAcC,QAAS,IAAtG,IAA4GnB,EAA5G,SAGJ,OACE,wBAAIpL,IAAK8Q,GACP,wBAAIlV,UAAU,aAAd,UAAkCkV,EAAlC,KACC5F,MAIP,OACE,6BACE,oEACA,6BACE,wBAAItP,UAAU,UAGhB,2BAAOA,UAAU,oBACf,+BACE,4BACE,wBAAIA,UAAU,aAAd,SACC8T,IAGL,+BAAQ/P,S,GAvJ8BoB,a,gDCsG1CoQ,GAAS,kBACb,6BACE,kBAAC,EAAD,CAAsB5V,SAAU,MAChC,kBAAC,EAAD,CAAuBA,SAAU,MACjC,kBAAC,EAAD,CAAcA,SAAU,MACxB,kBAAC,EAAD,CAAiBA,SAAU,QAIzB6V,GAAQ,SAAC,GAAe,IAAbvD,EAAY,EAAZA,MAETwD,EAAQ,IAAIC,gBAAgBC,OAAOC,SAASC,QAClD,OACE,kBAAC,EAAD,CACElW,SAAU,IACVO,IAAK+R,EAAMhU,IAAIkC,QAAQ,aAAc,IACrC6N,KAAMyH,EAAMnX,IAAI,WAKhBwX,GAAS,SAAC,GAAe,IAAb7D,EAAY,EAAZA,MAEVwD,EAAQ,IAAIC,gBAAgBC,OAAOC,SAASC,QAClD,OACE,kBAAC,EAAD,CACElW,SAAU,IACVO,IAAK+R,EAAMhU,IAAIkC,QAAQ,cAAe,IACtC6N,KAAMyH,EAAMnX,IAAI,WAKhByX,GAAS,SAAC,GAAe,IAAb9D,EAAY,EAAZA,MAEVwD,EAAQ,IAAIC,gBAAgBC,OAAOC,SAASC,QAClD,OACE,kBAAC,EAAD,CACElW,SAAU,IACVO,IAAK+R,EAAMhU,IAAIkC,QAAQ,cAAe,IACtC6N,KAAMyH,EAAMnX,IAAI,WAKhB0X,GAAa,SAAbA,EAAc,GAAD,IAAG/D,EAAH,EAAGA,MAAH,OACjB,kBAAC,WAAD,KACE,kBAACgE,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAMlE,EAAMhU,IAAKmY,UAAWZ,KACzC,kBAACS,GAAA,EAAD,CAAOE,KAAI,UAAKlE,EAAMhU,IAAX,aAA2BmY,UAAWJ,MAI/CK,GAAc,SAAdA,EAAe,GAAD,IAAGpE,EAAH,EAAGA,MAAH,OAClB,kBAAC,WAAD,KACE,kBAACgE,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAMlE,EAAMhU,IAAKmY,UAAWN,KACzC,kBAACG,GAAA,EAAD,CAAOE,KAAI,UAAKlE,EAAMhU,IAAX,aAA2BmY,UAAWC,MAI/CC,GAAc,SAAdA,EAAe,GAAD,IAAGrE,EAAH,EAAGA,MAAH,OAClB,kBAAC,WAAD,KACE,kBAACgE,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAMlE,EAAMhU,IAAKmY,UAAWL,KACzC,kBAACE,GAAA,EAAD,CAAOE,KAAI,UAAKlE,EAAMhU,IAAX,aAA2BmY,UAAWE,MAI/CC,GAAkB,SAAC,GAAD,IAAGtE,EAAH,EAAGA,MAAH,OACtB,kBAAC,WAAD,KACE,kBAACgE,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAMlE,EAAMhU,IAAKmY,UAAW9B,MAI9BkC,GAjLH,kBACV,kBAAC,IAAD,CAAQC,SAAUC,oBAChB,yBAAK1W,UAAU,OACb,4BAAQA,UAAU,cAChB,wBAAIA,UAAU,aACZ,kBAAC2W,EAAA,EAAD,CAAMC,GAAG,KAAT,sBADF,KAEE,uBAAG/R,KAAK,6CAAR,UAFF,MAKF,wBAAI7E,UAAU,QACZ,kFACC,CAAC,WAAWhB,KAAI,SAACuN,GAAD,OACf,kBAAC,WAAD,CAAUnI,IAAKmI,GACZ,CAAC,SAAU,UAAW,eAAevN,KAAI,SAAC6X,GAAD,OACxC,wBAAIzS,IAAG,UAAKmI,EAAL,YAAUsK,IACf,kBAACF,EAAA,EAAD,CAAMC,GAAE,kBAAarK,EAAb,YAAkBsK,IACvBtK,EADH,IACOsK,GAFT,SAKE,kBAACF,EAAA,EAAD,CAAMC,GAAE,kBAAarK,EAAb,YAAkBsK,EAAlB,kBAAR,UALF,YAUL,CAAC,wBAAyB,UAAU7X,KAAI,SAACuN,GAAD,OACvC,wBAAInI,IAAG,UAAKmI,IACV,kBAACoK,EAAA,EAAD,CAAMC,GAAE,WAAMrK,IAAMA,QAI1B,wBAAIvM,UAAU,mBACZ,0CACC,CACC,UAGA,gBACAhB,KAAI,SAACuN,GAAD,OACJ,kBAAC,WAAD,CAAUnI,IAAKmI,GACZ,CAAC,SAAU,gBAAgBvN,KAAI,SAAC6X,GAAD,OAC9B,wBAAIzS,IAAKmI,EAAI,IAAMsK,GACjB,kBAACF,EAAA,EAAD,CAAMC,GAAI,WAAarK,EAAI,IAAMsK,GAC9BtK,EADH,IACOsK,GAFT,SAKE,kBAACF,EAAA,EAAD,CAAMC,GAAI,WAAarK,EAAI,IAAMsK,EAAU,cAA3C,QALF,IASE,kBAACF,EAAA,EAAD,CAAMC,GAAI,WAAarK,EAAI,IAAMsK,EAAU,cAA3C,QAGO,YAANtK,GAA+B,WAAZsK,EAClB,kBAAC,WAAD,SAEE,kBAACF,EAAA,EAAD,CAAMC,GAAI,WAAarK,EAAI,IAAMsK,EAAU,gBAA3C,WAKF,kBAAC,WAAD,MApBJ,YA2BN,kBAAC,WAAD,CAAUzS,IAAI,sBACZ,4BACE,kBAACuS,EAAA,EAAD,CAAMC,GAAI,8BAAV,yBAIN,kBAACE,GAAA,EAAD,KACE,kBAACb,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAACY,GAAA,EAAD,CAAUH,GAAG,4BAGf,kBAACX,GAAA,EAAD,CAAOE,KAAK,SAASC,UAAWJ,KAChC,kBAACC,GAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWC,KACjC,kBAACJ,GAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWE,KACjC,kBAACL,GAAA,EAAD,CAAOE,KAAK,yBAAyBC,UAAWG,KAChD,kBAACN,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWb,SCzFzCyB,GAAcC,QACW,cAA7BtB,OAAOC,SAASsB,UAEe,UAA7BvB,OAAOC,SAASsB,UAEhBvB,OAAOC,SAASsB,SAASjF,MACvB,2DAsCN,SAASkF,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT5Y,MAAK,SAAAgZ,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBvV,QACfkV,UAAUC,cAAcO,WAK1BrD,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrB9V,OAAM,SAAAC,GACL4V,QAAQ5V,MAAM,4CAA6CA,MCzEjEkZ,IAASC,OAAO,kBAAC,GAAD,MAASvQ,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmB4P,UAAW,CAGzE,GADkB,IAAIW,IAAItB,kBAAwBf,OAAOC,UAC3CqC,SAAWtC,OAAOC,SAASqC,OAIvC,OAGFtC,OAAOuC,iBAAiB,QAAQ,WAC9B,IAAMd,EAAK,UAAMV,kBAAN,sBAEPM,KAiDV,SAAiCI,GAE/B1Q,MAAM0Q,GACH5Y,MAAK,SAAAC,GAGkB,MAApBA,EAASiK,SACuD,IAAhEjK,EAAS0Z,QAAQ7Z,IAAI,gBAAgBqK,QAAQ,cAG7C0O,UAAUC,cAAcc,MAAM5Z,MAAK,SAAAgZ,GACjCA,EAAaa,aAAa7Z,MAAK,WAC7BmX,OAAOC,SAAS0C,eAKpBnB,GAAgBC,MAGnBzY,OAAM,WACL6V,QAAQC,IACN,oEArEA8D,CAAwBnB,GAIxBC,UAAUC,cAAcc,MAAM5Z,MAAK,WACjCgW,QAAQC,IACN,gHAMJ0C,GAAgBC,OCzCxBoB,K","file":"static/js/main.90ecc6d6.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport class Jenkins {\n  url(s) {\n    return \"https://ci.pytorch.org/jenkins/\" + s + \"/api/json\";\n  }\n  link(s) {\n    return \"https://ci.pytorch.org/jenkins/\" + s;\n  }\n\n  async get(url, options) {\n    if (options === undefined) options = {};\n    var r;\n    await axios.get(url, { params: options })\n    .then(response => {\n      r = response;\n    })\n    .catch(error => {\n      // console.log(\"error.response: \", error.response)\n    });\n    if (typeof r !== 'undefined') {\n      return r.data;\n    } else {\n      return null;\n    }\n  }\n\n  async batch_get(urls, options) {\n    if (options === undefined) options = {};\n    let r;\n    let requests = urls.map(url => {\n      return axios.get(url, { params: options }).then(\n        (response) => ({response}),\n        (err) => ({err}));\n    });\n\n    await axios.all(requests)\n    .then(response => {\n      r = response;\n    })\n    .catch(error => {\n      // console.log(\"error.response: \", error.response)\n    });\n    if (typeof r !== 'undefined') {\n      return r.map(result => {\n        if (result.response) {\n          return result.response.data;\n        }\n        return null;\n      });\n    } else {\n      return null;\n    }\n  }\n\n  async computer(options) { return this.get(this.url(\"computer\"), options); }\n  async queue(options) { return this.get(this.url(\"queue\"), options); }\n  async job(v, options) { return this.get(this.url(\"job/\" + v), options); }\n}\n\nconst jenkins = new Jenkins();\nexport default jenkins;\n","import React, { Fragment } from 'react';\n\nexport default function AsOf(props) {\n  const updateStatus = props.currentTime - props.updateTime > props.interval ?\n                       'disconnected' :\n                       <Fragment>connected in {props.connectedIn}ms</Fragment>;\n  const timeString = props.updateTime - new Date(0) === 0 ?\n                     <Fragment>pending</Fragment> :\n                     <Fragment>\n                      as of {props.updateTime.toLocaleTimeString()}; {updateStatus}\n                     </Fragment>;\n  return <span className={updateStatus}>({timeString})</span>\n}\n","export function summarize_job(job) {\n  return job.replace(/^pytorch-/, '').replace(/-trigger$/, '').replace(/^private\\//, '').replace(/^ccache-cleanup-/, '').replace(/_ci\\/circleci: /, '').replace(/AAA_/, '');\n}\n\nexport function summarize_date(timestamp) {\n  const date = new Date(timestamp);\n  const today = new Date();\n  if (today.toLocaleDateString() === date.toLocaleDateString()) {\n    return date.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\n  } else {\n    return date.toLocaleString('en-US', { month: 'short', day: 'numeric', weekday: 'short' });\n  }\n}\n\n// https://stackoverflow.com/questions/6312993/javascript-seconds-to-time-string-with-format-hhmmss\nexport function seconds2time (seconds) {\n    let hours   = Math.floor(seconds / 3600);\n    let minutes = Math.floor((seconds - (hours * 3600)) / 60);\n    seconds = seconds - (hours * 3600) - (minutes * 60);\n    let time = \"\";\n\n    if (hours !== 0) {\n      time = hours+\":\";\n    }\n    if (minutes !== 0 || time !== \"\") {\n      minutes = (minutes < 10 && time !== \"\") ? \"0\"+minutes : String(minutes);\n      time += minutes+\":\";\n    }\n    if (time === \"\") {\n      time = seconds+\"s\";\n    }\n    else {\n      time += (seconds < 10) ? \"0\"+seconds : String(seconds);\n    }\n    return time;\n}\n\nexport function summarize_ago(timestamp) {\n  const date = new Date(timestamp);\n  const today = new Date();\n  return seconds2time(Math.floor((today - date) / 1000));\n}\n\nexport function summarize_project(project) {\n  return project.replace(/-builds$/, '');\n}\n\nexport function summarize_url(url) {\n  let m;\n  if ((m = RegExp('^https://ci\\\\.pytorch\\\\.org/jenkins/job/([^/]+)/job/([^/]+)/').exec(url)) !== null) {\n    return summarize_project(m[1]) + \"/\" + summarize_job(m[2]);\n  }\n  if ((m = RegExp('https://ci\\\\.pytorch\\\\.org/jenkins/job/([^/]+)/').exec(url)) !== null) {\n    return m[1];\n  }\n  return url;\n}\n\n// Last updated 2018-03-01\nexport const centsPerHour = {\n  'linux-cpu': 17, // c5.xlarge\n  'linux-bigcpu': 68, // c5.4xlarge\n  'linux-gpu': 228, // g3.8xlarge\n  'linux-tc-gpu': 228, // g3.8xlarge\n  'linux-multigpu': 456, // g3.16xlarge\n  'linux-cpu-ccache': 17, // c5.xlarge\n  'win-cpu': 34, // c5.2xlarge\n  'win-gpu': 114, // g3.4xlarge\n  'osx': 13900/30/24, // MacStadium mini i7 250 elite\n  'master': 17, // c5.xlarge\n  'packet': 40, // ???? Packet server ???\n  'rocm': 0, // we don't pay for it\n  'tc-gpu': 114, // g3.4xlarge\n};\n\nexport function centsToDollars(x) {\n  if (x === undefined) return \"?\";\n  // I feel a little dirty resorting to floating point math\n  // here...\n  return (x / 100).toLocaleString(\"en-US\", {style: \"currency\", currency: \"USD\"});\n}\n","import React, { Component } from 'react';\nimport jenkins from './Jenkins.js';\nimport AsOf from './AsOf.js';\nimport { summarize_ago, summarize_url, centsToDollars, centsPerHour } from './Summarize.js';\n\nexport default class ComputerDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { computer: [], currentTime: new Date(), updateTime: new Date(0), connectedIn: 0 };\n  }\n  componentDidMount() {\n    this.update();\n    this.interval = setInterval(this.update.bind(this), this.props.interval);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  async update() {\n    const currentTime = new Date();\n    this.setState({currentTime: currentTime});\n    const data = await jenkins.computer(\n      {tree: `computer[\n                offline,\n                idle,\n                displayName,\n                assignedLabels[name],\n                executors[\n                  currentExecutable[\n                    timestamp,\n                    estimatedDuration,\n                    url,\n                    building\n                  ],\n                  idle\n                ]\n              ]`.replace(/\\s+/g, '')});\n    data.updateTime = new Date();\n    data.connectedIn = data.updateTime - currentTime;\n    this.setState(data);\n  }\n  render() {\n    function classify_node(n) {\n      const node = n.displayName;\n      if (/^c5.xlarge-i-.*$/.test(node)) {\n        return 'linux-cpu';\n      }\n      if (/^c5.4xlarge-i-.*$/.test(node)) {\n        return 'linux-bigcpu';\n      }\n      if (/^g3.8xlarge-i-.*$/.test(node)) {\n        if (n.assignedLabels.some((l) => l.name === \"tc_gpu\")) {\n          return 'linux-tc-gpu';\n        } else {\n          return 'linux-gpu';\n        }\n      }\n      if (/^g3.16xlarge-i-.*$/.test(node)) {\n        return 'linux-multigpu';\n      }\n      if (/^worker-c5-xlarge-.*$/.test(node)) {\n        return 'linux-cpu-ccache';\n      }\n      if (/^worker-macos-high-sierra-.*$/.test(node)) {\n        return 'osx';\n      }\n      if (/^worker-win-c5.2xlarge-i-.*$/.test(node)) {\n        return 'win-cpu';\n      }\n      if (/^worker-win-g3.4xlarge-i-.*$/.test(node)) {\n        return 'win-gpu';\n      }\n      if (/^worker-osuosl-ppc64le-cpu-.*$/.test(node)) {\n        return 'ppc';\n      }\n      if (/^worker-packet-type-1-.*$/.test(node)) {\n        return 'packet';\n      }\n      if (/^jenkins-worker-rocm-.*$/.test(node)) {\n        return 'rocm';\n      }\n      if (/^worker-g3-4xlarge-.*$/.test(node)) {\n        return 'tc-gpu';\n      }\n      return node;\n    }\n\n    const map = new Map();\n    this.state.computer.forEach((c) => {\n      const k = classify_node(c);\n      let v = map.get(k);\n      if (v === undefined) v = { busy: 0, total: 0 };\n      if (!c.offline) {\n        v.total++;\n        if (!c.idle) v.busy++;\n      }\n      map.set(k, v);\n    });\n\n    let totalCost = 0;\n    map.forEach((v, k) => {\n      const perCost = centsPerHour[k];\n      if (perCost !== undefined) {\n        v.totalCost = perCost * v.total;\n        totalCost += v.totalCost;\n      }\n    });\n\n    const rows = [...map.entries()].sort().map(kv => {\n      const cost = centsToDollars(kv[1].totalCost);\n      return (<tr key={kv[0]}>\n          <th>{kv[0]}</th>\n          <td>{kv[1].busy} / {kv[1].total}</td>\n          <td className=\"ralign\">{cost}/hr</td>\n        </tr>);\n    });\n\n    const busy_nodes = this.state.computer.filter((c) => !c.idle && c.displayName !== \"master\" && c.executors.length > 0 && c.executors[0].currentExecutable);\n    busy_nodes.sort((a, b) => a.executors[0].currentExecutable.timestamp - b.executors[0].currentExecutable.timestamp);\n    const running_rows = busy_nodes.map((c) => {\n      const executable = c.executors[0].currentExecutable;\n      return <tr key={c.displayName}>\n                <td className=\"left-cell\">{summarize_ago(executable.timestamp)}</td>\n                <td>\n                  <a href={executable.url}>\n                    {summarize_url(executable.url)}\n                  </a>\n                </td>\n              </tr>;\n    });\n\n    const running_map = new Map();\n    busy_nodes.forEach((c) => {\n      const executable = c.executors[0].currentExecutable;\n      const task = summarize_url(executable.url);\n      let v = running_map.get(task);\n      if (v === undefined) {\n        v = { total: 0, cumulative_time: 0 };\n        running_map.set(task, v);\n      }\n      v.total++;\n\n      function delta_ago(timestamp) {\n        const date = new Date(timestamp);\n        const today = new Date();\n        return (today - date) / 1000;\n      }\n      v.cumulative_time += delta_ago(executable.timestamp);\n    });\n\n    /*\n    const running_summary = [...running_map.entries()].sort((a, b) => b[1].total - a[1].total).map(task_v => {\n      const task = task_v[0];\n      const v = task_v[1];\n      return <tr key={task}><td style={{textAlign: \"right\", paddingRight: 15}}>{v.total}</td><th>{task}</th></tr>\n    });\n\n    const cumulative_running_time_summary = [...running_map.entries()].sort((a, b) => b[1].cumulative_time - a[1].cumulative_time).map(task_v => {\n      const task = task_v[0];\n      const v = task_v[1];\n      return <tr key={task}><td style={{textAlign: \"right\", paddingRight: 15}}>{seconds2time(Math.floor(v.cumulative_time))}</td><th>{task}</th></tr>\n    });\n    */\n\n    return (\n      <div>\n        <h2>Computers <AsOf interval={this.props.interval} currentTime={this.state.currentTime} updateTime={this.state.updateTime} connectedIn={this.state.connectedIn} /></h2>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <table>\n                  <tbody>{rows}</tbody>\n                  <tfoot>\n                    <tr><td></td><td className=\"ralign\" colSpan=\"2\">{centsToDollars(totalCost*24*30)}/mo</td></tr>\n                  </tfoot>\n                </table>\n              </td>\n              <td className=\"right-cell\">\n                <table>\n                  <tbody>\n                    {running_rows}\n                  </tbody>\n                </table>\n              </td>\n              { /*\n              <td className=\"right-cell\">\n                <table>\n                  <tbody>\n                    {running_summary}\n                  </tbody>\n                </table>\n              </td>\n              <td className=\"right-cell\">\n                <table>\n                  <tbody>\n                    {cumulative_running_time_summary}\n                  </tbody>\n                </table>\n              </td>\n              */ }\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      );\n  }\n}\n\n","import React, { Component } from 'react';\nimport jenkins from './Jenkins.js';\nimport AsOf from './AsOf.js';\nimport { summarize_url } from './Summarize.js';\n\nexport default class QueueDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { items: [], currentTime: new Date(), updateTime: new Date(0), connectedIn: 0 };\n  }\n  componentDidMount() {\n    this.update();\n    this.interval = setInterval(this.update.bind(this), this.props.interval);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  async update() {\n    const currentTime = new Date();\n    this.setState({currentTime: currentTime});\n    const data = await jenkins.queue();\n    data.updateTime = new Date();\n    data.connectedIn = data.updateTime - currentTime;\n    this.setState(data);\n  }\n  render() {\n    function summarize_why(why) {\n      return why.replace(/^Waiting for next available executor on/, 'Needs')\n                .replace(/docker&&cpu&&ccache/, 'linux-cpu-ccache')\n                .replace(/[^ ]+cpu_ccache.+/, 'linux-cpu-ccache')\n                .replace(/docker&&cpu&&!ccache/, 'linux-cpu')\n                .replace(/docker&&cpu/, 'linux-cpu-any')\n                .replace(/docker&&gpu/, 'linux-gpu')\n                .replace(/docker&&bigcpu/, 'linux-bigcpu')\n                .replace(/windows&&cpu/, 'windows-cpu')\n                .replace(/windows&&gpu/, 'windows-gpu')\n                .replace(/g3.8xlarge-i-[^ ]+/, 'linux-gpu')\n                .replace(/g3.16xlarge-i-[^ ]+/, 'linux-multigpu')\n                .replace(/worker-win-c5.2xlarge-i-[^ ]+/, 'windows-cpu')\n                .replace(/worker-win-g3.4xlarge-i-[^ ]+/, 'windows-gpu')\n    }\n\n    const why_map = new Map();\n    this.state.items.forEach((q) => {\n      const why = summarize_why(q.why);\n      let v = why_map.get(why);\n      if (v === undefined) {\n        v = { total: 0 };\n        why_map.set(why, v);\n      }\n      v.total++;\n    });\n\n    const why_rows = [...why_map.entries()].sort().map(why_v => {\n      const why = why_v[0];\n      const v = why_v[1];\n      return <tr key={why}><td style={{textAlign: \"right\", paddingRight: 15}}>{v.total}</td><th>{why}</th></tr>\n    });\n\n    const task_map = new Map();\n    this.state.items.forEach((q) => {\n      const task = summarize_url(q.task.url);\n      let v = task_map.get(task);\n      if (v === undefined) {\n        v = { total: 0 };\n        task_map.set(task, v);\n      }\n      v.total++;\n    });\n\n    const task_map_max = 10;\n    const task_rows = [...task_map.entries()].sort((a, b) => b[1].total - a[1].total).slice(0, task_map_max).map(task_v => {\n      const task = task_v[0];\n      const v = task_v[1];\n      return <tr key={task}><td style={{textAlign: \"right\", paddingRight: 15}}>{v.total}</td><th>{task}</th></tr>\n    });\n\n    return (\n      <div>\n        <h2>Queue <AsOf interval={this.props.interval}\n                        connectedIn={this.state.connectedIn}\n                        currentTime={this.state.currentTime}\n                        updateTime={this.state.updateTime} /></h2>\n        <table>\n          <tbody>\n            <tr>\n              <td width={300} style={{textOverflow: \"clip\", maxWidth: 300, overflow: \"hidden\"}}>\n                <table>\n                  <tbody>{why_rows}</tbody>\n                </table>\n              </td>\n              <td className=\"right-cell\" width={300}>\n                <table>\n                  <tbody>{task_rows}<tr><td></td><th>{ task_map.size > task_map_max ? \"...\" : \"\" }</th></tr></tbody>\n                </table>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from \"react\";\nimport \"@toast-ui/chart/dist/toastui-chart.css\"\nimport Chart from \"@toast-ui/chart\";\n\nexport default class GitHubActionsDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount() {\n    this.update();\n  }\n  async update() {\n    const data = {\n      actions_statuses: JSON.parse(\n        await fetch(\n          \"https://ossci-checks-status.s3.amazonaws.com/status.json\",\n          { cache: \"no-cache\" }\n        ).then((a) => a.text())\n      ),\n    };\n    this.setState(data);\n  }\n\n  componentDidUpdate() {\n    if (!this.state.actions_statuses) {\n      return;\n    }\n    const series = {\n      dates: [],\n    };\n    let keys = [\"in_progress\", \"queued\", \"pending\"];\n    for (const key of keys) {\n      series[key] = [];\n    }\n    this.state.actions_statuses.sort((a, b) => {\n      return a.last_updated - b.last_updated;\n    });\n    for (const item of this.state.actions_statuses) {\n      series.dates.push(new Date(item.last_updated * 1000).toLocaleString());\n      for (const key of keys) {\n        series[key].push(item[key] || 0);\n      }\n    }\n    const data_series = [];\n    for (const key of keys) {\n      data_series.push({\n        name: key,\n        data: series[key],\n      });\n    }\n    const data = {\n      categories: series.dates,\n      series: data_series\n    }\n\n    const el = document.getElementById(\"chart\");\n    el.innerHTML = \"\";\n    const options = {};\n    Chart.lineChart({ el, data, options });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>GitHub Actions Status</h2>\n        <div id=\"chart\" style={{width: \"600px\", height: \"400px\"}}>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"@toast-ui/chart/dist/toastui-chart.css\"\nimport Chart from \"@toast-ui/chart\";\n\n\nexport default class GitHubActionsDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.update();\n  }\n\n  correlateJobs(all_jobs) {\n    let passes = [\"success\", \"skipped\", \"pending\", \"queued\"];\n    const seen_names = {};\n    const correlationMatrix = {}\n\n    const addFailure = (failure1, failure2) => {\n        seen_names[failure1] = true;\n        seen_names[failure2] = true;\n        if (!correlationMatrix[failure1]) {\n            correlationMatrix[failure1] = [];\n        }\n        if (!correlationMatrix[failure1][failure2]) {\n            correlationMatrix[failure1][failure2] = 0;\n        }\n        correlationMatrix[failure1][failure2] += 1;\n    }\n\n    for (const jobs of all_jobs) {\n        let failures = [];\n        for (const job_name in jobs.value) {\n            const job = jobs.value[job_name];\n            if (job.status && passes.indexOf(job.status) === -1) {\n                failures.push(job_name);\n            }\n        }\n\n        for (const failure1 of failures) {\n            for (const failure2 of failures) {\n                addFailure(failure1, failure2);\n            }\n        }\n    }\n\n    const job_names = Object.keys(seen_names).sort();\n    \n    const fullMatrix = [];\n    for (const name1 of job_names) {\n        const row = [];\n        for (const name2 of job_names) {\n            if (correlationMatrix[name1] && correlationMatrix[name1][name2]) {\n                row.push(correlationMatrix[name1][name2]);\n            } else {\n                row.push(0);\n            }\n        }\n        fullMatrix.push(row);\n    }\n\n    return [job_names, fullMatrix];\n  }\n\n  async update() {\n    const base = \"https://ossci-job-status.s3.amazonaws.com/master\"\n    const data = {\n      job_index: JSON.parse(\n        await fetch(\n          `${base}/index.json`,\n          { cache: \"no-cache\" }\n        ).then((a) => a.text())\n      ),\n    };\n    const promises = data.job_index.map(job => {\n        return fetch(`${base}/${job.id}.json`).then(r => r.json());\n    });\n    this.state.correlations = this.correlateJobs(await Promise.allSettled(promises));\n    this.setState(data);\n  }\n\n  tooltipTemplate(model, defaultTooltipTemplate, theme) {\n    const { background } = theme;\n    let [a, b] = model.data[0].label.split(\", \");\n    return `\n        <div\n        style=\"\n    background: ${background};\n    padding: 0 5px;\n    text-align: center;\n    color: white;\">\n        <div\n        class=\"toastui-chart-tooltip-category\"\n        style=\"font-weight: bold; font-family: Arial, sans-serif; font-size: 13px; color: #ffffff;\">\n            ${a}\n            <br />\n            ${b}\n        </div>\n        <div\n        class=\"toastui-chart-tooltip-series-wrapper\"\n        style=\"font-weight: normal; font-family: Arial, sans-serif; font-size: 12px; color: #ffffff;\">\n            <div class=\"toastui-chart-tooltip-series\">\n                <span class=\"toastui-chart-series-name\">\n                <i class=\"toastui-chart-icon\" style=\"background: ${model.data[0].color}\"></i>\n                <span class=\"toastui-chart-name\">${model.data[0].value}</span>\n                </span>\n            </div>\n        </div>\n    </div>\n    `;\n  }\n\n  componentDidUpdate() {\n    if (!this.state.correlations) {\n      return;\n    }\n \n    const el = document.getElementById(\"job-correlations\");\n    let [job_names, correlationMatrix] = this.state.correlations;\n    el.innerHTML = \"\";\n    const options = {\n        usageStatistics: false,\n        xAxis: {\n            label: {\n                formatter: (a, b) => \"\",\n            }\n        },\n        yAxis: {\n            label: {\n                formatter: (a, b) => \"\",\n            }\n        },\n        tooltip: {\n            template: this.tooltipTemplate\n        }\n    };\n    let data = {\n        categories: {\n            x: job_names,\n            y: job_names,\n        },\n        series: correlationMatrix\n    };\n    Chart.heatmapChart({ el, data, options });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>CI Job Correlations</h2>\n        <div id=\"job-correlations\" style={{width: \"550px\", height: \"550px\"}}>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport jenkins from './Jenkins.js';\nimport AsOf from './AsOf.js';\nimport { summarize_job, summarize_date, centsToDollars, centsPerHour } from './Summarize.js';\nimport * as d3 from 'd3v4';\nimport parse_duration from 'parse-duration';\nimport Tooltip from 'rc-tooltip';\n\nvar jobs_on_pr = [\n  '_',\n  'setup',\n  'caffe2-py2-cuda9.0-cudnn7-windows',\n  'caffe2-py2-devtoolset7-rocmrpm-centos7.5',\n  'py3.6-clang7-rocmdeb-ubuntu16.04',\n  'win-ws2016-cuda9-cudnn7-py3',\n\n  'pytorch_linux_xenial_py2_7_9',\n  'pytorch_linux_xenial_cuda9_cudnn7_py3',\n  'pytorch_linux_xenial_py3_clang5_asan',\n  'pytorch_linux_xenial_py3_6_gcc5_4',\n  'pytorch_libtorch_linux_xenial_cuda9_cudnn7_py3',\n\n  'caffe2_py2_mkl_ubuntu16_04',\n  'caffe2_py3_5_cuda10_1_cudnn7_ubuntu16_04',\n  'caffe2_onnx_py2_gcc5_ubuntu16_04',\n  'caffe2_onnx_main_py3_6_clang7_ubuntu16_04',\n  'caffe2_onnx_ort1_py3_6_clang7_ubuntu16_04',\n  'caffe2_onnx_ort2_py3_6_clang7_ubuntu16_04',\n  'caffe2_py2_clang7_ubuntu16_04',\n  'caffe2_cmake_cuda9_0_cudnn7_ubuntu16_04',\n  'caffe2_py3_6_devtoolset7_cuda9_0_cudnn7_centos7',\n\n  'binary_linux_manywheel_2_7mu_cpu_devtoolset7',\n  'binary_linux_libtorch_2_7m_cpu_devtoolset7',\n  'binary_linux_libtorch_2_7m_cpu_gcc5_4_cxx11-abi',\n  'binary_linux_libtorch_2_7_cpu',\n\n  'caffe2_py2_android_ubuntu16_04',\n  'caffe2_py2_system_macos10_13',\n  'pytorch_macos_10_13_py3',\n  'pytorch_macos_10_13_cuda9_2_cudnn7_py3',\n  'pytorch-linux_xenial_py3_clang5_android_ndk_r19c_x86_32_build',\n  'pytorch-linux-xenial-py3-clang5-android-ndk-r19c-gradle-build-x86_32',\n  'pytorch_ios_10_2_1_x86_64_build',\n  'pytorch_ios_10_2_1_arm64_build',\n\n  'pytorch_linux_backward_compatibility_check_test',\n\n  'pytorch_xla_linux_xenial_py3_6_clang7',\n\n  'pytorch_python_doc_push',\n  'pytorch_cpp_doc_push',\n]\n\nvar binary_and_smoke_tests_on_pr = [\n  \"binary_linux_manywheel_2_7mu_cpu_devtoolset7_build\",\n  \"binary_linux_manywheel_3_7m_cu100_devtoolset7_build\",\n  \"binary_linux_conda_2_7_cpu_devtoolset7_build\",\n  \"binary_macos_wheel_3_6_cpu_build\",\n  \"binary_macos_conda_2_7_cpu_build\",\n  \"binary_macos_libtorch_2_7_cpu_build\",\n  \"binary_linux_manywheel_2_7mu_cpu_devtoolset7_test\",\n  \"binary_linux_manywheel_3_7m_cu100_devtoolset7_test\",\n  \"binary_linux_conda_2_7_cpu_devtoolset7_test\",\n  \"binary_linux_libtorch_2_7m_cpu_devtoolset7_shared-with-deps_build\",\n  \"binary_linux_libtorch_2_7m_cpu_devtoolset7_shared-with-deps_test\",\n  \"binary_linux_libtorch_2_7m_cpu_gcc5_4_cxx11-abi_shared-with-deps_build\",\n  \"binary_linux_libtorch_2_7m_cpu_gcc5_4_cxx11-abi_shared-with-deps_test\"\n];\n\n// TODO: checks also supports neutral and action_required\n\nfunction is_success(result) {\n  return result === 'SUCCESS' || result === 'success';\n}\n\nfunction is_failure(result) {\n  // TODO: maybe classify timeout differently\n  return result === 'FAILURE' || result === 'failure' || result === 'error' || result === 'timed_out';\n}\n\nfunction is_aborted(result) {\n  return result === 'ABORTED' || result === 'cancelled';\n}\n\nfunction is_pending(result) {\n  return !result || result === 'pending';\n}\n\nfunction getJobName(subBuild) {\n  const baseJobName = subBuild.jobName;\n  if (/caffe2-builds/.test(subBuild.url)) {\n    return 'caffe2-' + baseJobName;\n  } else {\n    return baseJobName;\n  }\n}\n\nfunction classify_job_to_node(j) {\n  if (j === 'short-perf-test-gpu') {\n    return 'linux-gpu';\n  } else if (j === 'doc-push') {\n    return 'linux-cpu';\n  } else if (/-win/.test(j)) {\n    if (/-test/.test(j) && /-cuda/.test(j)) {\n      return 'win-gpu';\n    } else {\n      return 'win-cpu';\n    }\n  } else if (/-macos/.test(j)) {\n    return 'osx';\n  } else if (/-linux/.test(j) || /-ubuntu/.test(j) || /-centos/.test(j) || /-xenial/.test(j)) {\n    if (/cuda/.test(j)) {\n      if (/-multigpu-test/.test(j)) {\n        return 'linux-multigpu';\n      } else if (/-test/.test(j)) {\n        return 'linux-gpu';\n      } else {\n        return 'linux-cpu';\n      }\n    } else if (/-rocm/.test(j)) {\n      if (/-test/.test(j)) {\n        return 'rocm';\n      } else {\n        return 'linux-bigcpu';\n      }\n    } else {\n      return 'linux-cpu';\n    }\n  }\n  return 'unknown';\n}\n\n// Ideas:\n//  - Put the master and pull request info together, so you can see what\n//  the reported 'master' status is for a given 'pull-request' build\n\nexport default class BuildHistoryDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.initialState();\n  }\n  initialState() {\n    const prefs_str = localStorage.getItem(\"prefs\");\n    let prefs = {};\n    if (prefs_str) {\n      prefs = JSON.parse(prefs_str);\n    }\n    if (!(\"showStale\" in prefs)) prefs[\"showStale\"] = false;\n    if (!(\"username\" in prefs)) prefs[\"username\"] = \"\";\n    if (!(\"showNotifications\" in prefs)) prefs[\"showNotifications\"] = true;\n    return {\n      builds: [],\n      known_jobs: [],\n      currentTime: new Date(),\n      updateTime: new Date(0),\n      showStale: prefs.showStale,\n      username: prefs.username,\n      showNotifications: prefs.showNotifications\n    };\n  }\n  componentDidMount() {\n    this.update();\n    this.interval = setInterval(this.update.bind(this), this.props.interval);\n    if (this.state.showNotifications && Notification.permission !== \"granted\") {\n      Notification.requestPermission();\n    }\n  }\n  componentDidUpdate(prevProps) {\n    localStorage.setItem(\"prefs\", JSON.stringify({\n      showNotifications: this.state.showNotifications,\n      showStale: this.state.showStale,\n      username: this.state.username\n    }));\n    if (this.props.job !== prevProps.job) {\n      this.setState(this.initialState());\n      this.update();\n    }\n  }\n  async update() {\n    const currentTime = new Date();\n    this.setState({currentTime: currentTime});\n    // NB: server-slide slicing doesn't really help, Jenkins seems to\n    // load everything into memory anyway\n    let data;\n    if (true) {\n      // STOP.  You want more results?  You may have noticed that on\n      // Google, people suggest using allBuilds with {0,n} to make use\n      // of Jenkins pagination.  However, if you do this, it will *DOS our Jeenkins\n      // instance*; even when pagination is requested, Jenkins will\n      // still load ALL builds into memory before servicing your\n      // request.  I've filed this at https://issues.jenkins-ci.org/browse/JENKINS-49908\n      data = await jenkins.job(this.props.job,\n        {tree: `builds[\n                  url,\n                  number,\n                  duration,\n                  timestamp,\n                  result,\n                  actions[parameters[name,value],\n                  causes[shortDescription]],\n                  changeSet[items[commitId,comment,msg]],\n                  subBuilds[\n                    result,jobName,url,duration,\n                    build[\n                      subBuilds[\n                        result,jobName,url,duration,\n                        build[\n                          subBuilds[result,jobName,url,duration]\n                        ]\n                      ]\n                    ]\n                  ]\n               ]`.replace(/\\s+/g, '')});\n               // build[builtOn]\n    } else {\n      // If you want entries in build on subBuilds, need depth = 3\n      // Otherwise, most data can be got with depth = 1\n      const depth = 1;\n      data = await jenkins.job(this.props.job, {depth: depth});\n    }\n    data.updateTime = new Date();\n    data.connectedIn = data.updateTime - currentTime;\n    if (data.allBuilds !== undefined) {\n      data.builds = data.allBuilds;\n    }\n\n    // Get build statuses from Github for CircleCI\n    async function get_github_commit_statuses() {\n      let github_commit_statuses = {}\n      let requests = [];\n\n      function add_jobs(jobs, index) {\n        let commitId = requests[index].commitId;\n        if (jobs) {\n          for (let job_name in jobs) {\n            let job = jobs[job_name];\n            if (!(github_commit_statuses[commitId].hasOwnProperty(job_name))) {\n              github_commit_statuses[commitId][job_name] = {\"duration\": \"0\", \"result\": job.status, \"url\": job.build_url};\n            }\n          };\n        }\n      }\n\n      for (const commit of data.builds) {\n        for (let i = 0; i < commit.changeSet.items.length; i++) {\n          let commitId = commit.changeSet.items[i].commitId;\n          if (!(github_commit_statuses.hasOwnProperty(commitId))) {\n            github_commit_statuses[commitId] = {};\n          }\n          requests.push({\n            url: \"https://s3.amazonaws.com/ossci-job-status/combined/\" + commitId + \".json\",\n            commitId\n          });\n        }\n\n      }\n      let results = await jenkins.batch_get(requests.map(request => request.url));\n      results.forEach(add_jobs);\n      return github_commit_statuses;\n    }\n    data.github_commit_statuses = await get_github_commit_statuses();\n\n    const known_jobs_set = new Set();\n    function collect_known_jobs_set(topBuild) {\n      function go(subBuild) {\n        if (subBuild.build && subBuild.build._class === \"com.tikal.jenkins.plugins.multijob.MultiJobBuild\") {\n          subBuild.build.subBuilds.forEach(go);\n        } else {\n          known_jobs_set.add(getJobName(subBuild));\n        }\n      }\n      topBuild.subBuilds.forEach(go);\n    }\n    const props_mode = this.props.mode;\n    if (props_mode !== \"binary\") {\n      data.builds.forEach(collect_known_jobs_set);\n    }\n\n    if (data.github_commit_statuses) {\n      Object.keys(data.github_commit_statuses).forEach(function(commit) {\n        var jobs = data.github_commit_statuses[commit];\n        Object.keys(jobs).forEach(function(job_name) {\n          if (props_mode !== \"binary\") {\n            // Warning: quadratic police!\n            for (var i = 0; i < binary_and_smoke_tests_on_pr.length; i++) {\n              if (job_name.endsWith(binary_and_smoke_tests_on_pr[i])) {\n                known_jobs_set.add(\"_\" + job_name);  // Add \"_\" before name to make sure CircleCI builds always show up on the left\n                break;\n              }\n            }\n            if (!(job_name.includes(\"binary_\") || job_name.includes(\"smoke_\"))) {  // Exclude binary builds and smoke tests that are not running on every PR\n              known_jobs_set.add(\"_\" + job_name);  // Add \"_\" before name to make sure CircleCI builds always show up on the left\n            }\n          } else {\n            if (job_name.includes(\"binary_\") || job_name.includes(\"smoke_\")) {\n              let found = false;\n              for (let i = 0; i < binary_and_smoke_tests_on_pr.length; i++) {\n                if (job_name.endsWith(binary_and_smoke_tests_on_pr[i])) {\n                  found = true;\n                  break;\n                }\n              }\n              if (!found) known_jobs_set.add(\"_\" + job_name);\n            }\n          }\n        });\n      });\n    }\n\n    function compareFun(x, y) {\n      const sx = jobs_on_pr.some((e) => summarize_job(x).startsWith(e))\n      const sy = jobs_on_pr.some((e) => summarize_job(y).startsWith(e))\n      if (sx < sy) return 1;\n      else if (sx > sy) return -1;\n      else if (x < y) return -1;\n      else if (x > y) return 1;\n      else return 0;\n    }\n    data.known_jobs = [...known_jobs_set.values()].sort(compareFun);\n\n    data.builds.forEach((build) => {\n      const sb_map = new Map();\n\n      // Collect job status from Jenkins\n      function collect_jobs(topBuild) {\n        function go(subBuild) {\n          if (subBuild.build && subBuild.build._class === \"com.tikal.jenkins.plugins.multijob.MultiJobBuild\") {\n            subBuild.build.subBuilds.forEach(go);\n          } else {\n            sb_map.set(getJobName(subBuild), subBuild);\n          }\n        }\n        topBuild.subBuilds.forEach(go);\n      }\n      collect_jobs(build);\n\n      // Collect job status for non-Jenkins jobs (i.e. CircleCI jobs)\n      async function collect_jobs_from_github_status(build) {\n        if (build.changeSet.items.length > 0) {\n          for (var i = 0; i < build.changeSet.items.length; i++) {\n            let commitId = build.changeSet.items[i].commitId;\n            if (data.github_commit_statuses) {\n              Object.keys(data.github_commit_statuses[commitId]).forEach(function(job_name) {\n                var job = data.github_commit_statuses[commitId][job_name];\n                sb_map.set(\"_\" + job_name, {\"duration\": job.duration, \"result\": job.result, \"url\": job.url});\n              });\n            }\n          }\n        }\n      }\n      collect_jobs_from_github_status(build);\n      build.sb_map = sb_map;\n    });\n\n    // Figure out if we think something is broken or not.\n    //  1. Consider the MOST RECENT finished build for any given sub\n    //     build type.  If it is success, it's fine.\n    //  2. Otherwise, check builds prior to it.  If the previous build\n    //     also failed, we think it's broken!\n    //\n    // Special cases:\n    //  - pytorch_doc_push: don't care about this\n    //  - nightlies: these don't run all the time\n\n    const failure_window = 10;\n    if (this.props.job.includes(\"master\")) {\n      const still_unknown_set = new Set();\n      const consecutive_failure_count = new Map();\n      data.known_jobs.forEach((job) => {\n        if (job === \"pytorch_doc_push\") return;\n        if (job === \"__dr.ci\") return;\n        if (job.includes(\"nightlies\")) return;\n        still_unknown_set.add(job);\n      });\n      for (let i = 0; i < data.builds.length; i++) {\n        // After some window, don't look anymore; the job may have been\n        // removed\n        if (i > failure_window) break;\n        if (!still_unknown_set.size) break;\n        const build = data.builds[i];\n        const sb_map = build.sb_map;\n        sb_map.forEach((sb, jobName) => {\n          if (!still_unknown_set.has(jobName)) {\n            // do nothing\n          } else if (is_failure(sb.result)) {\n            let count = consecutive_failure_count.get(jobName) || 0;\n            count++;\n            consecutive_failure_count.set(jobName, count);\n          } else if (is_success(sb.result)) {\n            still_unknown_set.delete(jobName);\n          }\n        });\n      }\n\n      // Prune uninteresting alarms\n      consecutive_failure_count.forEach((v, k) => {\n        // Require two consecutive failure to alert\n        if (v <= 1) {\n          consecutive_failure_count.delete(k);\n        }\n      });\n\n      data.consecutive_failure_count = consecutive_failure_count;\n\n      // Compute what notifications to show\n      // We'll take a diff and then give notifications for keys that\n      // changed\n      if (this.state.consecutive_failure_count) {\n        this.state.consecutive_failure_count.forEach((v, key) => {\n          if (!consecutive_failure_count.has(key)) {\n            // It's fixed!\n            new Notification(\"✅ \" + this.props.job, {\"body\": summarize_job(key)});\n          }\n        });\n      }\n      consecutive_failure_count.forEach((v, key) => {\n        // Don't produce notifications for initial failure!\n        if (this.state.consecutive_failure_count && !this.state.consecutive_failure_count.has(key)) {\n          // It's failed!\n          new Notification(\"❌ \" + this.props.job, {\"body\": summarize_job(key)});\n        }\n      });\n    }\n\n    // TODO: This can cause spurious state updates\n    this.setState(data);\n  }\n\n  render() {\n    function result_icon(result) {\n      if (is_success(result)) return <span role=\"img\" style={{color:\"green\"}} aria-label=\"passed\">0</span>;\n      if (is_failure(result)) return <span role=\"img\" style={{color:\"red\"}} aria-label=\"failed\">X</span>;\n      if (is_aborted(result)) return <span role=\"img\" style={{color:\"gray\"}} aria-label=\"cancelled\">.</span>;\n      if (is_pending(result)) return <span className=\"animate-flicker\" role=\"img\" style={{color:\"goldenrod\"}} aria-label=\"in progress\">?</span>;\n      return result;\n    }\n\n    // Sigh... the place where you can get the information you're\n    // interested in at the top level is NOT the same as where you get\n    // it inside, because of how Jenkins handles depth (Jenkins\n    // *will* give you information for everything recursively, just\n    // not in the place you might expect it.\n    //\n    //  class: \"com.tikal.jenkins.plugins.multijob.MultiJobBuild\"\n    //  id: \"3772\"\n    //  subBuilds:\n    //    0:\n    //      jobName: \"whatever\"\n    //      build:\n    //        class: \"com.tikal.jenkins.plugins.multijob.MultiJobBuild\"\n    //        subBuilds:\n\n    let builds = this.state.builds;\n    let consecutive_failure_count = this.state.consecutive_failure_count;\n\n    const known_jobs = this.state.known_jobs;\n    const known_jobs_head = known_jobs.map((jobName) =>\n      <th className=\"rotate\" key={jobName}><div className={\n        (jobs_on_pr.some((e) => summarize_job(jobName).startsWith(e)) ? \"pr-header\" : \"master-only-header\") + \" \" +\n        (consecutive_failure_count.has(jobName) ? \"failing-header\" : \"\")\n        }>{jobs_on_pr.some((e) => summarize_job(jobName).startsWith(e)) ? \"\" : \"• \"}{summarize_job(jobName)}</div></th>\n    );\n    // const known_jobs_head = known_jobs.map((jobName) =>\n    //  <th key={jobName}></th>\n    //);\n\n    const durationWidth = 100;\n    const durationHeight = 10;\n    const durationScale = d3.scaleLinear().rangeRound([0, durationWidth]);\n    durationScale.domain([0, d3.max(builds, (b) => b.duration)]);\n\n    const seen_prs = new Set();\n\n    const rows = builds.map((build) => {\n      const sb_map = build.sb_map;\n\n      function perf_report(sb, result) {\n        return <Fragment><span className={is_success(result) ? 'ok-duration' : 'suspect-duration'}>{parse_duration(sb.duration)/1000}</span>&nbsp;&nbsp;</Fragment>;\n      }\n\n      // let cumulativeMs = 0;\n      let cost = 0;\n      let unknownCost = false;\n      let inProgressCost = false;\n      let found = false;\n\n      const status_cols = known_jobs.map((jobName) => {\n        const sb = sb_map.get(jobName);\n        let cell = <Fragment />;\n        if (sb !== undefined) {\n          found = true;\n          const dur = parse_duration(sb.duration);\n          // cumulativeMs += dur;\n          const node = classify_job_to_node(getJobName(sb));\n          let this_cost = 0;\n          if (node === 'unknown') {\n            unknownCost = true;\n          } else {\n            this_cost = Math.ceil(centsPerHour[node] * dur / 1000 / 60 / 60);\n          }\n          cost += this_cost;\n          if (!sb.result) inProgressCost = true;\n          if (this.props.mode === \"perf\") {\n            cell = perf_report(sb, sb.result);\n          } else if (this.props.mode === \"cost\") {\n            cell = <Fragment>{node === 'unknown' ? '?' : this_cost}&nbsp;&nbsp;</Fragment>;\n          } else {\n            var cellHref = sb.url;\n            if (/^https?:\\/\\//.test(cellHref)) {\n              if (cellHref.includes('jenkins')) {\n                cellHref = cellHref + \"/console\";\n              }\n            } else {\n              cellHref = jenkins.link(cellHref + \"/console\")\n            }\n            cell = <a href={cellHref}\n                      className=\"icon\"\n                      target=\"_blank\"\n                      alt={getJobName(sb)}>\n                     {result_icon(sb.result)}\n                   </a>;\n          }\n        }\n        return <Tooltip\n                      key={jobName}\n                      overlay={jobName}\n                      mouseLeaveDelay={0}\n                      placement=\"rightTop\"\n                      destroyTooltipOnHide={true}><td key={jobName} className=\"icon-cell\" style={{textAlign: \"right\", fontFamily: \"sans-serif\", padding: 0}}>{cell}</td></Tooltip>;\n      });\n\n      function drop_pr_number(msg) {\n        return msg.replace(/\\(#[0-9]+\\)/, '');\n      }\n\n      function renderPullRequestNumber(comment) {\n        let m = comment.match(/\\(#(\\d+)\\)/);\n        if (m) {\n          return <Fragment><a href={\"https://github.com/pytorch/pytorch/pull/\" + m[1]} target=\"_blank\">#{m[1]}</a></Fragment>;\n        }\n        return <Fragment />;\n      }\n\n      function renderCommit(commit) {\n        return (\n          <div key={commit.commitId}>\n            {renderPullRequestNumber(commit.comment)} {drop_pr_number(commit.msg)}{' '}\n            <code><a href={\"https://github.com/pytorch/pytorch/commit/\" + commit.commitId}\n                     target=\"_blank\">{commit.commitId.slice(0, 7)}</a></code>\n          </div>\n          );\n      }\n\n      function renderCauses(changeSet) {\n        const defaultCause = <em>Manually triggered rebuild.</em>;\n        if (changeSet.actions === undefined) return defaultCause;\n        return changeSet.actions\n          .filter((action) => action.causes !== undefined)\n          .map((action, i) =>\n            action.causes.map((cause, i) => <em key={i}>{cause.shortDescription}.{\" \"}</em>));\n      }\n\n      function getPushedBy(build) {\n        const action = build.actions.find((action) => action._class === \"hudson.model.CauseAction\");\n        if (action === undefined) return \"(unknown)\";\n        const cause = action.causes.find((cause) => cause._class === \"com.cloudbees.jenkins.GitHubPushCause\");\n        if (cause === undefined) return \"\";\n        const match = cause.shortDescription.match(/Started by GitHub push by (.+)/);\n        if (match === null) return cause.shortDescription;\n        return match[1];\n      }\n\n      function getPullParams(build) {\n        let action = build.actions.find((action) => action._class === \"org.jenkinsci.plugins.ghprb.GhprbParametersAction\");\n        if (action === undefined) {\n          action = build.actions.find((action) => action._class === \"com.tikal.jenkins.plugins.multijob.MultiJobParametersAction\");\n        }\n        if (action === undefined) {\n          return new Map();\n        }\n        return new Map(action.parameters.map((param) => [param.name, param.value]));\n      }\n\n      const isRebuild = build.actions.some(\n        (action) => action.causes !== undefined &&\n                    action.causes.some(\n                      (cause) => cause._class === \"com.sonyericsson.rebuild.RebuildCause\"\n                    ));\n      const isPullRequest = build.actions.some(\n        (action) => action.causes !== undefined &&\n                    action.causes.some(\n                      (cause) => cause._class === \"org.jenkinsci.plugins.ghprb.GhprbCause\" ||\n                                 (cause._class === \"hudson.model.Cause$UpstreamCause\" && /-pull-request$/.test(cause.upstreamProject))\n                    ))\n\n      let author = \"\";\n      let desc = \"\";\n      let pull_link;\n      let pull_id;\n\n      // TODO: Too lazy to set up PR numbers for the old ones\n\n      let stale = false;\n      if (isRebuild) {\n        desc = renderCauses(build);\n      } else if (isPullRequest) {\n        const params = getPullParams(build);\n        const title = params.get(\"ghprbPullTitle\");\n        pull_link = params.get(\"ghprbPullLink\");\n        pull_id = params.get(\"ghprbPullId\");\n        author = params.get(\"ghprbPullAuthorLogin\");\n        desc = title;\n        if (seen_prs.has(pull_id)) {\n          // TODO: do this filtering earlier\n          if (!this.state.showStale) return <Fragment key={build.number} />;\n          stale = true;\n        }\n        if (this.state.username !== \"\" && this.state.username !== author) {\n          return <Fragment key={build.number} />;\n        }\n        seen_prs.add(pull_id);\n      } else {\n        const changeSet = build.changeSet;\n        // TODO: This is empty for not pytorch-master.  We could\n        // probably get the info if we propagate it as a variable.\n        author = getPushedBy(build);\n        if (changeSet.items.length === 0) {\n          desc = renderCauses(build);\n        } else {\n          desc = changeSet.items.slice().reverse().map(renderCommit);\n        }\n      }\n\n      const whenString = summarize_date(build.timestamp);\n\n      if (!found) {\n        return <Fragment />\n      }\n\n      return (\n        <tr key={build.number} className={stale ? \"stale\" : \"\"}>\n          <th className=\"left-cell\"><a href={build.url} target=\"_blank\">{build.number}</a></th>\n          <th className=\"left-cell\"><a href={pull_link} target=\"_blank\">{pull_id ? \"#\" + pull_id : \"\"}</a></th>\n          <td className=\"left-cell\">{whenString}</td>\n          {status_cols}\n          <td className=\"right-cell bar-number\">{Math.floor(build.duration/1000/60)}</td>\n          <td>\n            <svg width={durationWidth} height={durationHeight}>\n              <rect className=\"bar\"\n                    x=\"0\"\n                    y=\"0\"\n                    width={durationScale(build.duration)}\n                    height={durationHeight} />\n            </svg>\n          </td>\n          <td className=\"right-cell\" style={{textAlign: \"right\"}}>{inProgressCost ? \"≥ \" : \"\"}{centsToDollars(cost)}{unknownCost ? \"?\" : \"\"}</td>\n          <td className=\"right-cell\">{author}</td>\n          <td className=\"right-cell\">{desc}</td>\n        </tr>\n        );\n    });\n\n    return (\n      <div>\n        <h2>\n          <a href={jenkins.link(\"job/\" + this.props.job)} target=\"_blank\">{this.props.job}</a> history{' '}\n          <AsOf interval={this.props.interval}\n                connectedIn={this.state.connectedIn}\n                currentTime={this.state.currentTime}\n                updateTime={this.state.updateTime} />\n        </h2>\n        <div style={{\"color\": \"#909\"}}>• Purple bulleted jobs run on master only.</div>\n        <div>\n          <ul className=\"menu\">\n            <li>\n              <input type=\"checkbox\" name=\"show-stale\" checked={this.state.showStale} onChange={(e) => { this.setState({showStale: e.target.checked}) }} />\n              <label htmlFor=\"show-stale\">Show stale builds of PRs</label>\n            </li>\n            <li>\n              <input type=\"text\" name=\"username\" value={this.state.username} onChange={(e) => { this.setState({username: e.target.value}) }} />\n              <label htmlFor=\"username\" style={{backgroundColor: \"white\", position: \"relative\", zIndex: 3}}>Show builds from this user only</label>\n            </li>\n            <li>\n              <input type=\"checkbox\" name=\"show-notifications\" checked={this.state.showNotifications} onChange={(e) => this.setState({showNotifications: e.target.checked}) } />\n              <label htmlFor=\"show-notifications\">Show notifications on master failure\n                { Notification.permission === \"denied\" ? <Fragment> <strong>(WARNING: notifications are currently denied)</strong></Fragment> : \"\" }\n              </label>\n            </li>\n          </ul>\n        </div>\n        <table className=\"buildHistoryTable\">\n          <thead>\n            <tr>\n              <th className=\"left-cell\">J#</th>\n              <th className=\"left-cell\">PR#</th>\n              <th className=\"left-cell\">Date</th>\n              {known_jobs_head}\n              <th className=\"right-cell\" colSpan=\"2\">Latency (min)</th>\n              <th className=\"right-cell\">Cost</th>\n              <th className=\"right-cell\">User</th>\n              <th className=\"right-cell\">Description</th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\n","import React, { Component, Fragment } from 'react';\nimport AsOf from './AsOf.js';\nimport { summarize_job, summarize_date } from './Summarize.js';\nimport Tooltip from 'rc-tooltip';\nimport axios from 'axios';\n\nconst binary_and_smoke_tests_on_pr = [\n  \"binary_linux_manywheel_2_7mu_cpu_devtoolset7_build\",\n  \"binary_linux_manywheel_3_7m_cu100_devtoolset7_build\",\n  \"binary_linux_conda_2_7_cpu_devtoolset7_build\",\n  \"binary_macos_wheel_3_6_cpu_build\",\n  \"binary_macos_conda_2_7_cpu_build\",\n  \"binary_macos_libtorch_2_7_cpu_build\",\n  \"binary_linux_manywheel_2_7mu_cpu_devtoolset7_test\",\n  \"binary_linux_manywheel_3_7m_cu100_devtoolset7_test\",\n  \"binary_linux_conda_2_7_cpu_devtoolset7_test\",\n  \"binary_linux_libtorch_2_7m_cpu_devtoolset7_shared-with-deps_build\",\n  \"binary_linux_libtorch_2_7m_cpu_devtoolset7_shared-with-deps_test\",\n  \"binary_linux_libtorch_2_7m_cpu_gcc5_4_cxx11-abi_shared-with-deps\",\n  \"pytorch_linux_xenial_pynightly\",\n];\n\nfunction nightly_run_on_pr(job_name) {\n  return binary_and_smoke_tests_on_pr.some((n) => job_name.includes(n));\n}\n\nfunction is_success(result) {\n  return result === 'SUCCESS' || result === 'success';\n}\n\nfunction is_failure(result) {\n  // TODO: maybe classify timeout differently\n  return result === 'FAILURE' || result === 'failure' || result === 'error' || result === 'timed_out';\n}\n\nfunction is_aborted(result) {\n  return result === 'ABORTED' || result === 'cancelled';\n}\n\nfunction is_pending(result) {\n  return !result || result === 'pending';\n}\n\nfunction is_skipped(result) {\n  return result === 'skipped';\n}\n\nfunction is_infra_failure(result) {\n  return result === 'infrastructure_fail';\n}\n\nfunction objToStrMap(obj) {\n  let strMap = new Map();\n  for (let k of Object.keys(obj)) {\n    strMap.set(k, obj[k]);\n  }\n  return strMap;\n}\n\nexport default class BuildHistoryDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.initialState();\n  }\n  initialState() {\n    const prefs_str = localStorage.getItem(\"prefs2\");\n    let prefs = {};\n    if (prefs_str) {\n      prefs = JSON.parse(prefs_str);\n    }\n    if (!(\"showNotifications\" in prefs)) prefs[\"showNotifications\"] = true;\n    if (!(\"showServiceJobs\" in prefs)) prefs[\"showServiceJobs\"] = true;\n    return {\n      builds: [],\n      known_jobs: [],\n      currentTime: new Date(),\n      updateTime: new Date(0),\n      showNotifications: prefs.showNotifications,\n      showServiceJobs: prefs.showServiceJobs,\n      jobNameFilter: \"\",\n    };\n  }\n  componentDidMount() {\n    this.update();\n    this.interval = setInterval(this.update.bind(this), this.props.interval);\n    if (this.state.showNotifications && Notification.permission !== \"granted\") {\n      Notification.requestPermission();\n    }\n  }\n  componentDidUpdate(prevProps) {\n    localStorage.setItem(\"prefs2\", JSON.stringify({\n      showNotifications: this.state.showNotifications,\n      showServiceJobs: this.state.showServiceJobs,\n    }));\n    if (this.props.job !== prevProps.job || this.props.mode !== prevProps.mode) {\n      this.setState(this.initialState());\n      this.update();\n    }\n  }\n  async update() {\n    const currentTime = new Date();\n    const branch = this.props.job.replace(/^pytorch-/, '')\n    const build_prefix = branch === 'master' ? branch : 'pr';\n    const url_prefix = 'https://s3.amazonaws.com/ossci-job-status';\n    this.setState({currentTime: currentTime});\n\n    const commits = await axios.get(`${url_prefix}/${branch}/index.json`);\n\n    const requests = commits.data.map(async build => {\n      try {\n        const r = await axios.get(`${url_prefix}/${build_prefix}/${build.id}.json`)\n        build.sb_map = objToStrMap(r.data);\n      } catch (e) {\n        build.sb_map = new Map();\n        // swallow\n      }\n      return build;\n    })\n    const builds = await axios.all(requests)\n    builds.reverse()\n\n    const data = {}\n\n    data.updateTime = new Date();\n    data.connectedIn = data.updateTime - currentTime;\n\n    const props_mode = this.props.mode;\n\n    const known_jobs_set = new Set();\n    builds.forEach(build => {\n      build.sb_map.forEach((sb, job_name) => {\n        const nightly_candidates = job_name.includes(\"binary_\") || job_name.includes(\"smoke_\") || job_name.includes(\"nightly_\") || job_name.includes(\"nigthly_\");\n        const is_nightly = nightly_candidates && !nightly_run_on_pr(job_name);\n        if ((props_mode !== \"nightly\" && !is_nightly) ||\n            (props_mode === \"nightly\" && is_nightly)) {\n          known_jobs_set.add(job_name);\n        }\n      });\n    });\n\n    data.known_jobs = [...known_jobs_set.values()].sort();\n    data.builds = builds;\n\n    // Figure out if we think something is broken or not.\n    //  1. Consider the MOST RECENT finished build for any given sub\n    //     build type.  If it is success, it's fine.\n    //  2. Otherwise, check builds prior to it.  If the previous build\n    //     also failed, we think it's broken!\n    //\n    // Special cases:\n    //  - pytorch_doc_push: don't care about this\n    //  - nightlies: these don't run all the time\n\n    const failure_window = 10;\n    if (this.props.job.startsWith(\"pytorch-\")) {\n      const still_unknown_set = new Set();\n      const consecutive_failure_count = new Map();\n      data.known_jobs.forEach((job) => {\n        if (job === \"pytorch_doc_push\") return;\n        if (job === \"__dr.ci\") return;\n        if (job.includes(\"nightlies\")) return;\n        still_unknown_set.add(job);\n      });\n      for (let i = 0; i < data.builds.length; i++) {\n        // After some window, don't look anymore; the job may have been\n        // removed\n        if (i > failure_window) break;\n        if (!still_unknown_set.size) break;\n        const build = data.builds[i];\n        const sb_map = build.sb_map;\n        sb_map.forEach((sb, jobName) => {\n          if (!still_unknown_set.has(jobName)) {\n            // do nothing\n          } else if (is_failure(sb.status)) {\n            let count = consecutive_failure_count.get(jobName) || 0;\n            count++;\n            consecutive_failure_count.set(jobName, count);\n          } else if (is_success(sb.status)) {\n            still_unknown_set.delete(jobName);\n          }\n        });\n      }\n\n      // Prune uninteresting alarms\n      consecutive_failure_count.forEach((v, k) => {\n        // Require two consecutive failure to alert\n        if (v <= 1) {\n          consecutive_failure_count.delete(k);\n        }\n      });\n\n      data.consecutive_failure_count = consecutive_failure_count;\n\n      // Compute what notifications to show\n      // We'll take a diff and then give notifications for keys that\n      // changed\n      if (this.state.consecutive_failure_count) {\n        this.state.consecutive_failure_count.forEach((v, key) => {\n          if (!consecutive_failure_count.has(key)) {\n            // It's fixed!\n            new Notification(\"✅ \" + this.props.job, {\"body\": summarize_job(key)});\n          }\n        });\n      }\n      consecutive_failure_count.forEach((v, key) => {\n        // Don't produce notifications for initial failure!\n        if (this.state.consecutive_failure_count && !this.state.consecutive_failure_count.has(key)) {\n          // It's failed!\n          new Notification(\"❌ \" + this.props.job, {\"body\": summarize_job(key)});\n        }\n      });\n    }\n\n    this.setState(data);\n  }\n\n  shouldShowJob(name) {\n     const jobNameFilter = this.state.jobNameFilter;\n     if (jobNameFilter.length > 0 && !name.includes(jobNameFilter)) {\n         return false;\n     }\n     if (this.state.showServiceJobs) {\n         return true;\n     }\n     const isDockerJob = name.startsWith(\"ci/circleci: docker\")\n     const isGCJob = name.startsWith(\"ci/circleci: ecr_gc\")\n     return !(isDockerJob || name === \"welcome\" || isGCJob);\n  }\n\n  render() {\n    function result_icon(result) {\n      if (is_success(result)) return <span role=\"img\" style={{color:\"green\"}} aria-label=\"passed\">0</span>;\n      if (is_skipped(result)) return <span role=\"img\" style={{color:\"gray\"}} aria-label=\"skipped\">S</span>;\n      if (is_failure(result)) return <span role=\"img\" style={{color:\"red\"}} aria-label=\"failed\">X</span>;\n      if (is_aborted(result)) return <span role=\"img\" style={{color:\"gray\"}} aria-label=\"cancelled\">.</span>;\n      if (is_pending(result)) return <span className=\"animate-flicker\" role=\"img\" style={{color:\"goldenrod\"}} aria-label=\"in progress\">?</span>;\n      if (is_infra_failure(result)) return <span role=\"img\" style={{color:\"grey\"}} aria-label=\"failed\">X</span>;\n      return result;\n    }\n\n    let builds = this.state.builds;\n    let consecutive_failure_count = this.state.consecutive_failure_count;\n\n    const visible_jobs = this.state.known_jobs.filter((name) => this.shouldShowJob(name));\n    const visible_jobs_head = visible_jobs.map((jobName) =>\n      <th className=\"rotate\" key={jobName}><div className={consecutive_failure_count.has(jobName) ? \"failing-header\" : \"\"}>{summarize_job(jobName)}</div></th>\n    );\n\n    const rows = builds.map((build) => {\n      let found = false;\n      const sb_map = build.sb_map;\n\n      const status_cols = visible_jobs.map((jobName) => {\n        const sb = sb_map.get(jobName);\n        let cell = <Fragment />;\n        if (sb !== undefined) {\n          found = true;\n          cell = <a href={sb.build_url}\n                    className=\"icon\"\n                    target=\"_blank\"\n                    alt={jobName}>\n                   {result_icon(sb.status)}\n                 </a>;\n        }\n        return <Tooltip\n                      key={jobName}\n                      overlay={jobName}\n                      mouseLeaveDelay={0}\n                      placement=\"rightTop\"\n                      destroyTooltipOnHide={true}><td key={jobName} className=\"icon-cell\" style={{textAlign: \"right\", fontFamily: \"sans-serif\", padding: 0}}>{cell}</td></Tooltip>;\n      });\n\n      function drop_pr_number(msg) {\n        return msg.replace(/\\(#[0-9]+\\)/, '');\n      }\n\n      function renderPullRequestNumber(comment) {\n        let m = comment.match(/\\(#(\\d+)\\)/);\n        if (m) {\n          return <Fragment><a href={\"https://github.com/pytorch/pytorch/pull/\" + m[1]} target=\"_blank\">#{m[1]}</a></Fragment>;\n        }\n        m = comment.match(/https:\\/\\/github.com\\/pytorch\\/pytorch\\/pull\\/(\\d+)/);\n        if (m) {\n          return <Fragment><a href={\"https://github.com/pytorch/pytorch/pull/\" + m[1]} target=\"_blank\">#{m[1]}</a></Fragment>;\n        }\n        return <Fragment />;\n      }\n\n      let author = build.author.username ? build.author.username : build.author.name;\n\n      const desc =\n          <div key={build.id}>\n            {drop_pr_number(build.message).split('\\n')[0]}{' '}\n            <code><a href={\"https://github.com/pytorch/pytorch/commit/\" + build.id}\n                     target=\"_blank\">{build.id.slice(0, 7)}</a></code>\n          </div>;\n\n      // TODO: Too lazy to set up PR numbers for the old ones\n\n      let stale = false;\n\n      // TODO: need to store this in index or payload\n      const whenString = summarize_date(build.timestamp);\n\n      if (!found) {\n        return <Fragment key={build.id} />\n      }\n\n      return (\n        <tr key={build.id} className={stale ? \"stale\" : \"\"}>\n          <th className=\"left-cell\">{renderPullRequestNumber(build.message)}</th>\n          <td className=\"left-cell\" title={build.timestamp}>{whenString}</td>\n          {status_cols}\n          <td className=\"right-cell\">{author}</td>\n          <td className=\"right-cell\">{desc}</td>\n        </tr>\n        );\n    });\n\n    return (\n      <div>\n        <h2>\n          {this.props.job} history{' '}\n          <AsOf interval={this.props.interval}\n                connectedIn={this.state.connectedIn}\n                currentTime={this.state.currentTime}\n                updateTime={this.state.updateTime} />\n        </h2>\n        <div>\n          <ul className=\"menu\">\n            <li>\n              <input type=\"checkbox\" name=\"show-notifications\" checked={this.state.showNotifications} onChange={(e) => this.setState({showNotifications: e.target.checked}) } />\n              <label htmlFor=\"show-notifications\">Show notifications on master failure\n                { Notification.permission === \"denied\" ? <Fragment> <strong>(WARNING: notifications are currently denied)</strong></Fragment> : \"\" }\n              </label>\n            </li><br/>\n            <li>\n              <input type=\"checkbox\" name=\"show-service-jobs\" checked={this.state.showServiceJobs} onChange={(e) => this.setState({showServiceJobs: e.target.checked}) } />\n              <label htmlFor=\"show-service-jobs\">Show service jobs</label>\n            </li><br/>\n            <li>\n              <label htmlFor=\"job-name-filter\">Name filter:&nbsp;</label>\n              <input type=\"input\" name=\"job-name-filter\" value={this.state.jobNameFilter} onChange={(e) => this.setState({jobNameFilter: e.target.value}) } />\n            </li>\n          </ul>\n        </div>\n        <table className=\"buildHistoryTable\">\n          <thead>\n            <tr>\n              <th className=\"left-cell\">PR#</th>\n              <th className=\"left-cell\">Date</th>\n              {visible_jobs_head}\n              <th className=\"right-cell\">User</th>\n              <th className=\"right-cell\">Description</th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </table>\n      </div>\n    );\n  }\n\n}\n","import React, { Component, Fragment } from 'react';\nimport Tooltip from 'rc-tooltip';\nimport axios from 'axios';\n\nfunction objToStrMap(obj) {\n  let strMap = new Map();\n  for (let k of Object.keys(obj)) {\n    strMap.set(k, obj[k]);\n  }\n  return strMap;\n}\n\n// define the threshold to determine whether it is regression/optimization\nconst THRESHOLD = 0.10;\nconst ROUND_PRECISION = 100000;\n\nfunction round_float(mean) {\n  return Math.round(mean * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nexport default class PerfHistoryDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.initialState();\n  }\n  initialState() {\n    return {\n      builds: [],\n      known_jobs: [],\n      jobNameFilter: \"\",\n    }\n  }\n  componentDidMount() {\n    this.update();\n  }\n  componentDidUpdate(prevProps) {\n  }\n  async update() {\n    const url_prefix = 'https://s3.amazonaws.com/ossci-metrics/torchbench_v0_nightly';\n    // branch: v0-nightly\n    const indexes = await axios.get(`${url_prefix}/index.json`)\n    console.log(indexes.data);\n    const requests = indexes.data.map(async run => {\n      try {\n        const r = await axios.get(`${url_prefix}/${run.result.relpath}`)\n        run.sb_map = objToStrMap(r.data);\n      } catch(e) {\n        run.sb_map = new Map();\n      }\n      return run;\n    });\n    const builds = await axios.all(requests);\n    const known_jobs_set = new Set();\n    // Use the oldest benchmark run as the standard\n    const standard_benchmark = builds[0].sb_map.get(\"benchmarks\");\n    const benchmark_index = new Map();\n\n    standard_benchmark.forEach((benchmark, index) => {\n      known_jobs_set.add(benchmark[\"name\"]);\n      benchmark_index.set(benchmark[\"name\"], index);\n    });\n    console.log(known_jobs_set);\n    // Figure out if we think there is performance regression or not.\n    // 1. If the test mean is >10% smaller than the previous mean, it is an optimization\n    // 3. If the test mean is >10% larger than the previous mean, it is a regression\n    // 4. Otherwise, it is a stable result\n    for (let i = 0; i < builds.length; i++) {\n      const sb_map = builds[i].sb_map;\n      // Get the test\n      sb_map.get(\"benchmarks\").forEach((benchmark) => {\n        const build_benchmark_mean = benchmark[\"stats\"][\"mean\"];\n        const build_benchmark_index = benchmark_index.get(benchmark[\"name\"]);\n        if (i === 0) {\n          benchmark[\"stats\"][\"prev_mean\"] = build_benchmark_mean;\n        } else {\n          const prev_mean = builds[i-1].sb_map.get(\"benchmarks\")[build_benchmark_index][\"stats\"][\"mean\"];\n          benchmark[\"stats\"][\"prev_mean\"] = prev_mean;\n        }\n      });\n    }\n\n    builds.reverse();\n\n    const data = {};\n    data.known_jobs = [...known_jobs_set.values()].sort();\n    data.benchmark_index = benchmark_index;\n    data.builds = builds;\n    this.setState(data);\n  }\n\n  shouldShowJob(name) {\n     const jobNameFilter = this.state.jobNameFilter;\n     if (jobNameFilter.length > 0 && !name.includes(jobNameFilter)) {\n         return false;\n     }\n     return true;\n  }\n\n  render() {\n    function gen_summary(delta) {\n      delta = Math.round(delta * 10000) / 100;\n      if (delta >= 0) {\n        delta = \"+\" + delta;\n      }\n      delta += \"%\";\n      return delta;\n    }\n\n    function is_optimized(delta) {\n      return (delta < (-1 * THRESHOLD));\n    }\n\n    function is_regression(delta) {\n      return (delta > THRESHOLD);\n    }\n\n    function result_icon(result) {\n      if (is_optimized(result)) return <span role=\"img\" style={{color:\"green\"}} aria-label=\"passed\">0</span>;\n      if (is_regression(result)) return <span role=\"img\" style={{color:\"red\"}} aria-label=\"failed\">X</span>;\n      return <span role=\"img\" style={{color:\"grey\"}} aria-label=\"passed\">-</span>;\n    }\n\n    let builds = this.state.builds;\n    const visible_jobs = this.state.known_jobs.filter((name) => this.shouldShowJob(name));\n    const visible_jobs_head = visible_jobs.map((jobName) =>\n      <th className=\"rotate\" key={jobName} width=\"20px;\"><div>{jobName}</div></th>);\n    const benchmark_index = this.state.benchmark_index;\n\n    const rows = builds.map((build) => {\n      const sb_map = build.sb_map;\n      const pytorch_version = build.sb_map.get(\"machine_info\")[\"pytorch_version\"];\n      const status_cols = visible_jobs.map((jobName) => {\n        const sb = sb_map.get(\"benchmarks\")[benchmark_index.get(jobName)];\n        const colkey = pytorch_version + \"-\" + jobName;\n        let cell = <Fragment />;\n        const prev_delta = (sb[\"stats\"][\"mean\"] - sb[\"stats\"][\"prev_mean\"]) / sb[\"stats\"][\"prev_mean\"];\n        if (sb !== undefined) {\n          cell = result_icon(prev_delta);\n        }\n        return <Tooltip\n          key={jobName}\n          overlay={jobName + \" Mean: \" + round_float(sb[\"stats\"][\"mean\"])\n                   + \", prev mean: \" + round_float(sb[\"stats\"][\"prev_mean\"])\n                   + \", delta: \" + gen_summary(prev_delta)}\n          mouseLeaveDelay={0}\n          placement=\"rightTop\"\n          destroyTooltipOnHide={true}>\n          <td key={colkey} className=\"icon-cell\" style={{textAlign: \"right\", fontFamily: \"sans-serif\", padding: 0}}> {cell} </td></Tooltip>;\n      });\n\n      return (\n        <tr key={pytorch_version}>\n          <th className=\"left-cell\"> torch-{pytorch_version} </th>\n          {status_cols}\n        </tr>\n      );\n    });\n    return (\n      <div>\n        <h2>TorchBench v0 nightly testing result</h2>\n        <div>\n          <ul className=\"menu\">\n         </ul>\n        </div>\n        <table className=\"perfHistoryTable\">\n          <thead>\n            <tr>\n              <th className=\"left-cell\">Build</th>\n              {visible_jobs_head}\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\nimport \"./App.css\";\nimport ComputerDisplay from \"./ComputerDisplay.js\";\nimport QueueDisplay from \"./QueueDisplay.js\";\nimport GitHubActionsDisplay from \"./GitHubActionsDisplay\";\nimport JobCorrelationHeatmap from \"./JobCorrelationHeatmap\";\nimport BuildHistoryDisplay from \"./BuildHistoryDisplay.js\";\nimport GitHubStatusDisplay from \"./GitHubStatusDisplay.js\";\nimport PerfHistoryDisplay from \"./PerfHistoryDisplay.js\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL + \"/\"}>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"App-title\">\n          <Link to=\"/\">ci.pytorch.org HUD</Link> (\n          <a href=\"https://github.com/pytorch/pytorch-ci-hud\">GitHub</a>)\n        </h1>\n      </header>\n      <ul className=\"menu\">\n        <li>New-style (warning, does NOT show Jenkins builds):</li>\n        {[\"pytorch\"].map((e) => (\n          <Fragment key={e}>\n            {[\"master\", \"nightly\", \"release/1.9\"].map((trigger) => (\n              <li key={`${e}-${trigger}`}>\n                <Link to={`/build2/${e}-${trigger}`}>\n                  {e}-{trigger}\n                </Link>\n                &nbsp; (\n                <Link to={`/build2/${e}-${trigger}?mode=nightly`}>binary</Link>)\n              </li>\n            ))}\n          </Fragment>\n        ))}\n        {[\"torchbench-v0-nightly\", \"status\"].map((e) => (\n          <li key={`${e}`}>\n            <Link to={`/${e}`}>{e}</Link>\n          </li>\n        ))}\n      </ul>\n      <ul className=\"deprecated-menu\">\n        <li>Old-style:</li>\n        {[\n          \"pytorch\",\n          // \"tensorcomp\",\n          // \"translate\",\n          \"rocm-pytorch\",\n        ].map((e) => (\n          <Fragment key={e}>\n            {[\"master\", \"pull-request\"].map((trigger) => (\n              <li key={e + \"-\" + trigger}>\n                <Link to={\"/build1/\" + e + \"-\" + trigger}>\n                  {e}-{trigger}\n                </Link>\n                &nbsp; (\n                <Link to={\"/build1/\" + e + \"-\" + trigger + \"?mode=perf\"}>\n                  perf\n                </Link>\n                /\n                <Link to={\"/build1/\" + e + \"-\" + trigger + \"?mode=cost\"}>\n                  cost\n                </Link>\n                {e === \"pytorch\" && trigger === \"master\" ? (\n                  <Fragment>\n                    /\n                    <Link to={\"/build1/\" + e + \"-\" + trigger + \"?mode=binary\"}>\n                      binary\n                    </Link>\n                  </Fragment>\n                ) : (\n                  <Fragment />\n                )}\n                )\n              </li>\n            ))}\n          </Fragment>\n        ))}\n        <Fragment key=\"nightlies-uploaded\">\n          <li>\n            <Link to={\"/build1/nightlies-uploaded\"}>nightlies-uploaded</Link>\n          </li>\n        </Fragment>\n      </ul>\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/build2/pytorch-master\" />\n        </Route>\n        {/* <Route exact path=\"/\"><GitHubStatusDisplay interval={60000} job=\"pytorch-master\" /></Route> */}\n        <Route path=\"/build\" component={BuildRoute} />\n        <Route path=\"/build1\" component={Build1Route} />\n        <Route path=\"/build2\" component={Build2Route} />\n        <Route path=\"/torchbench-v0-nightly\" component={TorchBenchRoute} />\n        <Route exact path=\"/status\" component={Status} />\n      </Switch>\n    </div>\n  </Router>\n);\n\n//    <ul className=\"menu\">\n//      {[\n//       \"linux-trusty-py2.7-trigger\",\n//       \"linux-trusty-py2.7.9-trigger\",\n//       \"linux-trusty-py3.5-trigger\",\n//       \"linux-trusty-py3.6-gcc4.8-trigger\",\n//       \"linux-trusty-py3.6-gcc5.4-trigger\",\n//       \"linux-trusty-py3.6-gcc7.2-trigger\",\n//       \"linux-trusty-pynightly-trigger\",\n//       \"linux-xenial-cuda8-cudnn6-py3-trigger\",\n//       \"linux-xenial-cuda9-cudnn7-py2-trigger\",\n//       \"linux-xenial-cuda9-cudnn7-py3-trigger\",\n//       \"linux-xenial-py3-clang5-asan-trigger\",\n//       \"win-ws2016-cuda9-cudnn7-py3-trigger\",\n//      ].map((e) => <li key={e}><Link to={\"/build/pytorch-builds/job/pytorch-\" + e}>{e}</Link></li>)}\n//    </ul>\n\nconst Status = () => (\n  <div>\n    <GitHubActionsDisplay interval={5000} />\n    <JobCorrelationHeatmap interval={5000} />\n    <QueueDisplay interval={1000} />\n    <ComputerDisplay interval={1000} />\n  </div>\n);\n\nconst Build = ({ match }) => {\n  // Uhhh, am I really supposed to rob window.location here?\n  const query = new URLSearchParams(window.location.search);\n  return (\n    <BuildHistoryDisplay\n      interval={60000}\n      job={match.url.replace(/^\\/build\\//, \"\")}\n      mode={query.get(\"mode\")}\n    />\n  );\n};\n\nconst Build1 = ({ match }) => {\n  // Uhhh, am I really supposed to rob window.location here?\n  const query = new URLSearchParams(window.location.search);\n  return (\n    <BuildHistoryDisplay\n      interval={60000}\n      job={match.url.replace(/^\\/build1\\//, \"\")}\n      mode={query.get(\"mode\")}\n    />\n  );\n};\n\nconst Build2 = ({ match }) => {\n  // Uhhh, am I really supposed to rob window.location here?\n  const query = new URLSearchParams(window.location.search);\n  return (\n    <GitHubStatusDisplay\n      interval={60000}\n      job={match.url.replace(/^\\/build2\\//, \"\")}\n      mode={query.get(\"mode\")}\n    />\n  );\n};\n\nconst BuildRoute = ({ match }) => (\n  <Fragment>\n    <Route exact path={match.url} component={Build} />\n    <Route path={`${match.url}/:segment`} component={BuildRoute} />\n  </Fragment>\n);\n\nconst Build1Route = ({ match }) => (\n  <Fragment>\n    <Route exact path={match.url} component={Build1} />\n    <Route path={`${match.url}/:segment`} component={Build1Route} />\n  </Fragment>\n);\n\nconst Build2Route = ({ match }) => (\n  <Fragment>\n    <Route exact path={match.url} component={Build2} />\n    <Route path={`${match.url}/:segment`} component={Build2Route} />\n  </Fragment>\n);\n\nconst TorchBenchRoute = ({ match }) => (\n  <Fragment>\n    <Route exact path={match.url} component={PerfHistoryDisplay} />\n  </Fragment>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}